;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Top : 
  module BPU : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst_packet_i : {valid : UInt<1>, bits : {data : UInt<32>[8], addr : UInt<32>}}, resp_o : {valid : UInt<1>, bits : {predict_addr : UInt<32>, is_taken : UInt<1>, take_delay : UInt<1>}}, bpu_inst_packet_o : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>[8], addr : UInt<32>, gh_backup : UInt<4>, valid_mask : UInt<1>[8], delay_mask : UInt<1>[8], branch_mask : UInt<1>[8], predict_mask : UInt<1>[8]}}, flip branch_info_i : {valid : UInt<1>, bits : {target_addr : UInt<32>, inst_addr : UInt<32>, gh_update : UInt<4>, is_branch : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip is_delay : UInt<1>, flip need_flush : UInt<1>, bpu_debug : {branch_mask : UInt<8>, fetched_mask : UInt<8>, predict_branch : UInt<8>, predict_addr : UInt<32>, is_taken : UInt<1>, take_delay : UInt<1>, inst_packet : UInt<32>[8]}}
    
    reg global_history : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Bpu.scala 73:31]
    wire _predictor_WIRE : UInt<2>[128] @[Bpu.scala 74:39]
    _predictor_WIRE[0] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[1] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[2] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[3] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[4] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[5] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[6] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[7] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[8] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[9] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[10] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[11] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[12] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[13] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[14] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[15] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[16] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[17] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[18] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[19] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[20] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[21] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[22] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[23] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[24] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[25] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[26] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[27] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[28] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[29] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[30] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[31] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[32] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[33] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[34] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[35] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[36] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[37] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[38] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[39] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[40] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[41] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[42] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[43] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[44] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[45] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[46] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[47] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[48] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[49] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[50] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[51] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[52] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[53] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[54] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[55] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[56] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[57] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[58] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[59] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[60] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[61] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[62] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[63] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[64] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[65] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[66] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[67] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[68] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[69] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[70] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[71] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[72] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[73] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[74] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[75] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[76] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[77] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[78] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[79] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[80] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[81] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[82] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[83] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[84] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[85] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[86] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[87] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[88] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[89] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[90] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[91] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[92] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[93] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[94] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[95] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[96] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[97] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[98] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[99] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[100] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[101] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[102] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[103] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[104] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[105] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[106] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[107] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[108] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[109] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[110] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[111] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[112] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[113] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[114] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[115] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[116] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[117] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[118] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[119] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[120] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[121] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[122] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[123] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[124] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[125] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[126] <= UInt<2>("h02") @[Bpu.scala 74:39]
    _predictor_WIRE[127] <= UInt<2>("h02") @[Bpu.scala 74:39]
    reg predictor : UInt<2>[128], clock with : (reset => (reset, _predictor_WIRE)) @[Bpu.scala 74:31]
    node _branch_mask_T = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_1 = eq(UInt<29>("h010000000"), _branch_mask_T) @[Lookup.scala 31:38]
    node _branch_mask_T_2 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_3 = eq(UInt<29>("h014000000"), _branch_mask_T_2) @[Lookup.scala 31:38]
    node _branch_mask_T_4 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_5 = eq(UInt<29>("h018000000"), _branch_mask_T_4) @[Lookup.scala 31:38]
    node _branch_mask_T_6 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_7 = eq(UInt<29>("h01c000000"), _branch_mask_T_6) @[Lookup.scala 31:38]
    node _branch_mask_T_8 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_9 = eq(UInt<27>("h04000000"), _branch_mask_T_8) @[Lookup.scala 31:38]
    node _branch_mask_T_10 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_11 = eq(UInt<27>("h04010000"), _branch_mask_T_10) @[Lookup.scala 31:38]
    node _branch_mask_T_12 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_13 = eq(UInt<27>("h04010000"), _branch_mask_T_12) @[Lookup.scala 31:38]
    node _branch_mask_T_14 = and(io.inst_packet_i.bits.data[0], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_15 = eq(UInt<29>("h018000000"), _branch_mask_T_14) @[Lookup.scala 31:38]
    node _branch_mask_T_16 = mux(_branch_mask_T_15, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_17 = mux(_branch_mask_T_13, UInt<1>("h01"), _branch_mask_T_16) @[Lookup.scala 33:37]
    node _branch_mask_T_18 = mux(_branch_mask_T_11, UInt<1>("h01"), _branch_mask_T_17) @[Lookup.scala 33:37]
    node _branch_mask_T_19 = mux(_branch_mask_T_9, UInt<1>("h01"), _branch_mask_T_18) @[Lookup.scala 33:37]
    node _branch_mask_T_20 = mux(_branch_mask_T_7, UInt<1>("h01"), _branch_mask_T_19) @[Lookup.scala 33:37]
    node _branch_mask_T_21 = mux(_branch_mask_T_5, UInt<1>("h01"), _branch_mask_T_20) @[Lookup.scala 33:37]
    node _branch_mask_T_22 = mux(_branch_mask_T_3, UInt<1>("h01"), _branch_mask_T_21) @[Lookup.scala 33:37]
    node branch_mask_0 = mux(_branch_mask_T_1, UInt<1>("h01"), _branch_mask_T_22) @[Lookup.scala 33:37]
    node _branch_mask_T_23 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_24 = eq(UInt<29>("h010000000"), _branch_mask_T_23) @[Lookup.scala 31:38]
    node _branch_mask_T_25 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_26 = eq(UInt<29>("h014000000"), _branch_mask_T_25) @[Lookup.scala 31:38]
    node _branch_mask_T_27 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_28 = eq(UInt<29>("h018000000"), _branch_mask_T_27) @[Lookup.scala 31:38]
    node _branch_mask_T_29 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_30 = eq(UInt<29>("h01c000000"), _branch_mask_T_29) @[Lookup.scala 31:38]
    node _branch_mask_T_31 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_32 = eq(UInt<27>("h04000000"), _branch_mask_T_31) @[Lookup.scala 31:38]
    node _branch_mask_T_33 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_34 = eq(UInt<27>("h04010000"), _branch_mask_T_33) @[Lookup.scala 31:38]
    node _branch_mask_T_35 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_36 = eq(UInt<27>("h04010000"), _branch_mask_T_35) @[Lookup.scala 31:38]
    node _branch_mask_T_37 = and(io.inst_packet_i.bits.data[1], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_38 = eq(UInt<29>("h018000000"), _branch_mask_T_37) @[Lookup.scala 31:38]
    node _branch_mask_T_39 = mux(_branch_mask_T_38, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_40 = mux(_branch_mask_T_36, UInt<1>("h01"), _branch_mask_T_39) @[Lookup.scala 33:37]
    node _branch_mask_T_41 = mux(_branch_mask_T_34, UInt<1>("h01"), _branch_mask_T_40) @[Lookup.scala 33:37]
    node _branch_mask_T_42 = mux(_branch_mask_T_32, UInt<1>("h01"), _branch_mask_T_41) @[Lookup.scala 33:37]
    node _branch_mask_T_43 = mux(_branch_mask_T_30, UInt<1>("h01"), _branch_mask_T_42) @[Lookup.scala 33:37]
    node _branch_mask_T_44 = mux(_branch_mask_T_28, UInt<1>("h01"), _branch_mask_T_43) @[Lookup.scala 33:37]
    node _branch_mask_T_45 = mux(_branch_mask_T_26, UInt<1>("h01"), _branch_mask_T_44) @[Lookup.scala 33:37]
    node branch_mask_1 = mux(_branch_mask_T_24, UInt<1>("h01"), _branch_mask_T_45) @[Lookup.scala 33:37]
    node _branch_mask_T_46 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_47 = eq(UInt<29>("h010000000"), _branch_mask_T_46) @[Lookup.scala 31:38]
    node _branch_mask_T_48 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_49 = eq(UInt<29>("h014000000"), _branch_mask_T_48) @[Lookup.scala 31:38]
    node _branch_mask_T_50 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_51 = eq(UInt<29>("h018000000"), _branch_mask_T_50) @[Lookup.scala 31:38]
    node _branch_mask_T_52 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_53 = eq(UInt<29>("h01c000000"), _branch_mask_T_52) @[Lookup.scala 31:38]
    node _branch_mask_T_54 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_55 = eq(UInt<27>("h04000000"), _branch_mask_T_54) @[Lookup.scala 31:38]
    node _branch_mask_T_56 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_57 = eq(UInt<27>("h04010000"), _branch_mask_T_56) @[Lookup.scala 31:38]
    node _branch_mask_T_58 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_59 = eq(UInt<27>("h04010000"), _branch_mask_T_58) @[Lookup.scala 31:38]
    node _branch_mask_T_60 = and(io.inst_packet_i.bits.data[2], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_61 = eq(UInt<29>("h018000000"), _branch_mask_T_60) @[Lookup.scala 31:38]
    node _branch_mask_T_62 = mux(_branch_mask_T_61, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_63 = mux(_branch_mask_T_59, UInt<1>("h01"), _branch_mask_T_62) @[Lookup.scala 33:37]
    node _branch_mask_T_64 = mux(_branch_mask_T_57, UInt<1>("h01"), _branch_mask_T_63) @[Lookup.scala 33:37]
    node _branch_mask_T_65 = mux(_branch_mask_T_55, UInt<1>("h01"), _branch_mask_T_64) @[Lookup.scala 33:37]
    node _branch_mask_T_66 = mux(_branch_mask_T_53, UInt<1>("h01"), _branch_mask_T_65) @[Lookup.scala 33:37]
    node _branch_mask_T_67 = mux(_branch_mask_T_51, UInt<1>("h01"), _branch_mask_T_66) @[Lookup.scala 33:37]
    node _branch_mask_T_68 = mux(_branch_mask_T_49, UInt<1>("h01"), _branch_mask_T_67) @[Lookup.scala 33:37]
    node branch_mask_2 = mux(_branch_mask_T_47, UInt<1>("h01"), _branch_mask_T_68) @[Lookup.scala 33:37]
    node _branch_mask_T_69 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_70 = eq(UInt<29>("h010000000"), _branch_mask_T_69) @[Lookup.scala 31:38]
    node _branch_mask_T_71 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_72 = eq(UInt<29>("h014000000"), _branch_mask_T_71) @[Lookup.scala 31:38]
    node _branch_mask_T_73 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_74 = eq(UInt<29>("h018000000"), _branch_mask_T_73) @[Lookup.scala 31:38]
    node _branch_mask_T_75 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_76 = eq(UInt<29>("h01c000000"), _branch_mask_T_75) @[Lookup.scala 31:38]
    node _branch_mask_T_77 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_78 = eq(UInt<27>("h04000000"), _branch_mask_T_77) @[Lookup.scala 31:38]
    node _branch_mask_T_79 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_80 = eq(UInt<27>("h04010000"), _branch_mask_T_79) @[Lookup.scala 31:38]
    node _branch_mask_T_81 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_82 = eq(UInt<27>("h04010000"), _branch_mask_T_81) @[Lookup.scala 31:38]
    node _branch_mask_T_83 = and(io.inst_packet_i.bits.data[3], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_84 = eq(UInt<29>("h018000000"), _branch_mask_T_83) @[Lookup.scala 31:38]
    node _branch_mask_T_85 = mux(_branch_mask_T_84, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_86 = mux(_branch_mask_T_82, UInt<1>("h01"), _branch_mask_T_85) @[Lookup.scala 33:37]
    node _branch_mask_T_87 = mux(_branch_mask_T_80, UInt<1>("h01"), _branch_mask_T_86) @[Lookup.scala 33:37]
    node _branch_mask_T_88 = mux(_branch_mask_T_78, UInt<1>("h01"), _branch_mask_T_87) @[Lookup.scala 33:37]
    node _branch_mask_T_89 = mux(_branch_mask_T_76, UInt<1>("h01"), _branch_mask_T_88) @[Lookup.scala 33:37]
    node _branch_mask_T_90 = mux(_branch_mask_T_74, UInt<1>("h01"), _branch_mask_T_89) @[Lookup.scala 33:37]
    node _branch_mask_T_91 = mux(_branch_mask_T_72, UInt<1>("h01"), _branch_mask_T_90) @[Lookup.scala 33:37]
    node branch_mask_3 = mux(_branch_mask_T_70, UInt<1>("h01"), _branch_mask_T_91) @[Lookup.scala 33:37]
    node _branch_mask_T_92 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_93 = eq(UInt<29>("h010000000"), _branch_mask_T_92) @[Lookup.scala 31:38]
    node _branch_mask_T_94 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_95 = eq(UInt<29>("h014000000"), _branch_mask_T_94) @[Lookup.scala 31:38]
    node _branch_mask_T_96 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_97 = eq(UInt<29>("h018000000"), _branch_mask_T_96) @[Lookup.scala 31:38]
    node _branch_mask_T_98 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_99 = eq(UInt<29>("h01c000000"), _branch_mask_T_98) @[Lookup.scala 31:38]
    node _branch_mask_T_100 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_101 = eq(UInt<27>("h04000000"), _branch_mask_T_100) @[Lookup.scala 31:38]
    node _branch_mask_T_102 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_103 = eq(UInt<27>("h04010000"), _branch_mask_T_102) @[Lookup.scala 31:38]
    node _branch_mask_T_104 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_105 = eq(UInt<27>("h04010000"), _branch_mask_T_104) @[Lookup.scala 31:38]
    node _branch_mask_T_106 = and(io.inst_packet_i.bits.data[4], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_107 = eq(UInt<29>("h018000000"), _branch_mask_T_106) @[Lookup.scala 31:38]
    node _branch_mask_T_108 = mux(_branch_mask_T_107, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_109 = mux(_branch_mask_T_105, UInt<1>("h01"), _branch_mask_T_108) @[Lookup.scala 33:37]
    node _branch_mask_T_110 = mux(_branch_mask_T_103, UInt<1>("h01"), _branch_mask_T_109) @[Lookup.scala 33:37]
    node _branch_mask_T_111 = mux(_branch_mask_T_101, UInt<1>("h01"), _branch_mask_T_110) @[Lookup.scala 33:37]
    node _branch_mask_T_112 = mux(_branch_mask_T_99, UInt<1>("h01"), _branch_mask_T_111) @[Lookup.scala 33:37]
    node _branch_mask_T_113 = mux(_branch_mask_T_97, UInt<1>("h01"), _branch_mask_T_112) @[Lookup.scala 33:37]
    node _branch_mask_T_114 = mux(_branch_mask_T_95, UInt<1>("h01"), _branch_mask_T_113) @[Lookup.scala 33:37]
    node branch_mask_4 = mux(_branch_mask_T_93, UInt<1>("h01"), _branch_mask_T_114) @[Lookup.scala 33:37]
    node _branch_mask_T_115 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_116 = eq(UInt<29>("h010000000"), _branch_mask_T_115) @[Lookup.scala 31:38]
    node _branch_mask_T_117 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_118 = eq(UInt<29>("h014000000"), _branch_mask_T_117) @[Lookup.scala 31:38]
    node _branch_mask_T_119 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_120 = eq(UInt<29>("h018000000"), _branch_mask_T_119) @[Lookup.scala 31:38]
    node _branch_mask_T_121 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_122 = eq(UInt<29>("h01c000000"), _branch_mask_T_121) @[Lookup.scala 31:38]
    node _branch_mask_T_123 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_124 = eq(UInt<27>("h04000000"), _branch_mask_T_123) @[Lookup.scala 31:38]
    node _branch_mask_T_125 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_126 = eq(UInt<27>("h04010000"), _branch_mask_T_125) @[Lookup.scala 31:38]
    node _branch_mask_T_127 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_128 = eq(UInt<27>("h04010000"), _branch_mask_T_127) @[Lookup.scala 31:38]
    node _branch_mask_T_129 = and(io.inst_packet_i.bits.data[5], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_130 = eq(UInt<29>("h018000000"), _branch_mask_T_129) @[Lookup.scala 31:38]
    node _branch_mask_T_131 = mux(_branch_mask_T_130, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_132 = mux(_branch_mask_T_128, UInt<1>("h01"), _branch_mask_T_131) @[Lookup.scala 33:37]
    node _branch_mask_T_133 = mux(_branch_mask_T_126, UInt<1>("h01"), _branch_mask_T_132) @[Lookup.scala 33:37]
    node _branch_mask_T_134 = mux(_branch_mask_T_124, UInt<1>("h01"), _branch_mask_T_133) @[Lookup.scala 33:37]
    node _branch_mask_T_135 = mux(_branch_mask_T_122, UInt<1>("h01"), _branch_mask_T_134) @[Lookup.scala 33:37]
    node _branch_mask_T_136 = mux(_branch_mask_T_120, UInt<1>("h01"), _branch_mask_T_135) @[Lookup.scala 33:37]
    node _branch_mask_T_137 = mux(_branch_mask_T_118, UInt<1>("h01"), _branch_mask_T_136) @[Lookup.scala 33:37]
    node branch_mask_5 = mux(_branch_mask_T_116, UInt<1>("h01"), _branch_mask_T_137) @[Lookup.scala 33:37]
    node _branch_mask_T_138 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_139 = eq(UInt<29>("h010000000"), _branch_mask_T_138) @[Lookup.scala 31:38]
    node _branch_mask_T_140 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_141 = eq(UInt<29>("h014000000"), _branch_mask_T_140) @[Lookup.scala 31:38]
    node _branch_mask_T_142 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_143 = eq(UInt<29>("h018000000"), _branch_mask_T_142) @[Lookup.scala 31:38]
    node _branch_mask_T_144 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_145 = eq(UInt<29>("h01c000000"), _branch_mask_T_144) @[Lookup.scala 31:38]
    node _branch_mask_T_146 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_147 = eq(UInt<27>("h04000000"), _branch_mask_T_146) @[Lookup.scala 31:38]
    node _branch_mask_T_148 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_149 = eq(UInt<27>("h04010000"), _branch_mask_T_148) @[Lookup.scala 31:38]
    node _branch_mask_T_150 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_151 = eq(UInt<27>("h04010000"), _branch_mask_T_150) @[Lookup.scala 31:38]
    node _branch_mask_T_152 = and(io.inst_packet_i.bits.data[6], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_153 = eq(UInt<29>("h018000000"), _branch_mask_T_152) @[Lookup.scala 31:38]
    node _branch_mask_T_154 = mux(_branch_mask_T_153, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_155 = mux(_branch_mask_T_151, UInt<1>("h01"), _branch_mask_T_154) @[Lookup.scala 33:37]
    node _branch_mask_T_156 = mux(_branch_mask_T_149, UInt<1>("h01"), _branch_mask_T_155) @[Lookup.scala 33:37]
    node _branch_mask_T_157 = mux(_branch_mask_T_147, UInt<1>("h01"), _branch_mask_T_156) @[Lookup.scala 33:37]
    node _branch_mask_T_158 = mux(_branch_mask_T_145, UInt<1>("h01"), _branch_mask_T_157) @[Lookup.scala 33:37]
    node _branch_mask_T_159 = mux(_branch_mask_T_143, UInt<1>("h01"), _branch_mask_T_158) @[Lookup.scala 33:37]
    node _branch_mask_T_160 = mux(_branch_mask_T_141, UInt<1>("h01"), _branch_mask_T_159) @[Lookup.scala 33:37]
    node branch_mask_6 = mux(_branch_mask_T_139, UInt<1>("h01"), _branch_mask_T_160) @[Lookup.scala 33:37]
    node _branch_mask_T_161 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_162 = eq(UInt<29>("h010000000"), _branch_mask_T_161) @[Lookup.scala 31:38]
    node _branch_mask_T_163 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _branch_mask_T_164 = eq(UInt<29>("h014000000"), _branch_mask_T_163) @[Lookup.scala 31:38]
    node _branch_mask_T_165 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_166 = eq(UInt<29>("h018000000"), _branch_mask_T_165) @[Lookup.scala 31:38]
    node _branch_mask_T_167 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_168 = eq(UInt<29>("h01c000000"), _branch_mask_T_167) @[Lookup.scala 31:38]
    node _branch_mask_T_169 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_170 = eq(UInt<27>("h04000000"), _branch_mask_T_169) @[Lookup.scala 31:38]
    node _branch_mask_T_171 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_172 = eq(UInt<27>("h04010000"), _branch_mask_T_171) @[Lookup.scala 31:38]
    node _branch_mask_T_173 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_174 = eq(UInt<27>("h04010000"), _branch_mask_T_173) @[Lookup.scala 31:38]
    node _branch_mask_T_175 = and(io.inst_packet_i.bits.data[7], UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _branch_mask_T_176 = eq(UInt<29>("h018000000"), _branch_mask_T_175) @[Lookup.scala 31:38]
    node _branch_mask_T_177 = mux(_branch_mask_T_176, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _branch_mask_T_178 = mux(_branch_mask_T_174, UInt<1>("h01"), _branch_mask_T_177) @[Lookup.scala 33:37]
    node _branch_mask_T_179 = mux(_branch_mask_T_172, UInt<1>("h01"), _branch_mask_T_178) @[Lookup.scala 33:37]
    node _branch_mask_T_180 = mux(_branch_mask_T_170, UInt<1>("h01"), _branch_mask_T_179) @[Lookup.scala 33:37]
    node _branch_mask_T_181 = mux(_branch_mask_T_168, UInt<1>("h01"), _branch_mask_T_180) @[Lookup.scala 33:37]
    node _branch_mask_T_182 = mux(_branch_mask_T_166, UInt<1>("h01"), _branch_mask_T_181) @[Lookup.scala 33:37]
    node _branch_mask_T_183 = mux(_branch_mask_T_164, UInt<1>("h01"), _branch_mask_T_182) @[Lookup.scala 33:37]
    node branch_mask_7 = mux(_branch_mask_T_162, UInt<1>("h01"), _branch_mask_T_183) @[Lookup.scala 33:37]
    node _fetched_mask_T = bits(io.inst_packet_i.bits.addr, 4, 2) @[Bpu.scala 89:102]
    node _fetched_mask_T_1 = dshl(UInt<1>("h01"), _fetched_mask_T) @[OneHot.scala 58:35]
    node _fetched_mask_T_2 = bits(_fetched_mask_T_1, 0, 0) @[Bpu.scala 89:137]
    node _fetched_mask_T_3 = bits(_fetched_mask_T_1, 1, 1) @[Bpu.scala 89:137]
    node _fetched_mask_T_4 = bits(_fetched_mask_T_1, 2, 2) @[Bpu.scala 89:137]
    node _fetched_mask_T_5 = bits(_fetched_mask_T_1, 3, 3) @[Bpu.scala 89:137]
    node _fetched_mask_T_6 = bits(_fetched_mask_T_1, 4, 4) @[Bpu.scala 89:137]
    node _fetched_mask_T_7 = bits(_fetched_mask_T_1, 5, 5) @[Bpu.scala 89:137]
    node _fetched_mask_T_8 = bits(_fetched_mask_T_1, 6, 6) @[Bpu.scala 89:137]
    node _fetched_mask_T_9 = bits(_fetched_mask_T_1, 7, 7) @[Bpu.scala 89:137]
    node _fetched_mask_T_10 = or(UInt<1>("h00"), _fetched_mask_T_2) @[Bpu.scala 89:160]
    node _fetched_mask_T_11 = or(_fetched_mask_T_10, _fetched_mask_T_3) @[Bpu.scala 89:160]
    node _fetched_mask_T_12 = or(_fetched_mask_T_11, _fetched_mask_T_4) @[Bpu.scala 89:160]
    node _fetched_mask_T_13 = or(_fetched_mask_T_12, _fetched_mask_T_5) @[Bpu.scala 89:160]
    node _fetched_mask_T_14 = or(_fetched_mask_T_13, _fetched_mask_T_6) @[Bpu.scala 89:160]
    node _fetched_mask_T_15 = or(_fetched_mask_T_14, _fetched_mask_T_7) @[Bpu.scala 89:160]
    node _fetched_mask_T_16 = or(_fetched_mask_T_15, _fetched_mask_T_8) @[Bpu.scala 89:160]
    node _fetched_mask_T_17 = or(_fetched_mask_T_16, _fetched_mask_T_9) @[Bpu.scala 89:160]
    wire _fetched_mask_WIRE : UInt<1>[8] @[Bpu.scala 89:66]
    _fetched_mask_WIRE[0] <= _fetched_mask_T_10 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[1] <= _fetched_mask_T_11 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[2] <= _fetched_mask_T_12 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[3] <= _fetched_mask_T_13 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[4] <= _fetched_mask_T_14 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[5] <= _fetched_mask_T_15 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[6] <= _fetched_mask_T_16 @[Bpu.scala 89:66]
    _fetched_mask_WIRE[7] <= _fetched_mask_T_17 @[Bpu.scala 89:66]
    node fetched_mask_lo_lo = cat(_fetched_mask_WIRE[1], _fetched_mask_WIRE[0]) @[Bpu.scala 89:180]
    node fetched_mask_lo_hi = cat(_fetched_mask_WIRE[3], _fetched_mask_WIRE[2]) @[Bpu.scala 89:180]
    node fetched_mask_lo = cat(fetched_mask_lo_hi, fetched_mask_lo_lo) @[Bpu.scala 89:180]
    node fetched_mask_hi_lo = cat(_fetched_mask_WIRE[5], _fetched_mask_WIRE[4]) @[Bpu.scala 89:180]
    node fetched_mask_hi_hi = cat(_fetched_mask_WIRE[7], _fetched_mask_WIRE[6]) @[Bpu.scala 89:180]
    node fetched_mask_hi = cat(fetched_mask_hi_hi, fetched_mask_hi_lo) @[Bpu.scala 89:180]
    node _fetched_mask_T_18 = cat(fetched_mask_hi, fetched_mask_lo) @[Bpu.scala 89:180]
    node _fetched_mask_T_19 = mux(io.is_delay, UInt<8>("h01"), _fetched_mask_T_18) @[Bpu.scala 89:25]
    node fetched_mask_0 = bits(_fetched_mask_T_19, 0, 0) @[Bpu.scala 89:191]
    node fetched_mask_1 = bits(_fetched_mask_T_19, 1, 1) @[Bpu.scala 89:191]
    node fetched_mask_2 = bits(_fetched_mask_T_19, 2, 2) @[Bpu.scala 89:191]
    node fetched_mask_3 = bits(_fetched_mask_T_19, 3, 3) @[Bpu.scala 89:191]
    node fetched_mask_4 = bits(_fetched_mask_T_19, 4, 4) @[Bpu.scala 89:191]
    node fetched_mask_5 = bits(_fetched_mask_T_19, 5, 5) @[Bpu.scala 89:191]
    node fetched_mask_6 = bits(_fetched_mask_T_19, 6, 6) @[Bpu.scala 89:191]
    node fetched_mask_7 = bits(_fetched_mask_T_19, 7, 7) @[Bpu.scala 89:191]
    node need_predict_0 = and(branch_mask_0, fetched_mask_0) @[Bpu.scala 91:67]
    node need_predict_1 = and(branch_mask_1, fetched_mask_1) @[Bpu.scala 91:67]
    node need_predict_2 = and(branch_mask_2, fetched_mask_2) @[Bpu.scala 91:67]
    node need_predict_3 = and(branch_mask_3, fetched_mask_3) @[Bpu.scala 91:67]
    node need_predict_4 = and(branch_mask_4, fetched_mask_4) @[Bpu.scala 91:67]
    node need_predict_5 = and(branch_mask_5, fetched_mask_5) @[Bpu.scala 91:67]
    node need_predict_6 = and(branch_mask_6, fetched_mask_6) @[Bpu.scala 91:67]
    node need_predict_7 = and(branch_mask_7, fetched_mask_7) @[Bpu.scala 91:67]
    node predictor_idx_hi_lo = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi = cat(global_history, predictor_idx_hi_lo) @[Cat.scala 30:58]
    node _predictor_idx_T = cat(predictor_idx_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_1 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_1 = cat(global_history, predictor_idx_hi_lo_1) @[Cat.scala 30:58]
    node _predictor_idx_T_1 = cat(predictor_idx_hi_1, UInt<3>("h01")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_2 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_2 = cat(global_history, predictor_idx_hi_lo_2) @[Cat.scala 30:58]
    node _predictor_idx_T_2 = cat(predictor_idx_hi_2, UInt<3>("h02")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_3 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_3 = cat(global_history, predictor_idx_hi_lo_3) @[Cat.scala 30:58]
    node _predictor_idx_T_3 = cat(predictor_idx_hi_3, UInt<3>("h03")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_4 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_4 = cat(global_history, predictor_idx_hi_lo_4) @[Cat.scala 30:58]
    node _predictor_idx_T_4 = cat(predictor_idx_hi_4, UInt<3>("h04")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_5 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_5 = cat(global_history, predictor_idx_hi_lo_5) @[Cat.scala 30:58]
    node _predictor_idx_T_5 = cat(predictor_idx_hi_5, UInt<3>("h05")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_6 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_6 = cat(global_history, predictor_idx_hi_lo_6) @[Cat.scala 30:58]
    node _predictor_idx_T_6 = cat(predictor_idx_hi_6, UInt<3>("h06")) @[Cat.scala 30:58]
    node predictor_idx_hi_lo_7 = bits(io.inst_packet_i.bits.addr, 5, 5) @[Bpu.scala 94:66]
    node predictor_idx_hi_7 = cat(global_history, predictor_idx_hi_lo_7) @[Cat.scala 30:58]
    node _predictor_idx_T_7 = cat(predictor_idx_hi_7, UInt<3>("h07")) @[Cat.scala 30:58]
    wire predictor_idx : UInt<8>[8] @[Bpu.scala 93:30]
    predictor_idx[0] <= _predictor_idx_T @[Bpu.scala 93:30]
    predictor_idx[1] <= _predictor_idx_T_1 @[Bpu.scala 93:30]
    predictor_idx[2] <= _predictor_idx_T_2 @[Bpu.scala 93:30]
    predictor_idx[3] <= _predictor_idx_T_3 @[Bpu.scala 93:30]
    predictor_idx[4] <= _predictor_idx_T_4 @[Bpu.scala 93:30]
    predictor_idx[5] <= _predictor_idx_T_5 @[Bpu.scala 93:30]
    predictor_idx[6] <= _predictor_idx_T_6 @[Bpu.scala 93:30]
    predictor_idx[7] <= _predictor_idx_T_7 @[Bpu.scala 93:30]
    node _predict_mask_T = bits(predictor_idx[0], 6, 0)
    node _predict_mask_T_1 = bits(predictor[_predict_mask_T], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_0 = eq(_predict_mask_T_1, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_2 = bits(predictor_idx[1], 6, 0)
    node _predict_mask_T_3 = bits(predictor[_predict_mask_T_2], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_1 = eq(_predict_mask_T_3, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_4 = bits(predictor_idx[2], 6, 0)
    node _predict_mask_T_5 = bits(predictor[_predict_mask_T_4], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_2 = eq(_predict_mask_T_5, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_6 = bits(predictor_idx[3], 6, 0)
    node _predict_mask_T_7 = bits(predictor[_predict_mask_T_6], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_3 = eq(_predict_mask_T_7, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_8 = bits(predictor_idx[4], 6, 0)
    node _predict_mask_T_9 = bits(predictor[_predict_mask_T_8], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_4 = eq(_predict_mask_T_9, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_10 = bits(predictor_idx[5], 6, 0)
    node _predict_mask_T_11 = bits(predictor[_predict_mask_T_10], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_5 = eq(_predict_mask_T_11, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_12 = bits(predictor_idx[6], 6, 0)
    node _predict_mask_T_13 = bits(predictor[_predict_mask_T_12], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_6 = eq(_predict_mask_T_13, UInt<1>("h01")) @[Bpu.scala 96:66]
    node _predict_mask_T_14 = bits(predictor_idx[7], 6, 0)
    node _predict_mask_T_15 = bits(predictor[_predict_mask_T_14], 1, 1) @[Bpu.scala 96:62]
    node predict_mask_7 = eq(_predict_mask_T_15, UInt<1>("h01")) @[Bpu.scala 96:66]
    node predict_branch_0 = and(need_predict_0, predict_mask_0) @[Bpu.scala 98:69]
    node predict_branch_1 = and(need_predict_1, predict_mask_1) @[Bpu.scala 98:69]
    node predict_branch_2 = and(need_predict_2, predict_mask_2) @[Bpu.scala 98:69]
    node predict_branch_3 = and(need_predict_3, predict_mask_3) @[Bpu.scala 98:69]
    node predict_branch_4 = and(need_predict_4, predict_mask_4) @[Bpu.scala 98:69]
    node predict_branch_5 = and(need_predict_5, predict_mask_5) @[Bpu.scala 98:69]
    node predict_branch_6 = and(need_predict_6, predict_mask_6) @[Bpu.scala 98:69]
    node predict_branch_7 = and(need_predict_7, predict_mask_7) @[Bpu.scala 98:69]
    wire _is_taken_WIRE : UInt<1>[8] @[Bpu.scala 100:25]
    _is_taken_WIRE[0] <= predict_branch_0 @[Bpu.scala 100:25]
    _is_taken_WIRE[1] <= predict_branch_1 @[Bpu.scala 100:25]
    _is_taken_WIRE[2] <= predict_branch_2 @[Bpu.scala 100:25]
    _is_taken_WIRE[3] <= predict_branch_3 @[Bpu.scala 100:25]
    _is_taken_WIRE[4] <= predict_branch_4 @[Bpu.scala 100:25]
    _is_taken_WIRE[5] <= predict_branch_5 @[Bpu.scala 100:25]
    _is_taken_WIRE[6] <= predict_branch_6 @[Bpu.scala 100:25]
    _is_taken_WIRE[7] <= predict_branch_7 @[Bpu.scala 100:25]
    node is_taken_lo_lo = cat(_is_taken_WIRE[1], _is_taken_WIRE[0]) @[Bpu.scala 100:48]
    node is_taken_lo_hi = cat(_is_taken_WIRE[3], _is_taken_WIRE[2]) @[Bpu.scala 100:48]
    node is_taken_lo = cat(is_taken_lo_hi, is_taken_lo_lo) @[Bpu.scala 100:48]
    node is_taken_hi_lo = cat(_is_taken_WIRE[5], _is_taken_WIRE[4]) @[Bpu.scala 100:48]
    node is_taken_hi_hi = cat(_is_taken_WIRE[7], _is_taken_WIRE[6]) @[Bpu.scala 100:48]
    node is_taken_hi = cat(is_taken_hi_hi, is_taken_hi_lo) @[Bpu.scala 100:48]
    node _is_taken_T = cat(is_taken_hi, is_taken_lo) @[Bpu.scala 100:48]
    node is_taken = orr(_is_taken_T) @[Bpu.scala 100:54]
    node _inst_mask_enc_T = mux(predict_branch_7, UInt<8>("h080"), UInt<8>("h00")) @[Mux.scala 47:69]
    node _inst_mask_enc_T_1 = mux(predict_branch_6, UInt<8>("h040"), _inst_mask_enc_T) @[Mux.scala 47:69]
    node _inst_mask_enc_T_2 = mux(predict_branch_5, UInt<8>("h020"), _inst_mask_enc_T_1) @[Mux.scala 47:69]
    node _inst_mask_enc_T_3 = mux(predict_branch_4, UInt<8>("h010"), _inst_mask_enc_T_2) @[Mux.scala 47:69]
    node _inst_mask_enc_T_4 = mux(predict_branch_3, UInt<8>("h08"), _inst_mask_enc_T_3) @[Mux.scala 47:69]
    node _inst_mask_enc_T_5 = mux(predict_branch_2, UInt<8>("h04"), _inst_mask_enc_T_4) @[Mux.scala 47:69]
    node _inst_mask_enc_T_6 = mux(predict_branch_1, UInt<8>("h02"), _inst_mask_enc_T_5) @[Mux.scala 47:69]
    node inst_mask_enc = mux(predict_branch_0, UInt<8>("h01"), _inst_mask_enc_T_6) @[Mux.scala 47:69]
    node inst_mask_0 = bits(inst_mask_enc, 0, 0) @[OneHot.scala 83:30]
    node inst_mask_1 = bits(inst_mask_enc, 1, 1) @[OneHot.scala 83:30]
    node inst_mask_2 = bits(inst_mask_enc, 2, 2) @[OneHot.scala 83:30]
    node inst_mask_3 = bits(inst_mask_enc, 3, 3) @[OneHot.scala 83:30]
    node inst_mask_4 = bits(inst_mask_enc, 4, 4) @[OneHot.scala 83:30]
    node inst_mask_5 = bits(inst_mask_enc, 5, 5) @[OneHot.scala 83:30]
    node inst_mask_6 = bits(inst_mask_enc, 6, 6) @[OneHot.scala 83:30]
    node inst_mask_7 = bits(inst_mask_enc, 7, 7) @[OneHot.scala 83:30]
    node inst_idx_lo_lo = cat(inst_mask_1, inst_mask_0) @[Cat.scala 30:58]
    node inst_idx_lo_hi = cat(inst_mask_3, inst_mask_2) @[Cat.scala 30:58]
    node inst_idx_lo = cat(inst_idx_lo_hi, inst_idx_lo_lo) @[Cat.scala 30:58]
    node inst_idx_hi_lo = cat(inst_mask_5, inst_mask_4) @[Cat.scala 30:58]
    node inst_idx_hi_hi = cat(inst_mask_7, inst_mask_6) @[Cat.scala 30:58]
    node inst_idx_hi = cat(inst_idx_hi_hi, inst_idx_hi_lo) @[Cat.scala 30:58]
    node _inst_idx_T = cat(inst_idx_hi, inst_idx_lo) @[Cat.scala 30:58]
    node inst_idx_hi_1 = bits(_inst_idx_T, 7, 4) @[OneHot.scala 30:18]
    node inst_idx_lo_1 = bits(_inst_idx_T, 3, 0) @[OneHot.scala 31:18]
    node inst_idx_hi_2 = orr(inst_idx_hi_1) @[OneHot.scala 32:14]
    node _inst_idx_T_1 = or(inst_idx_hi_1, inst_idx_lo_1) @[OneHot.scala 32:28]
    node inst_idx_hi_3 = bits(_inst_idx_T_1, 3, 2) @[OneHot.scala 30:18]
    node inst_idx_lo_2 = bits(_inst_idx_T_1, 1, 0) @[OneHot.scala 31:18]
    node inst_idx_hi_4 = orr(inst_idx_hi_3) @[OneHot.scala 32:14]
    node _inst_idx_T_2 = or(inst_idx_hi_3, inst_idx_lo_2) @[OneHot.scala 32:28]
    node inst_idx_lo_3 = bits(_inst_idx_T_2, 1, 1) @[CircuitMath.scala 30:8]
    node inst_idx_lo_4 = cat(inst_idx_hi_4, inst_idx_lo_3) @[Cat.scala 30:58]
    node inst_idx = cat(inst_idx_hi_2, inst_idx_lo_4) @[Cat.scala 30:58]
    node _b_imm_T = bits(io.inst_packet_i.bits.data[inst_idx], 15, 15) @[Bpu.scala 108:32]
    node _b_imm_T_1 = bits(_b_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node b_imm_hi_hi = mux(_b_imm_T_1, UInt<14>("h03fff"), UInt<14>("h00")) @[Bitwise.scala 72:12]
    node b_imm_hi_lo = bits(io.inst_packet_i.bits.data[inst_idx], 15, 0) @[Bpu.scala 108:43]
    node b_imm_hi = cat(b_imm_hi_hi, b_imm_hi_lo) @[Cat.scala 30:58]
    node b_imm = cat(b_imm_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    node _predict_addr_T = asSInt(b_imm) @[Bpu.scala 110:35]
    node predict_addr_hi_hi = bits(io.inst_packet_i.bits.addr, 31, 5) @[Bpu.scala 110:70]
    node predict_addr_hi = cat(predict_addr_hi_hi, inst_idx) @[Cat.scala 30:58]
    node _predict_addr_T_1 = cat(predict_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    node _predict_addr_T_2 = asSInt(_predict_addr_T_1) @[Bpu.scala 110:123]
    node _predict_addr_T_3 = add(_predict_addr_T, _predict_addr_T_2) @[Bpu.scala 110:38]
    node _predict_addr_T_4 = tail(_predict_addr_T_3, 1) @[Bpu.scala 110:38]
    node _predict_addr_T_5 = asSInt(_predict_addr_T_4) @[Bpu.scala 110:38]
    node _predict_addr_T_6 = add(_predict_addr_T_5, asSInt(UInt<32>("h04"))) @[Bpu.scala 110:126]
    node _predict_addr_T_7 = tail(_predict_addr_T_6, 1) @[Bpu.scala 110:126]
    node _predict_addr_T_8 = asSInt(_predict_addr_T_7) @[Bpu.scala 110:126]
    node predict_addr = asUInt(_predict_addr_T_8) @[Bpu.scala 110:145]
    node _delay_inst_idx_T = add(inst_idx, UInt<1>("h01")) @[Bpu.scala 115:33]
    node delay_inst_idx = tail(_delay_inst_idx_T, 1) @[Bpu.scala 115:33]
    node _take_delay_T = eq(inst_idx, UInt<3>("h07")) @[Bpu.scala 117:30]
    node take_delay = and(_take_delay_T, is_taken) @[Bpu.scala 117:53]
    node _valid_mask_T = not(is_taken) @[Bpu.scala 119:49]
    node _valid_mask_T_1 = bits(_valid_mask_T, 0, 0) @[Bpu.scala 119:66]
    node _valid_mask_T_2 = or(inst_mask_7, _valid_mask_T_1) @[Bpu.scala 119:72]
    node _valid_mask_T_3 = or(inst_mask_6, _valid_mask_T_2) @[Bpu.scala 119:72]
    node _valid_mask_T_4 = or(inst_mask_5, _valid_mask_T_3) @[Bpu.scala 119:72]
    node _valid_mask_T_5 = or(inst_mask_4, _valid_mask_T_4) @[Bpu.scala 119:72]
    node _valid_mask_T_6 = or(inst_mask_3, _valid_mask_T_5) @[Bpu.scala 119:72]
    node _valid_mask_T_7 = or(inst_mask_2, _valid_mask_T_6) @[Bpu.scala 119:72]
    node _valid_mask_T_8 = or(inst_mask_1, _valid_mask_T_7) @[Bpu.scala 119:72]
    node _valid_mask_T_9 = or(inst_mask_0, _valid_mask_T_8) @[Bpu.scala 119:72]
    node _valid_mask_T_10 = and(_valid_mask_T_9, fetched_mask_0) @[Bpu.scala 119:122]
    node _valid_mask_T_11 = and(_valid_mask_T_8, fetched_mask_1) @[Bpu.scala 119:122]
    node _valid_mask_T_12 = and(_valid_mask_T_7, fetched_mask_2) @[Bpu.scala 119:122]
    node _valid_mask_T_13 = and(_valid_mask_T_6, fetched_mask_3) @[Bpu.scala 119:122]
    node _valid_mask_T_14 = and(_valid_mask_T_5, fetched_mask_4) @[Bpu.scala 119:122]
    node _valid_mask_T_15 = and(_valid_mask_T_4, fetched_mask_5) @[Bpu.scala 119:122]
    node _valid_mask_T_16 = and(_valid_mask_T_3, fetched_mask_6) @[Bpu.scala 119:122]
    node _valid_mask_T_17 = and(_valid_mask_T_2, fetched_mask_7) @[Bpu.scala 119:122]
    wire valid_mask : UInt<1>[8] @[Bpu.scala 119:27]
    valid_mask[0] <= _valid_mask_T_10 @[Bpu.scala 119:27]
    valid_mask[1] <= _valid_mask_T_11 @[Bpu.scala 119:27]
    valid_mask[2] <= _valid_mask_T_12 @[Bpu.scala 119:27]
    valid_mask[3] <= _valid_mask_T_13 @[Bpu.scala 119:27]
    valid_mask[4] <= _valid_mask_T_14 @[Bpu.scala 119:27]
    valid_mask[5] <= _valid_mask_T_15 @[Bpu.scala 119:27]
    valid_mask[6] <= _valid_mask_T_16 @[Bpu.scala 119:27]
    valid_mask[7] <= _valid_mask_T_17 @[Bpu.scala 119:27]
    node _T = eq(take_delay, UInt<1>("h00")) @[Bpu.scala 121:8]
    node _T_1 = and(_T, is_taken) @[Bpu.scala 121:20]
    when _T_1 : @[Bpu.scala 121:33]
      valid_mask[delay_inst_idx] <= UInt<1>("h01") @[Bpu.scala 122:32]
      skip @[Bpu.scala 121:33]
    node _hi_T = and(io.branch_info_i.valid, io.branch_info_i.bits.predict_miss) @[Bpu.scala 125:48]
    node hi_lo = bits(global_history, 3, 1) @[Bpu.scala 125:148]
    node _hi_T_1 = cat(is_taken, hi_lo) @[Cat.scala 30:58]
    node _hi_T_2 = mux(_hi_T, io.branch_info_i.bits.gh_update, _hi_T_1) @[Bpu.scala 125:24]
    global_history <= _hi_T_2 @[Bpu.scala 125:18]
    node target_predictor_lo = bits(io.branch_info_i.bits.inst_addr, 5, 2) @[Bpu.scala 126:104]
    node _target_predictor_T = cat(io.branch_info_i.bits.gh_update, target_predictor_lo) @[Cat.scala 30:58]
    node _target_predictor_T_1 = bits(_target_predictor_T, 6, 0)
    node _T_2 = and(io.branch_info_i.valid, io.branch_info_i.bits.is_branch) @[Bpu.scala 127:31]
    when _T_2 : @[Bpu.scala 127:67]
      node _T_3 = eq(UInt<2>("h00"), predictor[_target_predictor_T_1]) @[Conditional.scala 37:30]
      when _T_3 : @[Conditional.scala 40:58]
        when io.branch_info_i.bits.is_taken : @[Bpu.scala 130:46]
          predictor[_target_predictor_T_1] <= UInt<2>("h01") @[Bpu.scala 131:28]
          skip @[Bpu.scala 130:46]
        else : @[Bpu.scala 132:21]
          predictor[_target_predictor_T_1] <= UInt<2>("h00") @[Bpu.scala 133:28]
          skip @[Bpu.scala 132:21]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h01"), predictor[_target_predictor_T_1]) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          when io.branch_info_i.bits.is_taken : @[Bpu.scala 137:46]
            predictor[_target_predictor_T_1] <= UInt<2>("h03") @[Bpu.scala 138:28]
            skip @[Bpu.scala 137:46]
          else : @[Bpu.scala 139:21]
            predictor[_target_predictor_T_1] <= UInt<2>("h00") @[Bpu.scala 140:28]
            skip @[Bpu.scala 139:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_5 = eq(UInt<2>("h02"), predictor[_target_predictor_T_1]) @[Conditional.scala 37:30]
          when _T_5 : @[Conditional.scala 39:67]
            when io.branch_info_i.bits.is_taken : @[Bpu.scala 144:46]
              predictor[_target_predictor_T_1] <= UInt<2>("h03") @[Bpu.scala 145:28]
              skip @[Bpu.scala 144:46]
            else : @[Bpu.scala 146:21]
              predictor[_target_predictor_T_1] <= UInt<2>("h00") @[Bpu.scala 147:28]
              skip @[Bpu.scala 146:21]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_6 = eq(UInt<2>("h03"), predictor[_target_predictor_T_1]) @[Conditional.scala 37:30]
            when _T_6 : @[Conditional.scala 39:67]
              when io.branch_info_i.bits.is_taken : @[Bpu.scala 151:46]
                predictor[_target_predictor_T_1] <= UInt<2>("h03") @[Bpu.scala 152:28]
                skip @[Bpu.scala 151:46]
              else : @[Bpu.scala 153:21]
                predictor[_target_predictor_T_1] <= UInt<2>("h02") @[Bpu.scala 154:28]
                skip @[Bpu.scala 153:21]
              skip @[Conditional.scala 39:67]
      skip @[Bpu.scala 127:67]
    io.resp_o.bits.predict_addr <= predict_addr @[Bpu.scala 160:31]
    io.resp_o.bits.take_delay <= take_delay @[Bpu.scala 161:29]
    io.resp_o.bits.is_taken <= is_taken @[Bpu.scala 162:27]
    io.resp_o.valid <= io.inst_packet_i.valid @[Bpu.scala 163:19]
    reg bpu_inst_packet_o : {data : UInt<32>[8], addr : UInt<32>, gh_backup : UInt<4>, valid_mask : UInt<1>[8], delay_mask : UInt<1>[8], branch_mask : UInt<1>[8], predict_mask : UInt<1>[8]}, clock @[Bpu.scala 165:30]
    reg bpu_inst_packet_o_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Bpu.scala 166:40]
    when io.bpu_inst_packet_o.ready : @[Bpu.scala 168:35]
      bpu_inst_packet_o_valid <= io.inst_packet_i.valid @[Bpu.scala 169:29]
      bpu_inst_packet_o.valid_mask[0] <= valid_mask[0] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[1] <= valid_mask[1] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[2] <= valid_mask[2] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[3] <= valid_mask[3] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[4] <= valid_mask[4] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[5] <= valid_mask[5] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[6] <= valid_mask[6] @[Bpu.scala 170:34]
      bpu_inst_packet_o.valid_mask[7] <= valid_mask[7] @[Bpu.scala 170:34]
      bpu_inst_packet_o.addr <= io.inst_packet_i.bits.addr @[Bpu.scala 171:28]
      bpu_inst_packet_o.data[0] <= io.inst_packet_i.bits.data[0] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[1] <= io.inst_packet_i.bits.data[1] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[2] <= io.inst_packet_i.bits.data[2] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[3] <= io.inst_packet_i.bits.data[3] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[4] <= io.inst_packet_i.bits.data[4] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[5] <= io.inst_packet_i.bits.data[5] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[6] <= io.inst_packet_i.bits.data[6] @[Bpu.scala 172:28]
      bpu_inst_packet_o.data[7] <= io.inst_packet_i.bits.data[7] @[Bpu.scala 172:28]
      bpu_inst_packet_o.delay_mask[0] <= branch_mask_0 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[1] <= branch_mask_1 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[2] <= branch_mask_2 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[3] <= branch_mask_3 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[4] <= branch_mask_4 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[5] <= branch_mask_5 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[6] <= branch_mask_6 @[Bpu.scala 173:34]
      bpu_inst_packet_o.delay_mask[7] <= branch_mask_7 @[Bpu.scala 173:34]
      bpu_inst_packet_o.predict_mask[0] <= predict_branch_0 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[1] <= predict_branch_1 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[2] <= predict_branch_2 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[3] <= predict_branch_3 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[4] <= predict_branch_4 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[5] <= predict_branch_5 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[6] <= predict_branch_6 @[Bpu.scala 174:36]
      bpu_inst_packet_o.predict_mask[7] <= predict_branch_7 @[Bpu.scala 174:36]
      bpu_inst_packet_o.branch_mask[0] <= branch_mask_0 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[1] <= branch_mask_1 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[2] <= branch_mask_2 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[3] <= branch_mask_3 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[4] <= branch_mask_4 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[5] <= branch_mask_5 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[6] <= branch_mask_6 @[Bpu.scala 175:35]
      bpu_inst_packet_o.branch_mask[7] <= branch_mask_7 @[Bpu.scala 175:35]
      bpu_inst_packet_o.gh_backup <= global_history @[Bpu.scala 176:33]
      skip @[Bpu.scala 168:35]
    io.bpu_inst_packet_o.bits.predict_mask[0] <= bpu_inst_packet_o.predict_mask[0] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[1] <= bpu_inst_packet_o.predict_mask[1] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[2] <= bpu_inst_packet_o.predict_mask[2] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[3] <= bpu_inst_packet_o.predict_mask[3] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[4] <= bpu_inst_packet_o.predict_mask[4] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[5] <= bpu_inst_packet_o.predict_mask[5] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[6] <= bpu_inst_packet_o.predict_mask[6] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.predict_mask[7] <= bpu_inst_packet_o.predict_mask[7] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[0] <= bpu_inst_packet_o.branch_mask[0] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[1] <= bpu_inst_packet_o.branch_mask[1] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[2] <= bpu_inst_packet_o.branch_mask[2] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[3] <= bpu_inst_packet_o.branch_mask[3] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[4] <= bpu_inst_packet_o.branch_mask[4] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[5] <= bpu_inst_packet_o.branch_mask[5] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[6] <= bpu_inst_packet_o.branch_mask[6] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.branch_mask[7] <= bpu_inst_packet_o.branch_mask[7] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[0] <= bpu_inst_packet_o.delay_mask[0] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[1] <= bpu_inst_packet_o.delay_mask[1] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[2] <= bpu_inst_packet_o.delay_mask[2] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[3] <= bpu_inst_packet_o.delay_mask[3] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[4] <= bpu_inst_packet_o.delay_mask[4] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[5] <= bpu_inst_packet_o.delay_mask[5] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[6] <= bpu_inst_packet_o.delay_mask[6] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.delay_mask[7] <= bpu_inst_packet_o.delay_mask[7] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[0] <= bpu_inst_packet_o.valid_mask[0] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[1] <= bpu_inst_packet_o.valid_mask[1] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[2] <= bpu_inst_packet_o.valid_mask[2] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[3] <= bpu_inst_packet_o.valid_mask[3] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[4] <= bpu_inst_packet_o.valid_mask[4] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[5] <= bpu_inst_packet_o.valid_mask[5] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[6] <= bpu_inst_packet_o.valid_mask[6] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.valid_mask[7] <= bpu_inst_packet_o.valid_mask[7] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.gh_backup <= bpu_inst_packet_o.gh_backup @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.addr <= bpu_inst_packet_o.addr @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[0] <= bpu_inst_packet_o.data[0] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[1] <= bpu_inst_packet_o.data[1] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[2] <= bpu_inst_packet_o.data[2] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[3] <= bpu_inst_packet_o.data[3] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[4] <= bpu_inst_packet_o.data[4] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[5] <= bpu_inst_packet_o.data[5] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[6] <= bpu_inst_packet_o.data[6] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.bits.data[7] <= bpu_inst_packet_o.data[7] @[Bpu.scala 178:28]
    io.bpu_inst_packet_o.valid <= bpu_inst_packet_o_valid @[Bpu.scala 179:29]
    when io.need_flush : @[Bpu.scala 191:22]
      wire _WIRE : UInt<32>[8] @[Bpu.scala 17:28]
      _WIRE[0] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[1] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[2] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[3] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[4] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[5] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[6] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE[7] <= UInt<32>("h00") @[Bpu.scala 17:28]
      bpu_inst_packet_o.data[0] <= _WIRE[0] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[1] <= _WIRE[1] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[2] <= _WIRE[2] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[3] <= _WIRE[3] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[4] <= _WIRE[4] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[5] <= _WIRE[5] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[6] <= _WIRE[6] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[7] <= _WIRE[7] @[Bpu.scala 17:18]
      bpu_inst_packet_o.addr <= UInt<32>("h00") @[Bpu.scala 18:18]
      bpu_inst_packet_o.gh_backup <= UInt<4>("h00") @[Bpu.scala 19:18]
      wire _WIRE_1 : UInt<1>[8] @[Bpu.scala 20:28]
      _WIRE_1[0] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[1] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[2] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[3] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[4] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[5] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[6] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_1[7] <= UInt<1>("h00") @[Bpu.scala 20:28]
      bpu_inst_packet_o.valid_mask[0] <= _WIRE_1[0] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[1] <= _WIRE_1[1] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[2] <= _WIRE_1[2] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[3] <= _WIRE_1[3] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[4] <= _WIRE_1[4] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[5] <= _WIRE_1[5] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[6] <= _WIRE_1[6] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[7] <= _WIRE_1[7] @[Bpu.scala 20:18]
      wire _WIRE_2 : UInt<1>[8] @[Bpu.scala 21:28]
      _WIRE_2[0] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[1] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[2] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[3] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[4] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[5] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[6] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_2[7] <= UInt<1>("h00") @[Bpu.scala 21:28]
      bpu_inst_packet_o.delay_mask[0] <= _WIRE_2[0] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[1] <= _WIRE_2[1] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[2] <= _WIRE_2[2] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[3] <= _WIRE_2[3] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[4] <= _WIRE_2[4] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[5] <= _WIRE_2[5] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[6] <= _WIRE_2[6] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[7] <= _WIRE_2[7] @[Bpu.scala 21:18]
      wire _WIRE_3 : UInt<1>[8] @[Bpu.scala 22:28]
      _WIRE_3[0] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[1] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[2] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[3] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[4] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[5] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[6] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_3[7] <= UInt<1>("h00") @[Bpu.scala 22:28]
      bpu_inst_packet_o.branch_mask[0] <= _WIRE_3[0] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[1] <= _WIRE_3[1] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[2] <= _WIRE_3[2] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[3] <= _WIRE_3[3] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[4] <= _WIRE_3[4] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[5] <= _WIRE_3[5] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[6] <= _WIRE_3[6] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[7] <= _WIRE_3[7] @[Bpu.scala 22:18]
      wire _WIRE_4 : UInt<1>[8] @[Bpu.scala 23:29]
      _WIRE_4[0] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[1] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[2] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[3] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[4] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[5] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[6] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_4[7] <= UInt<1>("h00") @[Bpu.scala 23:29]
      bpu_inst_packet_o.predict_mask[0] <= _WIRE_4[0] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[1] <= _WIRE_4[1] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[2] <= _WIRE_4[2] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[3] <= _WIRE_4[3] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[4] <= _WIRE_4[4] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[5] <= _WIRE_4[5] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[6] <= _WIRE_4[6] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[7] <= _WIRE_4[7] @[Bpu.scala 23:19]
      bpu_inst_packet_o_valid <= UInt<1>("h00") @[Bpu.scala 193:28]
      skip @[Bpu.scala 191:22]
    node _T_7 = asUInt(reset) @[Bpu.scala 196:20]
    when _T_7 : @[Bpu.scala 196:23]
      wire _WIRE_5 : UInt<32>[8] @[Bpu.scala 17:28]
      _WIRE_5[0] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[1] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[2] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[3] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[4] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[5] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[6] <= UInt<32>("h00") @[Bpu.scala 17:28]
      _WIRE_5[7] <= UInt<32>("h00") @[Bpu.scala 17:28]
      bpu_inst_packet_o.data[0] <= _WIRE_5[0] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[1] <= _WIRE_5[1] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[2] <= _WIRE_5[2] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[3] <= _WIRE_5[3] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[4] <= _WIRE_5[4] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[5] <= _WIRE_5[5] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[6] <= _WIRE_5[6] @[Bpu.scala 17:18]
      bpu_inst_packet_o.data[7] <= _WIRE_5[7] @[Bpu.scala 17:18]
      bpu_inst_packet_o.addr <= UInt<32>("h00") @[Bpu.scala 18:18]
      bpu_inst_packet_o.gh_backup <= UInt<4>("h00") @[Bpu.scala 19:18]
      wire _WIRE_6 : UInt<1>[8] @[Bpu.scala 20:28]
      _WIRE_6[0] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[1] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[2] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[3] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[4] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[5] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[6] <= UInt<1>("h00") @[Bpu.scala 20:28]
      _WIRE_6[7] <= UInt<1>("h00") @[Bpu.scala 20:28]
      bpu_inst_packet_o.valid_mask[0] <= _WIRE_6[0] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[1] <= _WIRE_6[1] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[2] <= _WIRE_6[2] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[3] <= _WIRE_6[3] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[4] <= _WIRE_6[4] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[5] <= _WIRE_6[5] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[6] <= _WIRE_6[6] @[Bpu.scala 20:18]
      bpu_inst_packet_o.valid_mask[7] <= _WIRE_6[7] @[Bpu.scala 20:18]
      wire _WIRE_7 : UInt<1>[8] @[Bpu.scala 21:28]
      _WIRE_7[0] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[1] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[2] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[3] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[4] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[5] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[6] <= UInt<1>("h00") @[Bpu.scala 21:28]
      _WIRE_7[7] <= UInt<1>("h00") @[Bpu.scala 21:28]
      bpu_inst_packet_o.delay_mask[0] <= _WIRE_7[0] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[1] <= _WIRE_7[1] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[2] <= _WIRE_7[2] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[3] <= _WIRE_7[3] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[4] <= _WIRE_7[4] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[5] <= _WIRE_7[5] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[6] <= _WIRE_7[6] @[Bpu.scala 21:18]
      bpu_inst_packet_o.delay_mask[7] <= _WIRE_7[7] @[Bpu.scala 21:18]
      wire _WIRE_8 : UInt<1>[8] @[Bpu.scala 22:28]
      _WIRE_8[0] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[1] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[2] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[3] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[4] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[5] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[6] <= UInt<1>("h00") @[Bpu.scala 22:28]
      _WIRE_8[7] <= UInt<1>("h00") @[Bpu.scala 22:28]
      bpu_inst_packet_o.branch_mask[0] <= _WIRE_8[0] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[1] <= _WIRE_8[1] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[2] <= _WIRE_8[2] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[3] <= _WIRE_8[3] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[4] <= _WIRE_8[4] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[5] <= _WIRE_8[5] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[6] <= _WIRE_8[6] @[Bpu.scala 22:18]
      bpu_inst_packet_o.branch_mask[7] <= _WIRE_8[7] @[Bpu.scala 22:18]
      wire _WIRE_9 : UInt<1>[8] @[Bpu.scala 23:29]
      _WIRE_9[0] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[1] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[2] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[3] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[4] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[5] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[6] <= UInt<1>("h00") @[Bpu.scala 23:29]
      _WIRE_9[7] <= UInt<1>("h00") @[Bpu.scala 23:29]
      bpu_inst_packet_o.predict_mask[0] <= _WIRE_9[0] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[1] <= _WIRE_9[1] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[2] <= _WIRE_9[2] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[3] <= _WIRE_9[3] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[4] <= _WIRE_9[4] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[5] <= _WIRE_9[5] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[6] <= _WIRE_9[6] @[Bpu.scala 23:19]
      bpu_inst_packet_o.predict_mask[7] <= _WIRE_9[7] @[Bpu.scala 23:19]
      skip @[Bpu.scala 196:23]
    wire _io_bpu_debug_branch_mask_WIRE : UInt<1>[8] @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[0] <= branch_mask_0 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[1] <= branch_mask_1 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[2] <= branch_mask_2 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[3] <= branch_mask_3 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[4] <= branch_mask_4 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[5] <= branch_mask_5 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[6] <= branch_mask_6 @[Bpu.scala 201:36]
    _io_bpu_debug_branch_mask_WIRE[7] <= branch_mask_7 @[Bpu.scala 201:36]
    node io_bpu_debug_branch_mask_lo_lo = cat(_io_bpu_debug_branch_mask_WIRE[1], _io_bpu_debug_branch_mask_WIRE[0]) @[Bpu.scala 201:56]
    node io_bpu_debug_branch_mask_lo_hi = cat(_io_bpu_debug_branch_mask_WIRE[3], _io_bpu_debug_branch_mask_WIRE[2]) @[Bpu.scala 201:56]
    node io_bpu_debug_branch_mask_lo = cat(io_bpu_debug_branch_mask_lo_hi, io_bpu_debug_branch_mask_lo_lo) @[Bpu.scala 201:56]
    node io_bpu_debug_branch_mask_hi_lo = cat(_io_bpu_debug_branch_mask_WIRE[5], _io_bpu_debug_branch_mask_WIRE[4]) @[Bpu.scala 201:56]
    node io_bpu_debug_branch_mask_hi_hi = cat(_io_bpu_debug_branch_mask_WIRE[7], _io_bpu_debug_branch_mask_WIRE[6]) @[Bpu.scala 201:56]
    node io_bpu_debug_branch_mask_hi = cat(io_bpu_debug_branch_mask_hi_hi, io_bpu_debug_branch_mask_hi_lo) @[Bpu.scala 201:56]
    node _io_bpu_debug_branch_mask_T = cat(io_bpu_debug_branch_mask_hi, io_bpu_debug_branch_mask_lo) @[Bpu.scala 201:56]
    io.bpu_debug.branch_mask <= _io_bpu_debug_branch_mask_T @[Bpu.scala 201:27]
    wire _io_bpu_debug_fetched_mask_WIRE : UInt<1>[8] @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[0] <= fetched_mask_0 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[1] <= fetched_mask_1 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[2] <= fetched_mask_2 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[3] <= fetched_mask_3 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[4] <= fetched_mask_4 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[5] <= fetched_mask_5 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[6] <= fetched_mask_6 @[Bpu.scala 202:37]
    _io_bpu_debug_fetched_mask_WIRE[7] <= fetched_mask_7 @[Bpu.scala 202:37]
    node io_bpu_debug_fetched_mask_lo_lo = cat(_io_bpu_debug_fetched_mask_WIRE[1], _io_bpu_debug_fetched_mask_WIRE[0]) @[Bpu.scala 202:58]
    node io_bpu_debug_fetched_mask_lo_hi = cat(_io_bpu_debug_fetched_mask_WIRE[3], _io_bpu_debug_fetched_mask_WIRE[2]) @[Bpu.scala 202:58]
    node io_bpu_debug_fetched_mask_lo = cat(io_bpu_debug_fetched_mask_lo_hi, io_bpu_debug_fetched_mask_lo_lo) @[Bpu.scala 202:58]
    node io_bpu_debug_fetched_mask_hi_lo = cat(_io_bpu_debug_fetched_mask_WIRE[5], _io_bpu_debug_fetched_mask_WIRE[4]) @[Bpu.scala 202:58]
    node io_bpu_debug_fetched_mask_hi_hi = cat(_io_bpu_debug_fetched_mask_WIRE[7], _io_bpu_debug_fetched_mask_WIRE[6]) @[Bpu.scala 202:58]
    node io_bpu_debug_fetched_mask_hi = cat(io_bpu_debug_fetched_mask_hi_hi, io_bpu_debug_fetched_mask_hi_lo) @[Bpu.scala 202:58]
    node _io_bpu_debug_fetched_mask_T = cat(io_bpu_debug_fetched_mask_hi, io_bpu_debug_fetched_mask_lo) @[Bpu.scala 202:58]
    io.bpu_debug.fetched_mask <= _io_bpu_debug_fetched_mask_T @[Bpu.scala 202:28]
    wire _io_bpu_debug_predict_branch_WIRE : UInt<1>[8] @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[0] <= predict_branch_0 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[1] <= predict_branch_1 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[2] <= predict_branch_2 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[3] <= predict_branch_3 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[4] <= predict_branch_4 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[5] <= predict_branch_5 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[6] <= predict_branch_6 @[Bpu.scala 203:39]
    _io_bpu_debug_predict_branch_WIRE[7] <= predict_branch_7 @[Bpu.scala 203:39]
    node io_bpu_debug_predict_branch_lo_lo = cat(_io_bpu_debug_predict_branch_WIRE[1], _io_bpu_debug_predict_branch_WIRE[0]) @[Bpu.scala 203:62]
    node io_bpu_debug_predict_branch_lo_hi = cat(_io_bpu_debug_predict_branch_WIRE[3], _io_bpu_debug_predict_branch_WIRE[2]) @[Bpu.scala 203:62]
    node io_bpu_debug_predict_branch_lo = cat(io_bpu_debug_predict_branch_lo_hi, io_bpu_debug_predict_branch_lo_lo) @[Bpu.scala 203:62]
    node io_bpu_debug_predict_branch_hi_lo = cat(_io_bpu_debug_predict_branch_WIRE[5], _io_bpu_debug_predict_branch_WIRE[4]) @[Bpu.scala 203:62]
    node io_bpu_debug_predict_branch_hi_hi = cat(_io_bpu_debug_predict_branch_WIRE[7], _io_bpu_debug_predict_branch_WIRE[6]) @[Bpu.scala 203:62]
    node io_bpu_debug_predict_branch_hi = cat(io_bpu_debug_predict_branch_hi_hi, io_bpu_debug_predict_branch_hi_lo) @[Bpu.scala 203:62]
    node _io_bpu_debug_predict_branch_T = cat(io_bpu_debug_predict_branch_hi, io_bpu_debug_predict_branch_lo) @[Bpu.scala 203:62]
    io.bpu_debug.predict_branch <= _io_bpu_debug_predict_branch_T @[Bpu.scala 203:30]
    io.bpu_debug.predict_addr <= predict_addr @[Bpu.scala 204:28]
    io.bpu_debug.is_taken <= is_taken @[Bpu.scala 205:24]
    io.bpu_debug.take_delay <= take_delay @[Bpu.scala 206:26]
    io.bpu_debug.inst_packet[0] <= io.inst_packet_i.bits.data[0] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[1] <= io.inst_packet_i.bits.data[1] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[2] <= io.inst_packet_i.bits.data[2] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[3] <= io.inst_packet_i.bits.data[3] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[4] <= io.inst_packet_i.bits.data[4] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[5] <= io.inst_packet_i.bits.data[5] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[6] <= io.inst_packet_i.bits.data[6] @[Bpu.scala 207:27]
    io.bpu_debug.inst_packet[7] <= io.inst_packet_i.bits.data[7] @[Bpu.scala 207:27]
    
  module ICache : 
    input clock : Clock
    input reset : Reset
    output io : {flip icache_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, icache_resp : {valid : UInt<1>, bits : {data : UInt<32>[8], addr : UInt<32>}}, io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, flip io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<256>}}, icache_debug : {state : UInt<1>, hit_cache : UInt<1>, cache_we : UInt<1>, cache_read_tag : UInt<20>, icache_req : {valid : UInt<1>, bits : {addr : UInt<32>}}}}
    
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Icache.scala 52:22]
    wire _cache_valid_WIRE : UInt<1>[128] @[Icache.scala 53:36]
    _cache_valid_WIRE[0] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[1] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[2] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[3] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[4] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[5] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[6] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[7] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[8] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[9] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[10] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[11] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[12] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[13] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[14] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[15] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[16] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[17] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[18] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[19] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[20] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[21] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[22] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[23] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[24] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[25] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[26] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[27] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[28] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[29] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[30] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[31] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[32] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[33] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[34] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[35] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[36] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[37] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[38] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[39] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[40] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[41] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[42] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[43] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[44] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[45] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[46] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[47] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[48] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[49] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[50] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[51] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[52] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[53] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[54] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[55] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[56] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[57] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[58] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[59] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[60] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[61] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[62] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[63] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[64] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[65] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[66] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[67] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[68] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[69] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[70] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[71] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[72] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[73] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[74] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[75] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[76] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[77] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[78] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[79] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[80] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[81] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[82] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[83] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[84] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[85] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[86] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[87] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[88] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[89] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[90] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[91] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[92] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[93] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[94] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[95] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[96] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[97] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[98] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[99] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[100] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[101] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[102] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[103] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[104] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[105] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[106] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[107] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[108] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[109] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[110] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[111] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[112] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[113] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[114] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[115] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[116] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[117] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[118] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[119] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[120] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[121] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[122] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[123] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[124] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[125] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[126] <= UInt<1>("h00") @[Icache.scala 53:36]
    _cache_valid_WIRE[127] <= UInt<1>("h00") @[Icache.scala 53:36]
    reg cache_valid : UInt<1>[128], clock with : (reset => (reset, _cache_valid_WIRE)) @[Icache.scala 53:28]
    smem cache_tag : UInt<20>[128], undefined @[Icache.scala 54:30]
    smem cache_data_0 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_1 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_2 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_3 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_4 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_5 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_6 : UInt<32>[128], undefined @[Icache.scala 55:53]
    smem cache_data_7 : UInt<32>[128], undefined @[Icache.scala 55:53]
    wire io_read_data : UInt<32>[8] @[Icache.scala 56:56]
    wire _io_read_data_WIRE : UInt<256>
    _io_read_data_WIRE <= io.io_read_resp.bits.data
    node _io_read_data_T = bits(_io_read_data_WIRE, 31, 0) @[Icache.scala 56:56]
    io_read_data[0] <= _io_read_data_T @[Icache.scala 56:56]
    node _io_read_data_T_1 = bits(_io_read_data_WIRE, 63, 32) @[Icache.scala 56:56]
    io_read_data[1] <= _io_read_data_T_1 @[Icache.scala 56:56]
    node _io_read_data_T_2 = bits(_io_read_data_WIRE, 95, 64) @[Icache.scala 56:56]
    io_read_data[2] <= _io_read_data_T_2 @[Icache.scala 56:56]
    node _io_read_data_T_3 = bits(_io_read_data_WIRE, 127, 96) @[Icache.scala 56:56]
    io_read_data[3] <= _io_read_data_T_3 @[Icache.scala 56:56]
    node _io_read_data_T_4 = bits(_io_read_data_WIRE, 159, 128) @[Icache.scala 56:56]
    io_read_data[4] <= _io_read_data_T_4 @[Icache.scala 56:56]
    node _io_read_data_T_5 = bits(_io_read_data_WIRE, 191, 160) @[Icache.scala 56:56]
    io_read_data[5] <= _io_read_data_T_5 @[Icache.scala 56:56]
    node _io_read_data_T_6 = bits(_io_read_data_WIRE, 223, 192) @[Icache.scala 56:56]
    io_read_data[6] <= _io_read_data_T_6 @[Icache.scala 56:56]
    node _io_read_data_T_7 = bits(_io_read_data_WIRE, 255, 224) @[Icache.scala 56:56]
    io_read_data[7] <= _io_read_data_T_7 @[Icache.scala 56:56]
    wire cache_en : UInt<1> @[Icache.scala 58:22]
    wire cache_we : UInt<1> @[Icache.scala 59:22]
    wire cache_read_tag : UInt<20> @[Icache.scala 60:28]
    wire cache_read_data : UInt<32>[8] @[Icache.scala 61:29]
    wire cache_write_tag : UInt<20> @[Icache.scala 62:29]
    wire cache_write_data : UInt<32>[8] @[Icache.scala 63:30]
    wire hit_cache : UInt<1> @[Icache.scala 64:23]
    wire cache_valid_we : UInt<1>
    cache_valid_we <= UInt<1>("h00")
    io.io_read_req.valid <= UInt<1>("h00") @[Icache.scala 67:23]
    io.icache_req.ready <= UInt<1>("h00") @[Icache.scala 68:22]
    io.icache_resp.bits.data[0] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[1] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[2] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[3] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[4] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[5] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[6] is invalid @[Icache.scala 69:27]
    io.icache_resp.bits.data[7] is invalid @[Icache.scala 69:27]
    io.icache_resp.valid <= UInt<1>("h00") @[Icache.scala 70:23]
    cache_en <= UInt<1>("h01") @[Icache.scala 71:11]
    cache_we <= UInt<1>("h00") @[Icache.scala 72:12]
    cache_write_tag is invalid @[Icache.scala 73:18]
    cache_write_data[0] is invalid @[Icache.scala 74:19]
    cache_write_data[1] is invalid @[Icache.scala 74:19]
    cache_write_data[2] is invalid @[Icache.scala 74:19]
    cache_write_data[3] is invalid @[Icache.scala 74:19]
    cache_write_data[4] is invalid @[Icache.scala 74:19]
    cache_write_data[5] is invalid @[Icache.scala 74:19]
    cache_write_data[6] is invalid @[Icache.scala 74:19]
    cache_write_data[7] is invalid @[Icache.scala 74:19]
    cache_read_tag <= UInt<20>("h00") @[Icache.scala 75:18]
    wire _WIRE : UInt<32>[8] @[Icache.scala 76:29]
    _WIRE[0] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[1] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[2] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[3] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[4] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[5] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[6] <= UInt<32>("h00") @[Icache.scala 76:29]
    _WIRE[7] <= UInt<32>("h00") @[Icache.scala 76:29]
    cache_read_data[0] <= _WIRE[0] @[Icache.scala 76:19]
    cache_read_data[1] <= _WIRE[1] @[Icache.scala 76:19]
    cache_read_data[2] <= _WIRE[2] @[Icache.scala 76:19]
    cache_read_data[3] <= _WIRE[3] @[Icache.scala 76:19]
    cache_read_data[4] <= _WIRE[4] @[Icache.scala 76:19]
    cache_read_data[5] <= _WIRE[5] @[Icache.scala 76:19]
    cache_read_data[6] <= _WIRE[6] @[Icache.scala 76:19]
    cache_read_data[7] <= _WIRE[7] @[Icache.scala 76:19]
    cache_write_tag <= UInt<20>("h00") @[Icache.scala 77:19]
    wire _WIRE_1 : UInt<32>[8] @[Icache.scala 78:30]
    _WIRE_1[0] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[1] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[2] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[3] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[4] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[5] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[6] <= UInt<32>("h00") @[Icache.scala 78:30]
    _WIRE_1[7] <= UInt<32>("h00") @[Icache.scala 78:30]
    cache_write_data[0] <= _WIRE_1[0] @[Icache.scala 78:20]
    cache_write_data[1] <= _WIRE_1[1] @[Icache.scala 78:20]
    cache_write_data[2] <= _WIRE_1[2] @[Icache.scala 78:20]
    cache_write_data[3] <= _WIRE_1[3] @[Icache.scala 78:20]
    cache_write_data[4] <= _WIRE_1[4] @[Icache.scala 78:20]
    cache_write_data[5] <= _WIRE_1[5] @[Icache.scala 78:20]
    cache_write_data[6] <= _WIRE_1[6] @[Icache.scala 78:20]
    cache_write_data[7] <= _WIRE_1[7] @[Icache.scala 78:20]
    node _hit_cache_T = bits(io.icache_req.bits.addr, 31, 12) @[Icache.scala 79:54]
    node _hit_cache_T_1 = eq(cache_read_tag, _hit_cache_T) @[Icache.scala 79:28]
    node _hit_cache_T_2 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 79:115]
    node _hit_cache_T_3 = and(_hit_cache_T_1, cache_valid[_hit_cache_T_2]) @[Icache.scala 79:78]
    hit_cache <= _hit_cache_T_3 @[Icache.scala 79:12]
    node _T = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      when io.icache_req.valid : @[Icache.scala 82:32]
        io.io_read_req.valid <= UInt<1>("h01") @[Icache.scala 83:29]
        state <= UInt<1>("h01") @[Icache.scala 84:14]
        skip @[Icache.scala 82:32]
      else : @[Icache.scala 85:18]
        io.io_read_req.valid <= UInt<1>("h00") @[Icache.scala 86:29]
        skip @[Icache.scala 85:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        when io.io_read_req.ready : @[Icache.scala 90:33]
          io.io_read_req.valid <= UInt<1>("h00") @[Icache.scala 91:29]
          io.icache_resp.valid <= io.icache_req.valid @[Icache.scala 92:29]
          io.icache_resp.bits.data[0] <= io_read_data[0] @[Icache.scala 93:33]
          io.icache_resp.bits.data[1] <= io_read_data[1] @[Icache.scala 93:33]
          io.icache_resp.bits.data[2] <= io_read_data[2] @[Icache.scala 93:33]
          io.icache_resp.bits.data[3] <= io_read_data[3] @[Icache.scala 93:33]
          io.icache_resp.bits.data[4] <= io_read_data[4] @[Icache.scala 93:33]
          io.icache_resp.bits.data[5] <= io_read_data[5] @[Icache.scala 93:33]
          io.icache_resp.bits.data[6] <= io_read_data[6] @[Icache.scala 93:33]
          io.icache_resp.bits.data[7] <= io_read_data[7] @[Icache.scala 93:33]
          io.icache_req.ready <= UInt<1>("h01") @[Icache.scala 94:28]
          cache_we <= UInt<1>("h01") @[Icache.scala 96:17]
          node _cache_write_tag_T = bits(io.icache_req.bits.addr, 31, 12) @[Icache.scala 97:49]
          cache_write_tag <= _cache_write_tag_T @[Icache.scala 97:24]
          cache_write_data[0] <= io_read_data[0] @[Icache.scala 98:25]
          cache_write_data[1] <= io_read_data[1] @[Icache.scala 98:25]
          cache_write_data[2] <= io_read_data[2] @[Icache.scala 98:25]
          cache_write_data[3] <= io_read_data[3] @[Icache.scala 98:25]
          cache_write_data[4] <= io_read_data[4] @[Icache.scala 98:25]
          cache_write_data[5] <= io_read_data[5] @[Icache.scala 98:25]
          cache_write_data[6] <= io_read_data[6] @[Icache.scala 98:25]
          cache_write_data[7] <= io_read_data[7] @[Icache.scala 98:25]
          cache_valid_we <= UInt<1>("h01") @[Icache.scala 99:24]
          state <= UInt<1>("h00") @[Icache.scala 100:14]
          skip @[Icache.scala 90:33]
        else : @[Icache.scala 101:39]
          node _T_2 = eq(io.icache_req.valid, UInt<1>("h00")) @[Icache.scala 101:18]
          when _T_2 : @[Icache.scala 101:39]
            io.io_read_req.valid <= UInt<1>("h00") @[Icache.scala 102:29]
            io.icache_resp.bits.data[0] <= cache_read_data[0] @[Icache.scala 103:33]
            io.icache_resp.bits.data[1] <= cache_read_data[1] @[Icache.scala 103:33]
            io.icache_resp.bits.data[2] <= cache_read_data[2] @[Icache.scala 103:33]
            io.icache_resp.bits.data[3] <= cache_read_data[3] @[Icache.scala 103:33]
            io.icache_resp.bits.data[4] <= cache_read_data[4] @[Icache.scala 103:33]
            io.icache_resp.bits.data[5] <= cache_read_data[5] @[Icache.scala 103:33]
            io.icache_resp.bits.data[6] <= cache_read_data[6] @[Icache.scala 103:33]
            io.icache_resp.bits.data[7] <= cache_read_data[7] @[Icache.scala 103:33]
            io.icache_resp.valid <= UInt<1>("h00") @[Icache.scala 104:29]
            io.icache_req.ready <= UInt<1>("h00") @[Icache.scala 105:28]
            state <= UInt<1>("h00") @[Icache.scala 106:14]
            skip @[Icache.scala 101:39]
          else : @[Icache.scala 107:28]
            when hit_cache : @[Icache.scala 107:28]
              io.io_read_req.valid <= UInt<1>("h00") @[Icache.scala 108:29]
              io.icache_resp.bits.data[0] <= cache_read_data[0] @[Icache.scala 109:33]
              io.icache_resp.bits.data[1] <= cache_read_data[1] @[Icache.scala 109:33]
              io.icache_resp.bits.data[2] <= cache_read_data[2] @[Icache.scala 109:33]
              io.icache_resp.bits.data[3] <= cache_read_data[3] @[Icache.scala 109:33]
              io.icache_resp.bits.data[4] <= cache_read_data[4] @[Icache.scala 109:33]
              io.icache_resp.bits.data[5] <= cache_read_data[5] @[Icache.scala 109:33]
              io.icache_resp.bits.data[6] <= cache_read_data[6] @[Icache.scala 109:33]
              io.icache_resp.bits.data[7] <= cache_read_data[7] @[Icache.scala 109:33]
              io.icache_resp.valid <= UInt<1>("h01") @[Icache.scala 110:29]
              io.icache_req.ready <= UInt<1>("h01") @[Icache.scala 111:28]
              state <= UInt<1>("h00") @[Icache.scala 113:14]
              skip @[Icache.scala 107:28]
            else : @[Icache.scala 114:18]
              io.io_read_req.valid <= UInt<1>("h01") @[Icache.scala 115:29]
              io.icache_resp.valid <= UInt<1>("h00") @[Icache.scala 116:29]
              io.icache_req.ready <= UInt<1>("h00") @[Icache.scala 117:28]
              skip @[Icache.scala 114:18]
        skip @[Conditional.scala 39:67]
    when cache_en : @[Icache.scala 121:17]
      when cache_we : @[Icache.scala 122:19]
        node _T_3 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 123:46]
        write mport MPORT = cache_tag[_T_3], clock
        MPORT <= cache_write_tag
        node _T_4 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_1 = cache_data_0[_T_4], clock
        MPORT_1 <= cache_write_data[0]
        node _T_5 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_2 = cache_data_1[_T_5], clock
        MPORT_2 <= cache_write_data[1]
        node _T_6 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_3 = cache_data_2[_T_6], clock
        MPORT_3 <= cache_write_data[2]
        node _T_7 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_4 = cache_data_3[_T_7], clock
        MPORT_4 <= cache_write_data[3]
        node _T_8 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_5 = cache_data_4[_T_8], clock
        MPORT_5 <= cache_write_data[4]
        node _T_9 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_6 = cache_data_5[_T_9], clock
        MPORT_6 <= cache_write_data[5]
        node _T_10 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_7 = cache_data_6[_T_10], clock
        MPORT_7 <= cache_write_data[6]
        node _T_11 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 124:117]
        write mport MPORT_8 = cache_data_7[_T_11], clock
        MPORT_8 <= cache_write_data[7]
        cache_read_tag is invalid @[Icache.scala 125:22]
        cache_read_data[0] is invalid @[Icache.scala 126:23]
        cache_read_data[1] is invalid @[Icache.scala 126:23]
        cache_read_data[2] is invalid @[Icache.scala 126:23]
        cache_read_data[3] is invalid @[Icache.scala 126:23]
        cache_read_data[4] is invalid @[Icache.scala 126:23]
        cache_read_data[5] is invalid @[Icache.scala 126:23]
        cache_read_data[6] is invalid @[Icache.scala 126:23]
        cache_read_data[7] is invalid @[Icache.scala 126:23]
        skip @[Icache.scala 122:19]
      else : @[Icache.scala 127:16]
        node _cache_read_tag_T = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 128:63]
        read mport cache_read_tag_MPORT = cache_tag[_cache_read_tag_T], clock @[Icache.scala 128:39]
        cache_read_tag <= cache_read_tag_MPORT @[Icache.scala 128:22]
        node _T_12 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_9 = cache_data_0[_T_12], clock @[Icache.scala 129:58]
        node _T_13 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_10 = cache_data_1[_T_13], clock @[Icache.scala 129:58]
        node _T_14 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_11 = cache_data_2[_T_14], clock @[Icache.scala 129:58]
        node _T_15 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_12 = cache_data_3[_T_15], clock @[Icache.scala 129:58]
        node _T_16 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_13 = cache_data_4[_T_16], clock @[Icache.scala 129:58]
        node _T_17 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_14 = cache_data_5[_T_17], clock @[Icache.scala 129:58]
        node _T_18 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_15 = cache_data_6[_T_18], clock @[Icache.scala 129:58]
        node _T_19 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 129:82]
        read mport MPORT_16 = cache_data_7[_T_19], clock @[Icache.scala 129:58]
        wire _WIRE_2 : UInt<32>[8] @[Icache.scala 129:33]
        _WIRE_2[0] <= MPORT_9 @[Icache.scala 129:33]
        _WIRE_2[1] <= MPORT_10 @[Icache.scala 129:33]
        _WIRE_2[2] <= MPORT_11 @[Icache.scala 129:33]
        _WIRE_2[3] <= MPORT_12 @[Icache.scala 129:33]
        _WIRE_2[4] <= MPORT_13 @[Icache.scala 129:33]
        _WIRE_2[5] <= MPORT_14 @[Icache.scala 129:33]
        _WIRE_2[6] <= MPORT_15 @[Icache.scala 129:33]
        _WIRE_2[7] <= MPORT_16 @[Icache.scala 129:33]
        cache_read_data[0] <= _WIRE_2[0] @[Icache.scala 129:23]
        cache_read_data[1] <= _WIRE_2[1] @[Icache.scala 129:23]
        cache_read_data[2] <= _WIRE_2[2] @[Icache.scala 129:23]
        cache_read_data[3] <= _WIRE_2[3] @[Icache.scala 129:23]
        cache_read_data[4] <= _WIRE_2[4] @[Icache.scala 129:23]
        cache_read_data[5] <= _WIRE_2[5] @[Icache.scala 129:23]
        cache_read_data[6] <= _WIRE_2[6] @[Icache.scala 129:23]
        cache_read_data[7] <= _WIRE_2[7] @[Icache.scala 129:23]
        skip @[Icache.scala 127:16]
      skip @[Icache.scala 121:17]
    else : @[Icache.scala 131:14]
      cache_read_tag is invalid @[Icache.scala 132:20]
      cache_read_data[0] is invalid @[Icache.scala 133:21]
      cache_read_data[1] is invalid @[Icache.scala 133:21]
      cache_read_data[2] is invalid @[Icache.scala 133:21]
      cache_read_data[3] is invalid @[Icache.scala 133:21]
      cache_read_data[4] is invalid @[Icache.scala 133:21]
      cache_read_data[5] is invalid @[Icache.scala 133:21]
      cache_read_data[6] is invalid @[Icache.scala 133:21]
      cache_read_data[7] is invalid @[Icache.scala 133:21]
      skip @[Icache.scala 131:14]
    when cache_valid_we : @[Icache.scala 135:23]
      node _T_20 = bits(io.icache_req.bits.addr, 11, 5) @[Icache.scala 136:40]
      cache_valid[_T_20] <= UInt<1>("h01") @[Icache.scala 136:103]
      skip @[Icache.scala 135:23]
    node io_io_read_req_bits_addr_hi = bits(io.icache_req.bits.addr, 31, 5) @[Icache.scala 139:58]
    node _io_io_read_req_bits_addr_T = cat(io_io_read_req_bits_addr_hi, UInt<5>("h00")) @[Cat.scala 30:58]
    io.io_read_req.bits.addr <= _io_io_read_req_bits_addr_T @[Icache.scala 139:27]
    io.io_read_resp.ready <= UInt<1>("h01") @[Icache.scala 140:24]
    io.icache_resp.bits.addr <= io.icache_req.bits.addr @[Icache.scala 141:27]
    io.icache_debug.cache_we <= cache_we @[Icache.scala 144:27]
    io.icache_debug.icache_req.valid <= io.icache_req.valid @[Icache.scala 145:35]
    io.icache_debug.icache_req.bits.addr <= io.icache_req.bits.addr @[Icache.scala 146:39]
    io.icache_debug.state <= state @[Icache.scala 147:24]
    io.icache_debug.hit_cache <= hit_cache @[Icache.scala 148:28]
    io.icache_debug.cache_read_tag <= cache_read_tag @[Icache.scala 149:33]
    
  module FetchBuffer : 
    input clock : Clock
    input reset : Reset
    output io : {flip bpu_inst_packet_i : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>[8], addr : UInt<32>, gh_backup : UInt<4>, valid_mask : UInt<1>[8], delay_mask : UInt<1>[8], branch_mask : UInt<1>[8], predict_mask : UInt<1>[8]}}, inst_bank : {valid : UInt<1>, bits : {data : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[2]}}, flip fb_resp : {deq_valid : UInt<1>[2]}, flip clear_i : UInt<1>}
    
    reg fetch_buffer : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[17], clock @[FetchBuffer.scala 50:25]
    reg deq_idxs_0 : UInt<17>, clock with : (reset => (reset, UInt<17>("h01"))) @[FetchBuffer.scala 51:29]
    reg tail : UInt<17>, clock with : (reset => (reset, UInt<17>("h01"))) @[FetchBuffer.scala 52:29]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FetchBuffer.scala 53:29]
    wire inst_packet : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[8] @[FetchBuffer.scala 54:26]
    node hit_head = eq(deq_idxs_0, tail) @[FetchBuffer.scala 55:27]
    node is_full = and(hit_head, maybe_full) @[FetchBuffer.scala 56:31]
    node _is_empty_T = eq(maybe_full, UInt<1>("h00")) @[FetchBuffer.scala 57:34]
    node is_empty = and(hit_head, _is_empty_T) @[FetchBuffer.scala 57:31]
    wire enq_idxs : UInt<17>[8] @[FetchBuffer.scala 59:26]
    node _might_hit_head_T = eq(enq_idxs[0], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_1 = eq(enq_idxs[1], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_2 = eq(enq_idxs[2], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_3 = eq(enq_idxs[3], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_4 = eq(enq_idxs[4], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_5 = eq(enq_idxs[5], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_6 = eq(enq_idxs[6], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_7 = eq(enq_idxs[7], deq_idxs_0) @[FetchBuffer.scala 61:39]
    node _might_hit_head_T_8 = or(_might_hit_head_T, _might_hit_head_T_1) @[FetchBuffer.scala 61:58]
    node _might_hit_head_T_9 = or(_might_hit_head_T_8, _might_hit_head_T_2) @[FetchBuffer.scala 61:58]
    node _might_hit_head_T_10 = or(_might_hit_head_T_9, _might_hit_head_T_3) @[FetchBuffer.scala 61:58]
    node _might_hit_head_T_11 = or(_might_hit_head_T_10, _might_hit_head_T_4) @[FetchBuffer.scala 61:58]
    node _might_hit_head_T_12 = or(_might_hit_head_T_11, _might_hit_head_T_5) @[FetchBuffer.scala 61:58]
    node _might_hit_head_T_13 = or(_might_hit_head_T_12, _might_hit_head_T_6) @[FetchBuffer.scala 61:58]
    node might_hit_head = or(_might_hit_head_T_13, _might_hit_head_T_7) @[FetchBuffer.scala 61:58]
    node _do_enq_T = or(is_full, might_hit_head) @[FetchBuffer.scala 63:47]
    node _do_enq_T_1 = eq(_do_enq_T, UInt<1>("h00")) @[FetchBuffer.scala 63:37]
    node _do_enq_T_2 = or(is_empty, _do_enq_T_1) @[FetchBuffer.scala 63:34]
    node _do_enq_T_3 = and(_do_enq_T_2, io.bpu_inst_packet_i.valid) @[FetchBuffer.scala 63:67]
    node _do_enq_T_4 = or(io.bpu_inst_packet_i.bits.valid_mask[0], io.bpu_inst_packet_i.bits.valid_mask[1]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_5 = or(_do_enq_T_4, io.bpu_inst_packet_i.bits.valid_mask[2]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_6 = or(_do_enq_T_5, io.bpu_inst_packet_i.bits.valid_mask[3]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_7 = or(_do_enq_T_6, io.bpu_inst_packet_i.bits.valid_mask[4]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_8 = or(_do_enq_T_7, io.bpu_inst_packet_i.bits.valid_mask[5]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_9 = or(_do_enq_T_8, io.bpu_inst_packet_i.bits.valid_mask[6]) @[FetchBuffer.scala 63:146]
    node _do_enq_T_10 = or(_do_enq_T_9, io.bpu_inst_packet_i.bits.valid_mask[7]) @[FetchBuffer.scala 63:146]
    node do_enq = and(_do_enq_T_3, _do_enq_T_10) @[FetchBuffer.scala 63:97]
    enq_idxs[0] <= tail @[FetchBuffer.scala 67:17]
    node hi = bits(tail, 15, 0) @[FetchBuffer.scala 42:12]
    node lo = bits(tail, 16, 16) @[FetchBuffer.scala 42:29]
    node _T = cat(hi, lo) @[Cat.scala 30:58]
    node _T_1 = mux(io.bpu_inst_packet_i.bits.valid_mask[0], _T, tail) @[FetchBuffer.scala 68:18]
    enq_idxs[1] <= _T_1 @[FetchBuffer.scala 67:17]
    node hi_1 = bits(_T_1, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_1 = bits(_T_1, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_3 = mux(io.bpu_inst_packet_i.bits.valid_mask[1], _T_2, _T_1) @[FetchBuffer.scala 68:18]
    enq_idxs[2] <= _T_3 @[FetchBuffer.scala 67:17]
    node hi_2 = bits(_T_3, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_2 = bits(_T_3, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_5 = mux(io.bpu_inst_packet_i.bits.valid_mask[2], _T_4, _T_3) @[FetchBuffer.scala 68:18]
    enq_idxs[3] <= _T_5 @[FetchBuffer.scala 67:17]
    node hi_3 = bits(_T_5, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_3 = bits(_T_5, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_6 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_7 = mux(io.bpu_inst_packet_i.bits.valid_mask[3], _T_6, _T_5) @[FetchBuffer.scala 68:18]
    enq_idxs[4] <= _T_7 @[FetchBuffer.scala 67:17]
    node hi_4 = bits(_T_7, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_4 = bits(_T_7, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_8 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_9 = mux(io.bpu_inst_packet_i.bits.valid_mask[4], _T_8, _T_7) @[FetchBuffer.scala 68:18]
    enq_idxs[5] <= _T_9 @[FetchBuffer.scala 67:17]
    node hi_5 = bits(_T_9, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_5 = bits(_T_9, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_10 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_11 = mux(io.bpu_inst_packet_i.bits.valid_mask[5], _T_10, _T_9) @[FetchBuffer.scala 68:18]
    enq_idxs[6] <= _T_11 @[FetchBuffer.scala 67:17]
    node hi_6 = bits(_T_11, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_6 = bits(_T_11, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_12 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_13 = mux(io.bpu_inst_packet_i.bits.valid_mask[6], _T_12, _T_11) @[FetchBuffer.scala 68:18]
    enq_idxs[7] <= _T_13 @[FetchBuffer.scala 67:17]
    node hi_7 = bits(_T_13, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_7 = bits(_T_13, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_14 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node enq_idx = mux(io.bpu_inst_packet_i.bits.valid_mask[7], _T_14, _T_13) @[FetchBuffer.scala 68:18]
    inst_packet[0].inst <= io.bpu_inst_packet_i.bits.data[0] @[FetchBuffer.scala 73:25]
    node inst_packet_0_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_0_inst_addr_hi = cat(inst_packet_0_inst_addr_hi_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node _inst_packet_0_inst_addr_T = cat(inst_packet_0_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[0].inst_addr <= _inst_packet_0_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[0].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[0] @[FetchBuffer.scala 75:30]
    inst_packet[0].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[0] @[FetchBuffer.scala 76:29]
    inst_packet[0].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[0] @[FetchBuffer.scala 77:34]
    inst_packet[0].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[0] @[FetchBuffer.scala 78:29]
    inst_packet[0].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[1].inst <= io.bpu_inst_packet_i.bits.data[1] @[FetchBuffer.scala 73:25]
    node inst_packet_1_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_1_inst_addr_hi = cat(inst_packet_1_inst_addr_hi_hi, UInt<3>("h01")) @[Cat.scala 30:58]
    node _inst_packet_1_inst_addr_T = cat(inst_packet_1_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[1].inst_addr <= _inst_packet_1_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[1].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[1] @[FetchBuffer.scala 75:30]
    inst_packet[1].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[1] @[FetchBuffer.scala 76:29]
    inst_packet[1].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[1] @[FetchBuffer.scala 77:34]
    inst_packet[1].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[1] @[FetchBuffer.scala 78:29]
    inst_packet[1].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[2].inst <= io.bpu_inst_packet_i.bits.data[2] @[FetchBuffer.scala 73:25]
    node inst_packet_2_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_2_inst_addr_hi = cat(inst_packet_2_inst_addr_hi_hi, UInt<3>("h02")) @[Cat.scala 30:58]
    node _inst_packet_2_inst_addr_T = cat(inst_packet_2_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[2].inst_addr <= _inst_packet_2_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[2].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[2] @[FetchBuffer.scala 75:30]
    inst_packet[2].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[2] @[FetchBuffer.scala 76:29]
    inst_packet[2].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[2] @[FetchBuffer.scala 77:34]
    inst_packet[2].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[2] @[FetchBuffer.scala 78:29]
    inst_packet[2].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[3].inst <= io.bpu_inst_packet_i.bits.data[3] @[FetchBuffer.scala 73:25]
    node inst_packet_3_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_3_inst_addr_hi = cat(inst_packet_3_inst_addr_hi_hi, UInt<3>("h03")) @[Cat.scala 30:58]
    node _inst_packet_3_inst_addr_T = cat(inst_packet_3_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[3].inst_addr <= _inst_packet_3_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[3].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[3] @[FetchBuffer.scala 75:30]
    inst_packet[3].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[3] @[FetchBuffer.scala 76:29]
    inst_packet[3].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[3] @[FetchBuffer.scala 77:34]
    inst_packet[3].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[3] @[FetchBuffer.scala 78:29]
    inst_packet[3].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[4].inst <= io.bpu_inst_packet_i.bits.data[4] @[FetchBuffer.scala 73:25]
    node inst_packet_4_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_4_inst_addr_hi = cat(inst_packet_4_inst_addr_hi_hi, UInt<3>("h04")) @[Cat.scala 30:58]
    node _inst_packet_4_inst_addr_T = cat(inst_packet_4_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[4].inst_addr <= _inst_packet_4_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[4].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[4] @[FetchBuffer.scala 75:30]
    inst_packet[4].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[4] @[FetchBuffer.scala 76:29]
    inst_packet[4].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[4] @[FetchBuffer.scala 77:34]
    inst_packet[4].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[4] @[FetchBuffer.scala 78:29]
    inst_packet[4].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[5].inst <= io.bpu_inst_packet_i.bits.data[5] @[FetchBuffer.scala 73:25]
    node inst_packet_5_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_5_inst_addr_hi = cat(inst_packet_5_inst_addr_hi_hi, UInt<3>("h05")) @[Cat.scala 30:58]
    node _inst_packet_5_inst_addr_T = cat(inst_packet_5_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[5].inst_addr <= _inst_packet_5_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[5].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[5] @[FetchBuffer.scala 75:30]
    inst_packet[5].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[5] @[FetchBuffer.scala 76:29]
    inst_packet[5].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[5] @[FetchBuffer.scala 77:34]
    inst_packet[5].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[5] @[FetchBuffer.scala 78:29]
    inst_packet[5].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[6].inst <= io.bpu_inst_packet_i.bits.data[6] @[FetchBuffer.scala 73:25]
    node inst_packet_6_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_6_inst_addr_hi = cat(inst_packet_6_inst_addr_hi_hi, UInt<3>("h06")) @[Cat.scala 30:58]
    node _inst_packet_6_inst_addr_T = cat(inst_packet_6_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[6].inst_addr <= _inst_packet_6_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[6].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[6] @[FetchBuffer.scala 75:30]
    inst_packet[6].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[6] @[FetchBuffer.scala 76:29]
    inst_packet[6].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[6] @[FetchBuffer.scala 77:34]
    inst_packet[6].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[6] @[FetchBuffer.scala 78:29]
    inst_packet[6].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    inst_packet[7].inst <= io.bpu_inst_packet_i.bits.data[7] @[FetchBuffer.scala 73:25]
    node inst_packet_7_inst_addr_hi_hi = bits(io.bpu_inst_packet_i.bits.addr, 31, 5) @[FetchBuffer.scala 74:67]
    node inst_packet_7_inst_addr_hi = cat(inst_packet_7_inst_addr_hi_hi, UInt<3>("h07")) @[Cat.scala 30:58]
    node _inst_packet_7_inst_addr_T = cat(inst_packet_7_inst_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    inst_packet[7].inst_addr <= _inst_packet_7_inst_addr_T @[FetchBuffer.scala 74:30]
    inst_packet[7].is_branch <= io.bpu_inst_packet_i.bits.branch_mask[7] @[FetchBuffer.scala 75:30]
    inst_packet[7].is_delay <= io.bpu_inst_packet_i.bits.delay_mask[7] @[FetchBuffer.scala 76:29]
    inst_packet[7].predict_taken <= io.bpu_inst_packet_i.bits.predict_mask[7] @[FetchBuffer.scala 77:34]
    inst_packet[7].is_valid <= io.bpu_inst_packet_i.bits.valid_mask[7] @[FetchBuffer.scala 78:29]
    inst_packet[7].gh_backup <= io.bpu_inst_packet_i.bits.gh_backup @[FetchBuffer.scala 79:30]
    node _T_15 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_16 = bits(enq_idxs[0], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_17 = and(_T_15, _T_16) @[FetchBuffer.scala 84:46]
    when _T_17 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_18 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_19 = bits(enq_idxs[0], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_20 = and(_T_18, _T_19) @[FetchBuffer.scala 84:46]
    when _T_20 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_21 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_22 = bits(enq_idxs[0], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_23 = and(_T_21, _T_22) @[FetchBuffer.scala 84:46]
    when _T_23 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_24 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_25 = bits(enq_idxs[0], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_26 = and(_T_24, _T_25) @[FetchBuffer.scala 84:46]
    when _T_26 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_27 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_28 = bits(enq_idxs[0], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_29 = and(_T_27, _T_28) @[FetchBuffer.scala 84:46]
    when _T_29 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_30 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_31 = bits(enq_idxs[0], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_32 = and(_T_30, _T_31) @[FetchBuffer.scala 84:46]
    when _T_32 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_33 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_34 = bits(enq_idxs[0], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_35 = and(_T_33, _T_34) @[FetchBuffer.scala 84:46]
    when _T_35 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_36 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_37 = bits(enq_idxs[0], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_38 = and(_T_36, _T_37) @[FetchBuffer.scala 84:46]
    when _T_38 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_39 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_40 = bits(enq_idxs[0], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_41 = and(_T_39, _T_40) @[FetchBuffer.scala 84:46]
    when _T_41 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_42 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_43 = bits(enq_idxs[0], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_44 = and(_T_42, _T_43) @[FetchBuffer.scala 84:46]
    when _T_44 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_45 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_46 = bits(enq_idxs[0], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_47 = and(_T_45, _T_46) @[FetchBuffer.scala 84:46]
    when _T_47 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_48 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_49 = bits(enq_idxs[0], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_50 = and(_T_48, _T_49) @[FetchBuffer.scala 84:46]
    when _T_50 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_51 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_52 = bits(enq_idxs[0], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_53 = and(_T_51, _T_52) @[FetchBuffer.scala 84:46]
    when _T_53 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_54 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_55 = bits(enq_idxs[0], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_56 = and(_T_54, _T_55) @[FetchBuffer.scala 84:46]
    when _T_56 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_57 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_58 = bits(enq_idxs[0], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_59 = and(_T_57, _T_58) @[FetchBuffer.scala 84:46]
    when _T_59 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_60 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_61 = bits(enq_idxs[0], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_62 = and(_T_60, _T_61) @[FetchBuffer.scala 84:46]
    when _T_62 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_63 = and(do_enq, inst_packet[0].is_valid) @[FetchBuffer.scala 84:19]
    node _T_64 = bits(enq_idxs[0], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_65 = and(_T_63, _T_64) @[FetchBuffer.scala 84:46]
    when _T_65 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[0].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[0].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[0].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[0].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[0].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[0].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[0].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_66 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_67 = bits(enq_idxs[1], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_68 = and(_T_66, _T_67) @[FetchBuffer.scala 84:46]
    when _T_68 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_69 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_70 = bits(enq_idxs[1], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_71 = and(_T_69, _T_70) @[FetchBuffer.scala 84:46]
    when _T_71 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_72 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_73 = bits(enq_idxs[1], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_74 = and(_T_72, _T_73) @[FetchBuffer.scala 84:46]
    when _T_74 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_75 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_76 = bits(enq_idxs[1], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_77 = and(_T_75, _T_76) @[FetchBuffer.scala 84:46]
    when _T_77 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_78 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_79 = bits(enq_idxs[1], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_80 = and(_T_78, _T_79) @[FetchBuffer.scala 84:46]
    when _T_80 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_81 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_82 = bits(enq_idxs[1], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_83 = and(_T_81, _T_82) @[FetchBuffer.scala 84:46]
    when _T_83 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_84 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_85 = bits(enq_idxs[1], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_86 = and(_T_84, _T_85) @[FetchBuffer.scala 84:46]
    when _T_86 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_87 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_88 = bits(enq_idxs[1], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_89 = and(_T_87, _T_88) @[FetchBuffer.scala 84:46]
    when _T_89 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_90 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_91 = bits(enq_idxs[1], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_92 = and(_T_90, _T_91) @[FetchBuffer.scala 84:46]
    when _T_92 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_93 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_94 = bits(enq_idxs[1], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_95 = and(_T_93, _T_94) @[FetchBuffer.scala 84:46]
    when _T_95 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_96 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_97 = bits(enq_idxs[1], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_98 = and(_T_96, _T_97) @[FetchBuffer.scala 84:46]
    when _T_98 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_99 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_100 = bits(enq_idxs[1], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_101 = and(_T_99, _T_100) @[FetchBuffer.scala 84:46]
    when _T_101 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_102 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_103 = bits(enq_idxs[1], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_104 = and(_T_102, _T_103) @[FetchBuffer.scala 84:46]
    when _T_104 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_105 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_106 = bits(enq_idxs[1], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_107 = and(_T_105, _T_106) @[FetchBuffer.scala 84:46]
    when _T_107 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_108 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_109 = bits(enq_idxs[1], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_110 = and(_T_108, _T_109) @[FetchBuffer.scala 84:46]
    when _T_110 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_111 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_112 = bits(enq_idxs[1], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_113 = and(_T_111, _T_112) @[FetchBuffer.scala 84:46]
    when _T_113 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_114 = and(do_enq, inst_packet[1].is_valid) @[FetchBuffer.scala 84:19]
    node _T_115 = bits(enq_idxs[1], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_116 = and(_T_114, _T_115) @[FetchBuffer.scala 84:46]
    when _T_116 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[1].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[1].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[1].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[1].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[1].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[1].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[1].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_117 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_118 = bits(enq_idxs[2], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_119 = and(_T_117, _T_118) @[FetchBuffer.scala 84:46]
    when _T_119 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_120 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_121 = bits(enq_idxs[2], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_122 = and(_T_120, _T_121) @[FetchBuffer.scala 84:46]
    when _T_122 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_123 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_124 = bits(enq_idxs[2], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_125 = and(_T_123, _T_124) @[FetchBuffer.scala 84:46]
    when _T_125 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_126 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_127 = bits(enq_idxs[2], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_128 = and(_T_126, _T_127) @[FetchBuffer.scala 84:46]
    when _T_128 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_129 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_130 = bits(enq_idxs[2], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_131 = and(_T_129, _T_130) @[FetchBuffer.scala 84:46]
    when _T_131 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_132 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_133 = bits(enq_idxs[2], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_134 = and(_T_132, _T_133) @[FetchBuffer.scala 84:46]
    when _T_134 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_135 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_136 = bits(enq_idxs[2], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_137 = and(_T_135, _T_136) @[FetchBuffer.scala 84:46]
    when _T_137 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_138 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_139 = bits(enq_idxs[2], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_140 = and(_T_138, _T_139) @[FetchBuffer.scala 84:46]
    when _T_140 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_141 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_142 = bits(enq_idxs[2], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_143 = and(_T_141, _T_142) @[FetchBuffer.scala 84:46]
    when _T_143 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_144 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_145 = bits(enq_idxs[2], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_146 = and(_T_144, _T_145) @[FetchBuffer.scala 84:46]
    when _T_146 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_147 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_148 = bits(enq_idxs[2], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_149 = and(_T_147, _T_148) @[FetchBuffer.scala 84:46]
    when _T_149 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_150 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_151 = bits(enq_idxs[2], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_152 = and(_T_150, _T_151) @[FetchBuffer.scala 84:46]
    when _T_152 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_153 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_154 = bits(enq_idxs[2], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_155 = and(_T_153, _T_154) @[FetchBuffer.scala 84:46]
    when _T_155 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_156 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_157 = bits(enq_idxs[2], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_158 = and(_T_156, _T_157) @[FetchBuffer.scala 84:46]
    when _T_158 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_159 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_160 = bits(enq_idxs[2], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_161 = and(_T_159, _T_160) @[FetchBuffer.scala 84:46]
    when _T_161 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_162 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_163 = bits(enq_idxs[2], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_164 = and(_T_162, _T_163) @[FetchBuffer.scala 84:46]
    when _T_164 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_165 = and(do_enq, inst_packet[2].is_valid) @[FetchBuffer.scala 84:19]
    node _T_166 = bits(enq_idxs[2], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_167 = and(_T_165, _T_166) @[FetchBuffer.scala 84:46]
    when _T_167 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[2].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[2].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[2].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[2].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[2].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[2].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[2].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_168 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_169 = bits(enq_idxs[3], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_170 = and(_T_168, _T_169) @[FetchBuffer.scala 84:46]
    when _T_170 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_171 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_172 = bits(enq_idxs[3], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_173 = and(_T_171, _T_172) @[FetchBuffer.scala 84:46]
    when _T_173 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_174 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_175 = bits(enq_idxs[3], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_176 = and(_T_174, _T_175) @[FetchBuffer.scala 84:46]
    when _T_176 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_177 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_178 = bits(enq_idxs[3], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_179 = and(_T_177, _T_178) @[FetchBuffer.scala 84:46]
    when _T_179 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_180 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_181 = bits(enq_idxs[3], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_182 = and(_T_180, _T_181) @[FetchBuffer.scala 84:46]
    when _T_182 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_183 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_184 = bits(enq_idxs[3], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_185 = and(_T_183, _T_184) @[FetchBuffer.scala 84:46]
    when _T_185 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_186 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_187 = bits(enq_idxs[3], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_188 = and(_T_186, _T_187) @[FetchBuffer.scala 84:46]
    when _T_188 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_189 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_190 = bits(enq_idxs[3], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_191 = and(_T_189, _T_190) @[FetchBuffer.scala 84:46]
    when _T_191 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_192 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_193 = bits(enq_idxs[3], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_194 = and(_T_192, _T_193) @[FetchBuffer.scala 84:46]
    when _T_194 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_195 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_196 = bits(enq_idxs[3], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_197 = and(_T_195, _T_196) @[FetchBuffer.scala 84:46]
    when _T_197 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_198 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_199 = bits(enq_idxs[3], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_200 = and(_T_198, _T_199) @[FetchBuffer.scala 84:46]
    when _T_200 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_201 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_202 = bits(enq_idxs[3], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_203 = and(_T_201, _T_202) @[FetchBuffer.scala 84:46]
    when _T_203 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_204 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_205 = bits(enq_idxs[3], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_206 = and(_T_204, _T_205) @[FetchBuffer.scala 84:46]
    when _T_206 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_207 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_208 = bits(enq_idxs[3], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_209 = and(_T_207, _T_208) @[FetchBuffer.scala 84:46]
    when _T_209 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_210 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_211 = bits(enq_idxs[3], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_212 = and(_T_210, _T_211) @[FetchBuffer.scala 84:46]
    when _T_212 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_213 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_214 = bits(enq_idxs[3], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_215 = and(_T_213, _T_214) @[FetchBuffer.scala 84:46]
    when _T_215 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_216 = and(do_enq, inst_packet[3].is_valid) @[FetchBuffer.scala 84:19]
    node _T_217 = bits(enq_idxs[3], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_218 = and(_T_216, _T_217) @[FetchBuffer.scala 84:46]
    when _T_218 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[3].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[3].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[3].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[3].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[3].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[3].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[3].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_219 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_220 = bits(enq_idxs[4], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_221 = and(_T_219, _T_220) @[FetchBuffer.scala 84:46]
    when _T_221 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_222 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_223 = bits(enq_idxs[4], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_224 = and(_T_222, _T_223) @[FetchBuffer.scala 84:46]
    when _T_224 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_225 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_226 = bits(enq_idxs[4], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_227 = and(_T_225, _T_226) @[FetchBuffer.scala 84:46]
    when _T_227 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_228 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_229 = bits(enq_idxs[4], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_230 = and(_T_228, _T_229) @[FetchBuffer.scala 84:46]
    when _T_230 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_231 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_232 = bits(enq_idxs[4], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_233 = and(_T_231, _T_232) @[FetchBuffer.scala 84:46]
    when _T_233 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_234 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_235 = bits(enq_idxs[4], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_236 = and(_T_234, _T_235) @[FetchBuffer.scala 84:46]
    when _T_236 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_237 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_238 = bits(enq_idxs[4], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_239 = and(_T_237, _T_238) @[FetchBuffer.scala 84:46]
    when _T_239 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_240 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_241 = bits(enq_idxs[4], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_242 = and(_T_240, _T_241) @[FetchBuffer.scala 84:46]
    when _T_242 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_243 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_244 = bits(enq_idxs[4], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_245 = and(_T_243, _T_244) @[FetchBuffer.scala 84:46]
    when _T_245 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_246 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_247 = bits(enq_idxs[4], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_248 = and(_T_246, _T_247) @[FetchBuffer.scala 84:46]
    when _T_248 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_249 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_250 = bits(enq_idxs[4], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_251 = and(_T_249, _T_250) @[FetchBuffer.scala 84:46]
    when _T_251 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_252 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_253 = bits(enq_idxs[4], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_254 = and(_T_252, _T_253) @[FetchBuffer.scala 84:46]
    when _T_254 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_255 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_256 = bits(enq_idxs[4], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_257 = and(_T_255, _T_256) @[FetchBuffer.scala 84:46]
    when _T_257 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_258 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_259 = bits(enq_idxs[4], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_260 = and(_T_258, _T_259) @[FetchBuffer.scala 84:46]
    when _T_260 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_261 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_262 = bits(enq_idxs[4], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_263 = and(_T_261, _T_262) @[FetchBuffer.scala 84:46]
    when _T_263 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_264 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_265 = bits(enq_idxs[4], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_266 = and(_T_264, _T_265) @[FetchBuffer.scala 84:46]
    when _T_266 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_267 = and(do_enq, inst_packet[4].is_valid) @[FetchBuffer.scala 84:19]
    node _T_268 = bits(enq_idxs[4], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_269 = and(_T_267, _T_268) @[FetchBuffer.scala 84:46]
    when _T_269 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[4].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[4].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[4].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[4].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[4].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[4].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[4].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_270 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_271 = bits(enq_idxs[5], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_272 = and(_T_270, _T_271) @[FetchBuffer.scala 84:46]
    when _T_272 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_273 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_274 = bits(enq_idxs[5], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_275 = and(_T_273, _T_274) @[FetchBuffer.scala 84:46]
    when _T_275 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_276 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_277 = bits(enq_idxs[5], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_278 = and(_T_276, _T_277) @[FetchBuffer.scala 84:46]
    when _T_278 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_279 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_280 = bits(enq_idxs[5], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_281 = and(_T_279, _T_280) @[FetchBuffer.scala 84:46]
    when _T_281 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_282 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_283 = bits(enq_idxs[5], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_284 = and(_T_282, _T_283) @[FetchBuffer.scala 84:46]
    when _T_284 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_285 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_286 = bits(enq_idxs[5], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_287 = and(_T_285, _T_286) @[FetchBuffer.scala 84:46]
    when _T_287 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_288 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_289 = bits(enq_idxs[5], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_290 = and(_T_288, _T_289) @[FetchBuffer.scala 84:46]
    when _T_290 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_291 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_292 = bits(enq_idxs[5], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_293 = and(_T_291, _T_292) @[FetchBuffer.scala 84:46]
    when _T_293 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_294 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_295 = bits(enq_idxs[5], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_296 = and(_T_294, _T_295) @[FetchBuffer.scala 84:46]
    when _T_296 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_297 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_298 = bits(enq_idxs[5], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_299 = and(_T_297, _T_298) @[FetchBuffer.scala 84:46]
    when _T_299 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_300 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_301 = bits(enq_idxs[5], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_302 = and(_T_300, _T_301) @[FetchBuffer.scala 84:46]
    when _T_302 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_303 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_304 = bits(enq_idxs[5], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_305 = and(_T_303, _T_304) @[FetchBuffer.scala 84:46]
    when _T_305 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_306 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_307 = bits(enq_idxs[5], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_308 = and(_T_306, _T_307) @[FetchBuffer.scala 84:46]
    when _T_308 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_309 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_310 = bits(enq_idxs[5], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_311 = and(_T_309, _T_310) @[FetchBuffer.scala 84:46]
    when _T_311 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_312 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_313 = bits(enq_idxs[5], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_314 = and(_T_312, _T_313) @[FetchBuffer.scala 84:46]
    when _T_314 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_315 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_316 = bits(enq_idxs[5], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_317 = and(_T_315, _T_316) @[FetchBuffer.scala 84:46]
    when _T_317 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_318 = and(do_enq, inst_packet[5].is_valid) @[FetchBuffer.scala 84:19]
    node _T_319 = bits(enq_idxs[5], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_320 = and(_T_318, _T_319) @[FetchBuffer.scala 84:46]
    when _T_320 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[5].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[5].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[5].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[5].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[5].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[5].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[5].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_321 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_322 = bits(enq_idxs[6], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_323 = and(_T_321, _T_322) @[FetchBuffer.scala 84:46]
    when _T_323 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_324 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_325 = bits(enq_idxs[6], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_326 = and(_T_324, _T_325) @[FetchBuffer.scala 84:46]
    when _T_326 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_327 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_328 = bits(enq_idxs[6], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_329 = and(_T_327, _T_328) @[FetchBuffer.scala 84:46]
    when _T_329 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_330 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_331 = bits(enq_idxs[6], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_332 = and(_T_330, _T_331) @[FetchBuffer.scala 84:46]
    when _T_332 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_333 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_334 = bits(enq_idxs[6], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_335 = and(_T_333, _T_334) @[FetchBuffer.scala 84:46]
    when _T_335 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_336 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_337 = bits(enq_idxs[6], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_338 = and(_T_336, _T_337) @[FetchBuffer.scala 84:46]
    when _T_338 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_339 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_340 = bits(enq_idxs[6], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_341 = and(_T_339, _T_340) @[FetchBuffer.scala 84:46]
    when _T_341 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_342 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_343 = bits(enq_idxs[6], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_344 = and(_T_342, _T_343) @[FetchBuffer.scala 84:46]
    when _T_344 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_345 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_346 = bits(enq_idxs[6], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_347 = and(_T_345, _T_346) @[FetchBuffer.scala 84:46]
    when _T_347 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_348 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_349 = bits(enq_idxs[6], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_350 = and(_T_348, _T_349) @[FetchBuffer.scala 84:46]
    when _T_350 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_351 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_352 = bits(enq_idxs[6], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_353 = and(_T_351, _T_352) @[FetchBuffer.scala 84:46]
    when _T_353 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_354 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_355 = bits(enq_idxs[6], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_356 = and(_T_354, _T_355) @[FetchBuffer.scala 84:46]
    when _T_356 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_357 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_358 = bits(enq_idxs[6], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_359 = and(_T_357, _T_358) @[FetchBuffer.scala 84:46]
    when _T_359 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_360 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_361 = bits(enq_idxs[6], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_362 = and(_T_360, _T_361) @[FetchBuffer.scala 84:46]
    when _T_362 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_363 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_364 = bits(enq_idxs[6], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_365 = and(_T_363, _T_364) @[FetchBuffer.scala 84:46]
    when _T_365 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_366 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_367 = bits(enq_idxs[6], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_368 = and(_T_366, _T_367) @[FetchBuffer.scala 84:46]
    when _T_368 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_369 = and(do_enq, inst_packet[6].is_valid) @[FetchBuffer.scala 84:19]
    node _T_370 = bits(enq_idxs[6], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_371 = and(_T_369, _T_370) @[FetchBuffer.scala 84:46]
    when _T_371 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[6].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[6].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[6].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[6].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[6].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[6].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[6].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_372 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_373 = bits(enq_idxs[7], 0, 0) @[FetchBuffer.scala 84:60]
    node _T_374 = and(_T_372, _T_373) @[FetchBuffer.scala 84:46]
    when _T_374 : @[FetchBuffer.scala 84:65]
      fetch_buffer[0].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[0].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[0].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[0].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_375 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_376 = bits(enq_idxs[7], 1, 1) @[FetchBuffer.scala 84:60]
    node _T_377 = and(_T_375, _T_376) @[FetchBuffer.scala 84:46]
    when _T_377 : @[FetchBuffer.scala 84:65]
      fetch_buffer[1].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[1].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[1].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[1].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_378 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_379 = bits(enq_idxs[7], 2, 2) @[FetchBuffer.scala 84:60]
    node _T_380 = and(_T_378, _T_379) @[FetchBuffer.scala 84:46]
    when _T_380 : @[FetchBuffer.scala 84:65]
      fetch_buffer[2].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[2].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[2].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[2].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_381 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_382 = bits(enq_idxs[7], 3, 3) @[FetchBuffer.scala 84:60]
    node _T_383 = and(_T_381, _T_382) @[FetchBuffer.scala 84:46]
    when _T_383 : @[FetchBuffer.scala 84:65]
      fetch_buffer[3].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[3].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[3].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[3].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_384 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_385 = bits(enq_idxs[7], 4, 4) @[FetchBuffer.scala 84:60]
    node _T_386 = and(_T_384, _T_385) @[FetchBuffer.scala 84:46]
    when _T_386 : @[FetchBuffer.scala 84:65]
      fetch_buffer[4].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[4].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[4].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[4].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_387 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_388 = bits(enq_idxs[7], 5, 5) @[FetchBuffer.scala 84:60]
    node _T_389 = and(_T_387, _T_388) @[FetchBuffer.scala 84:46]
    when _T_389 : @[FetchBuffer.scala 84:65]
      fetch_buffer[5].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[5].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[5].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[5].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_390 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_391 = bits(enq_idxs[7], 6, 6) @[FetchBuffer.scala 84:60]
    node _T_392 = and(_T_390, _T_391) @[FetchBuffer.scala 84:46]
    when _T_392 : @[FetchBuffer.scala 84:65]
      fetch_buffer[6].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[6].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[6].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[6].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_393 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_394 = bits(enq_idxs[7], 7, 7) @[FetchBuffer.scala 84:60]
    node _T_395 = and(_T_393, _T_394) @[FetchBuffer.scala 84:46]
    when _T_395 : @[FetchBuffer.scala 84:65]
      fetch_buffer[7].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[7].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[7].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[7].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_396 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_397 = bits(enq_idxs[7], 8, 8) @[FetchBuffer.scala 84:60]
    node _T_398 = and(_T_396, _T_397) @[FetchBuffer.scala 84:46]
    when _T_398 : @[FetchBuffer.scala 84:65]
      fetch_buffer[8].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[8].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[8].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[8].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_399 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_400 = bits(enq_idxs[7], 9, 9) @[FetchBuffer.scala 84:60]
    node _T_401 = and(_T_399, _T_400) @[FetchBuffer.scala 84:46]
    when _T_401 : @[FetchBuffer.scala 84:65]
      fetch_buffer[9].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[9].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[9].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[9].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_402 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_403 = bits(enq_idxs[7], 10, 10) @[FetchBuffer.scala 84:60]
    node _T_404 = and(_T_402, _T_403) @[FetchBuffer.scala 84:46]
    when _T_404 : @[FetchBuffer.scala 84:65]
      fetch_buffer[10].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[10].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[10].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[10].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_405 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_406 = bits(enq_idxs[7], 11, 11) @[FetchBuffer.scala 84:60]
    node _T_407 = and(_T_405, _T_406) @[FetchBuffer.scala 84:46]
    when _T_407 : @[FetchBuffer.scala 84:65]
      fetch_buffer[11].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[11].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[11].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[11].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_408 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_409 = bits(enq_idxs[7], 12, 12) @[FetchBuffer.scala 84:60]
    node _T_410 = and(_T_408, _T_409) @[FetchBuffer.scala 84:46]
    when _T_410 : @[FetchBuffer.scala 84:65]
      fetch_buffer[12].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[12].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[12].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[12].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_411 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_412 = bits(enq_idxs[7], 13, 13) @[FetchBuffer.scala 84:60]
    node _T_413 = and(_T_411, _T_412) @[FetchBuffer.scala 84:46]
    when _T_413 : @[FetchBuffer.scala 84:65]
      fetch_buffer[13].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[13].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[13].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[13].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_414 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_415 = bits(enq_idxs[7], 14, 14) @[FetchBuffer.scala 84:60]
    node _T_416 = and(_T_414, _T_415) @[FetchBuffer.scala 84:46]
    when _T_416 : @[FetchBuffer.scala 84:65]
      fetch_buffer[14].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[14].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[14].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[14].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_417 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_418 = bits(enq_idxs[7], 15, 15) @[FetchBuffer.scala 84:60]
    node _T_419 = and(_T_417, _T_418) @[FetchBuffer.scala 84:46]
    when _T_419 : @[FetchBuffer.scala 84:65]
      fetch_buffer[15].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[15].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[15].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[15].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    node _T_420 = and(do_enq, inst_packet[7].is_valid) @[FetchBuffer.scala 84:19]
    node _T_421 = bits(enq_idxs[7], 16, 16) @[FetchBuffer.scala 84:60]
    node _T_422 = and(_T_420, _T_421) @[FetchBuffer.scala 84:46]
    when _T_422 : @[FetchBuffer.scala 84:65]
      fetch_buffer[16].predict_taken <= inst_packet[7].predict_taken @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_branch <= inst_packet[7].is_branch @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_delay <= inst_packet[7].is_delay @[FetchBuffer.scala 85:25]
      fetch_buffer[16].is_valid <= inst_packet[7].is_valid @[FetchBuffer.scala 85:25]
      fetch_buffer[16].gh_backup <= inst_packet[7].gh_backup @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst_addr <= inst_packet[7].inst_addr @[FetchBuffer.scala 85:25]
      fetch_buffer[16].inst <= inst_packet[7].inst @[FetchBuffer.scala 85:25]
      skip @[FetchBuffer.scala 84:65]
    when do_enq : @[FetchBuffer.scala 89:16]
      tail <= enq_idx @[FetchBuffer.scala 90:10]
      skip @[FetchBuffer.scala 89:16]
    io.inst_bank.bits.data[0].predict_taken is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].is_branch is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].is_delay is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].is_valid is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].gh_backup is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].inst_addr is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[0].inst is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].predict_taken is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].is_branch is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].is_delay is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].is_valid is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].gh_backup is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].inst_addr is invalid @[FetchBuffer.scala 95:26]
    io.inst_bank.bits.data[1].inst is invalid @[FetchBuffer.scala 95:26]
    node deq_idxs_hi = bits(deq_idxs_0, 15, 0) @[FetchBuffer.scala 42:12]
    node deq_idxs_lo = bits(deq_idxs_0, 16, 16) @[FetchBuffer.scala 42:29]
    node deq_idxs_1 = cat(deq_idxs_hi, deq_idxs_lo) @[Cat.scala 30:58]
    node _hit_tail_mask_T = eq(deq_idxs_0, tail) @[FetchBuffer.scala 97:38]
    node _hit_tail_mask_T_1 = eq(is_full, UInt<1>("h00")) @[FetchBuffer.scala 97:50]
    node hit_tail_mask_0 = and(_hit_tail_mask_T, _hit_tail_mask_T_1) @[FetchBuffer.scala 97:47]
    node _hit_tail_mask_T_2 = eq(deq_idxs_1, tail) @[FetchBuffer.scala 97:38]
    node _hit_tail_mask_T_3 = eq(is_full, UInt<1>("h00")) @[FetchBuffer.scala 97:50]
    node hit_tail_mask_1 = and(_hit_tail_mask_T_2, _hit_tail_mask_T_3) @[FetchBuffer.scala 97:47]
    node deq_invalid_0 = or(UInt<1>("h00"), hit_tail_mask_0) @[FetchBuffer.scala 98:57]
    node deq_invalid_1 = or(deq_invalid_0, hit_tail_mask_1) @[FetchBuffer.scala 98:57]
    node will_hit_tail = or(hit_tail_mask_0, hit_tail_mask_1) @[FetchBuffer.scala 99:46]
    node do_deq = or(io.fb_resp.deq_valid[0], io.fb_resp.deq_valid[1]) @[FetchBuffer.scala 100:52]
    node _T_423 = bits(deq_idxs_0, 0, 0) @[FetchBuffer.scala 103:23]
    when _T_423 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[0].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[0].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[0].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[0].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[0].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[0].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[0].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_424 = bits(deq_idxs_0, 1, 1) @[FetchBuffer.scala 103:23]
    when _T_424 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[1].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[1].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[1].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[1].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[1].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[1].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[1].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_1 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_1 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_425 = bits(deq_idxs_0, 2, 2) @[FetchBuffer.scala 103:23]
    when _T_425 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[2].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[2].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[2].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[2].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[2].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[2].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[2].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_2 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_2 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_426 = bits(deq_idxs_0, 3, 3) @[FetchBuffer.scala 103:23]
    when _T_426 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[3].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[3].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[3].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[3].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[3].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[3].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[3].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_3 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_3 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_427 = bits(deq_idxs_0, 4, 4) @[FetchBuffer.scala 103:23]
    when _T_427 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[4].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[4].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[4].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[4].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[4].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[4].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[4].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_4 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_4 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_428 = bits(deq_idxs_0, 5, 5) @[FetchBuffer.scala 103:23]
    when _T_428 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[5].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[5].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[5].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[5].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[5].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[5].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[5].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_5 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_5 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_429 = bits(deq_idxs_0, 6, 6) @[FetchBuffer.scala 103:23]
    when _T_429 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[6].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[6].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[6].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[6].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[6].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[6].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[6].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_6 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_6 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_430 = bits(deq_idxs_0, 7, 7) @[FetchBuffer.scala 103:23]
    when _T_430 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[7].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[7].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[7].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[7].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[7].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[7].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[7].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_7 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_7 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_431 = bits(deq_idxs_0, 8, 8) @[FetchBuffer.scala 103:23]
    when _T_431 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[8].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[8].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[8].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[8].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[8].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[8].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[8].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_8 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_8 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_432 = bits(deq_idxs_0, 9, 9) @[FetchBuffer.scala 103:23]
    when _T_432 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[9].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[9].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[9].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[9].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[9].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[9].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[9].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_9 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_9 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_433 = bits(deq_idxs_0, 10, 10) @[FetchBuffer.scala 103:23]
    when _T_433 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[10].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[10].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[10].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[10].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[10].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[10].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[10].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_10 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_10 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_434 = bits(deq_idxs_0, 11, 11) @[FetchBuffer.scala 103:23]
    when _T_434 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[11].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[11].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[11].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[11].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[11].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[11].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[11].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_11 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_11 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_435 = bits(deq_idxs_0, 12, 12) @[FetchBuffer.scala 103:23]
    when _T_435 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[12].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[12].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[12].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[12].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[12].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[12].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[12].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_12 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_12 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_436 = bits(deq_idxs_0, 13, 13) @[FetchBuffer.scala 103:23]
    when _T_436 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[13].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[13].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[13].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[13].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[13].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[13].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[13].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_13 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_13 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_437 = bits(deq_idxs_0, 14, 14) @[FetchBuffer.scala 103:23]
    when _T_437 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[14].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[14].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[14].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[14].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[14].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[14].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[14].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_14 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_14 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_438 = bits(deq_idxs_0, 15, 15) @[FetchBuffer.scala 103:23]
    when _T_438 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[15].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[15].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[15].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[15].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[15].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[15].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[15].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_15 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_15 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_439 = bits(deq_idxs_0, 16, 16) @[FetchBuffer.scala 103:23]
    when _T_439 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[0].predict_taken <= fetch_buffer[16].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_branch <= fetch_buffer[16].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_delay <= fetch_buffer[16].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].is_valid <= fetch_buffer[16].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].gh_backup <= fetch_buffer[16].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst_addr <= fetch_buffer[16].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[0].inst <= fetch_buffer[16].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_0_is_valid_T_16 = eq(deq_invalid_0, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[0].is_valid <= _io_inst_bank_bits_data_0_is_valid_T_16 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_440 = bits(deq_idxs_1, 0, 0) @[FetchBuffer.scala 103:23]
    when _T_440 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[0].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[0].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[0].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[0].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[0].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[0].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[0].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_441 = bits(deq_idxs_1, 1, 1) @[FetchBuffer.scala 103:23]
    when _T_441 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[1].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[1].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[1].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[1].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[1].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[1].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[1].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_1 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_1 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_442 = bits(deq_idxs_1, 2, 2) @[FetchBuffer.scala 103:23]
    when _T_442 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[2].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[2].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[2].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[2].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[2].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[2].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[2].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_2 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_2 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_443 = bits(deq_idxs_1, 3, 3) @[FetchBuffer.scala 103:23]
    when _T_443 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[3].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[3].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[3].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[3].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[3].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[3].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[3].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_3 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_3 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_444 = bits(deq_idxs_1, 4, 4) @[FetchBuffer.scala 103:23]
    when _T_444 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[4].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[4].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[4].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[4].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[4].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[4].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[4].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_4 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_4 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_445 = bits(deq_idxs_1, 5, 5) @[FetchBuffer.scala 103:23]
    when _T_445 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[5].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[5].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[5].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[5].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[5].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[5].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[5].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_5 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_5 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_446 = bits(deq_idxs_1, 6, 6) @[FetchBuffer.scala 103:23]
    when _T_446 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[6].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[6].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[6].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[6].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[6].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[6].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[6].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_6 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_6 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_447 = bits(deq_idxs_1, 7, 7) @[FetchBuffer.scala 103:23]
    when _T_447 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[7].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[7].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[7].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[7].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[7].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[7].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[7].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_7 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_7 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_448 = bits(deq_idxs_1, 8, 8) @[FetchBuffer.scala 103:23]
    when _T_448 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[8].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[8].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[8].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[8].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[8].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[8].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[8].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_8 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_8 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_449 = bits(deq_idxs_1, 9, 9) @[FetchBuffer.scala 103:23]
    when _T_449 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[9].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[9].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[9].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[9].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[9].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[9].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[9].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_9 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_9 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_450 = bits(deq_idxs_1, 10, 10) @[FetchBuffer.scala 103:23]
    when _T_450 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[10].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[10].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[10].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[10].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[10].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[10].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[10].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_10 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_10 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_451 = bits(deq_idxs_1, 11, 11) @[FetchBuffer.scala 103:23]
    when _T_451 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[11].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[11].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[11].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[11].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[11].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[11].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[11].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_11 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_11 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_452 = bits(deq_idxs_1, 12, 12) @[FetchBuffer.scala 103:23]
    when _T_452 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[12].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[12].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[12].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[12].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[12].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[12].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[12].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_12 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_12 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_453 = bits(deq_idxs_1, 13, 13) @[FetchBuffer.scala 103:23]
    when _T_453 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[13].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[13].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[13].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[13].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[13].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[13].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[13].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_13 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_13 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_454 = bits(deq_idxs_1, 14, 14) @[FetchBuffer.scala 103:23]
    when _T_454 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[14].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[14].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[14].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[14].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[14].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[14].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[14].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_14 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_14 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_455 = bits(deq_idxs_1, 15, 15) @[FetchBuffer.scala 103:23]
    when _T_455 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[15].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[15].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[15].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[15].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[15].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[15].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[15].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_15 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_15 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node _T_456 = bits(deq_idxs_1, 16, 16) @[FetchBuffer.scala 103:23]
    when _T_456 : @[FetchBuffer.scala 103:28]
      io.inst_bank.bits.data[1].predict_taken <= fetch_buffer[16].predict_taken @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_branch <= fetch_buffer[16].is_branch @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_delay <= fetch_buffer[16].is_delay @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].is_valid <= fetch_buffer[16].is_valid @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].gh_backup <= fetch_buffer[16].gh_backup @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst_addr <= fetch_buffer[16].inst_addr @[FetchBuffer.scala 104:35]
      io.inst_bank.bits.data[1].inst <= fetch_buffer[16].inst @[FetchBuffer.scala 104:35]
      node _io_inst_bank_bits_data_1_is_valid_T_16 = eq(deq_invalid_1, UInt<1>("h00")) @[FetchBuffer.scala 105:47]
      io.inst_bank.bits.data[1].is_valid <= _io_inst_bank_bits_data_1_is_valid_T_16 @[FetchBuffer.scala 105:44]
      skip @[FetchBuffer.scala 103:28]
    node hi_8 = bits(deq_idxs_0, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_8 = bits(deq_idxs_0, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_457 = cat(hi_8, lo_8) @[Cat.scala 30:58]
    node _T_458 = mux(io.fb_resp.deq_valid[0], _T_457, deq_idxs_0) @[FetchBuffer.scala 111:20]
    node hi_9 = bits(_T_458, 15, 0) @[FetchBuffer.scala 42:12]
    node lo_9 = bits(_T_458, 16, 16) @[FetchBuffer.scala 42:29]
    node _T_459 = cat(hi_9, lo_9) @[Cat.scala 30:58]
    node next_head = mux(io.fb_resp.deq_valid[1], _T_459, _T_458) @[FetchBuffer.scala 111:20]
    deq_idxs_0 <= next_head @[FetchBuffer.scala 113:7]
    node _io_inst_bank_valid_T = eq(is_empty, UInt<1>("h00")) @[FetchBuffer.scala 115:25]
    node _io_inst_bank_valid_T_1 = eq(io.clear_i, UInt<1>("h00")) @[FetchBuffer.scala 115:38]
    node _io_inst_bank_valid_T_2 = and(_io_inst_bank_valid_T, _io_inst_bank_valid_T_1) @[FetchBuffer.scala 115:35]
    io.inst_bank.valid <= _io_inst_bank_valid_T_2 @[FetchBuffer.scala 115:22]
    node _T_460 = and(do_deq, do_enq) @[FetchBuffer.scala 117:15]
    when _T_460 : @[FetchBuffer.scala 117:26]
      maybe_full <= UInt<1>("h01") @[FetchBuffer.scala 118:16]
      skip @[FetchBuffer.scala 117:26]
    else : @[FetchBuffer.scala 119:22]
      when do_deq : @[FetchBuffer.scala 119:22]
        maybe_full <= UInt<1>("h00") @[FetchBuffer.scala 120:16]
        skip @[FetchBuffer.scala 119:22]
      else : @[FetchBuffer.scala 121:22]
        when do_enq : @[FetchBuffer.scala 121:22]
          maybe_full <= UInt<1>("h01") @[FetchBuffer.scala 122:16]
          skip @[FetchBuffer.scala 121:22]
    when io.clear_i : @[FetchBuffer.scala 125:20]
      tail <= UInt<1>("h01") @[FetchBuffer.scala 126:10]
      deq_idxs_0 <= UInt<1>("h01") @[FetchBuffer.scala 127:10]
      maybe_full <= UInt<1>("h00") @[FetchBuffer.scala 128:16]
      skip @[FetchBuffer.scala 125:20]
    node _io_bpu_inst_packet_i_ready_T = or(is_full, might_hit_head) @[FetchBuffer.scala 131:55]
    node _io_bpu_inst_packet_i_ready_T_1 = eq(_io_bpu_inst_packet_i_ready_T, UInt<1>("h00")) @[FetchBuffer.scala 131:45]
    node _io_bpu_inst_packet_i_ready_T_2 = or(is_empty, _io_bpu_inst_packet_i_ready_T_1) @[FetchBuffer.scala 131:42]
    node _io_bpu_inst_packet_i_ready_T_3 = eq(io.bpu_inst_packet_i.valid, UInt<1>("h00")) @[FetchBuffer.scala 131:77]
    node _io_bpu_inst_packet_i_ready_T_4 = or(_io_bpu_inst_packet_i_ready_T_2, _io_bpu_inst_packet_i_ready_T_3) @[FetchBuffer.scala 131:74]
    node _io_bpu_inst_packet_i_ready_T_5 = or(io.bpu_inst_packet_i.bits.valid_mask[0], io.bpu_inst_packet_i.bits.valid_mask[1]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_6 = or(_io_bpu_inst_packet_i_ready_T_5, io.bpu_inst_packet_i.bits.valid_mask[2]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_7 = or(_io_bpu_inst_packet_i_ready_T_6, io.bpu_inst_packet_i.bits.valid_mask[3]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_8 = or(_io_bpu_inst_packet_i_ready_T_7, io.bpu_inst_packet_i.bits.valid_mask[4]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_9 = or(_io_bpu_inst_packet_i_ready_T_8, io.bpu_inst_packet_i.bits.valid_mask[5]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_10 = or(_io_bpu_inst_packet_i_ready_T_9, io.bpu_inst_packet_i.bits.valid_mask[6]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_11 = or(_io_bpu_inst_packet_i_ready_T_10, io.bpu_inst_packet_i.bits.valid_mask[7]) @[FetchBuffer.scala 131:155]
    node _io_bpu_inst_packet_i_ready_T_12 = eq(_io_bpu_inst_packet_i_ready_T_11, UInt<1>("h00")) @[FetchBuffer.scala 131:108]
    node _io_bpu_inst_packet_i_ready_T_13 = or(_io_bpu_inst_packet_i_ready_T_4, _io_bpu_inst_packet_i_ready_T_12) @[FetchBuffer.scala 131:105]
    io.bpu_inst_packet_i.ready <= _io_bpu_inst_packet_i_ready_T_13 @[FetchBuffer.scala 131:30]
    node _T_461 = asUInt(reset) @[FetchBuffer.scala 134:20]
    when _T_461 : @[FetchBuffer.scala 134:24]
      fetch_buffer[0].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[0].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[0].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[0].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[0].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[0].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[1].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[1].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[1].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[1].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[1].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[1].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[2].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[2].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[2].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[2].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[2].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[2].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[3].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[3].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[3].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[3].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[3].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[3].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[4].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[4].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[4].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[4].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[4].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[4].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[5].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[5].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[5].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[5].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[5].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[5].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[6].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[6].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[6].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[6].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[6].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[6].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[7].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[7].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[7].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[7].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[7].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[7].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[8].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[8].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[8].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[8].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[8].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[8].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[9].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[9].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[9].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[9].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[9].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[9].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[10].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[10].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[10].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[10].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[10].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[10].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[11].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[11].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[11].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[11].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[11].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[11].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[12].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[12].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[12].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[12].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[12].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[12].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[13].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[13].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[13].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[13].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[13].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[13].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[14].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[14].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[14].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[14].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[14].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[14].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[15].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[15].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[15].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[15].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[15].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[15].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      fetch_buffer[16].inst <= UInt<32>("h00") @[FetchBuffer.scala 17:19]
      fetch_buffer[16].inst_addr <= UInt<32>("h00") @[FetchBuffer.scala 18:19]
      fetch_buffer[16].gh_backup <= UInt<4>("h00") @[FetchBuffer.scala 19:19]
      fetch_buffer[16].is_valid <= UInt<1>("h00") @[FetchBuffer.scala 20:19]
      fetch_buffer[16].is_delay <= UInt<1>("h00") @[FetchBuffer.scala 21:19]
      fetch_buffer[16].is_branch <= UInt<1>("h00") @[FetchBuffer.scala 22:19]
      skip @[FetchBuffer.scala 134:24]
    
  module Ifu : 
    input clock : Clock
    input reset : Reset
    output io : {flip ex_branch_info_i : {valid : UInt<1>, bits : {target_addr : UInt<32>, inst_addr : UInt<32>, gh_update : UInt<4>, is_branch : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>}}, fb_inst_bank_o : {valid : UInt<1>, bits : {data : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[2]}}, flip fb_resp : {deq_valid : UInt<1>[2]}, icache_io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, flip icache_io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<256>}}, icache_debug : {state : UInt<1>, hit_cache : UInt<1>, cache_we : UInt<1>, cache_read_tag : UInt<20>, icache_req : {valid : UInt<1>, bits : {addr : UInt<32>}}}, bpu_debug : {branch_mask : UInt<8>, fetched_mask : UInt<8>, predict_branch : UInt<8>, predict_addr : UInt<32>, is_taken : UInt<1>, take_delay : UInt<1>, inst_packet : UInt<32>[8]}}
    
    inst bpu of BPU @[Ifu.scala 19:28]
    bpu.clock <= clock
    bpu.reset <= reset
    inst icache of ICache @[Ifu.scala 20:28]
    icache.clock <= clock
    icache.reset <= reset
    inst fetch_buffer of FetchBuffer @[Ifu.scala 21:28]
    fetch_buffer.clock <= clock
    fetch_buffer.reset <= reset
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h080000000"))) @[Ifu.scala 23:30]
    node _no_taken_addr_T = bits(pc, 31, 5) @[Ifu.scala 24:30]
    node _no_taken_addr_T_1 = add(_no_taken_addr_T, UInt<1>("h01")) @[Ifu.scala 24:56]
    node no_taken_addr_hi = tail(_no_taken_addr_T_1, 1) @[Ifu.scala 24:56]
    node no_taken_addr = cat(no_taken_addr_hi, UInt<5>("h00")) @[Cat.scala 30:58]
    node _stop_fetch_T = eq(fetch_buffer.io.bpu_inst_packet_i.ready, UInt<1>("h00")) @[Ifu.scala 25:20]
    node _stop_fetch_T_1 = eq(icache.io.icache_req.ready, UInt<1>("h00")) @[Ifu.scala 25:64]
    node _stop_fetch_T_2 = or(_stop_fetch_T, _stop_fetch_T_1) @[Ifu.scala 25:61]
    node _stop_fetch_T_3 = eq(bpu.io.resp_o.valid, UInt<1>("h00")) @[Ifu.scala 25:95]
    node stop_fetch = or(_stop_fetch_T_2, _stop_fetch_T_3) @[Ifu.scala 25:92]
    node redirect = and(io.ex_branch_info_i.valid, io.ex_branch_info_i.bits.predict_miss) @[Ifu.scala 26:44]
    reg taking_delay : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ifu.scala 28:34]
    reg delay_target_addr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ifu.scala 29:34]
    when redirect : @[Ifu.scala 31:18]
      pc <= io.ex_branch_info_i.bits.target_addr @[Ifu.scala 32:8]
      taking_delay <= UInt<1>("h00") @[Ifu.scala 33:18]
      skip @[Ifu.scala 31:18]
    else : @[Ifu.scala 34:25]
      when stop_fetch : @[Ifu.scala 34:25]
        pc <= pc @[Ifu.scala 35:8]
        skip @[Ifu.scala 34:25]
      else : @[Ifu.scala 36:28]
        when taking_delay : @[Ifu.scala 36:28]
          pc <= delay_target_addr @[Ifu.scala 37:8]
          taking_delay <= UInt<1>("h00") @[Ifu.scala 38:18]
          skip @[Ifu.scala 36:28]
        else : @[Ifu.scala 39:45]
          when bpu.io.resp_o.bits.take_delay : @[Ifu.scala 39:45]
            pc <= no_taken_addr @[Ifu.scala 40:8]
            taking_delay <= UInt<1>("h01") @[Ifu.scala 41:18]
            delay_target_addr <= bpu.io.resp_o.bits.predict_addr @[Ifu.scala 42:23]
            skip @[Ifu.scala 39:45]
          else : @[Ifu.scala 43:43]
            when bpu.io.resp_o.bits.is_taken : @[Ifu.scala 43:43]
              pc <= bpu.io.resp_o.bits.predict_addr @[Ifu.scala 44:8]
              skip @[Ifu.scala 43:43]
            else : @[Ifu.scala 45:15]
              pc <= no_taken_addr @[Ifu.scala 46:8]
              skip @[Ifu.scala 45:15]
    icache.io.icache_req.bits.addr <= pc @[Ifu.scala 50:34]
    node _icache_io_icache_req_valid_T = eq(redirect, UInt<1>("h00")) @[Ifu.scala 51:33]
    icache.io.icache_req.valid <= _icache_io_icache_req_valid_T @[Ifu.scala 51:30]
    bpu.io.inst_packet_i.bits.addr <= icache.io.icache_resp.bits.addr @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[0] <= icache.io.icache_resp.bits.data[0] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[1] <= icache.io.icache_resp.bits.data[1] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[2] <= icache.io.icache_resp.bits.data[2] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[3] <= icache.io.icache_resp.bits.data[3] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[4] <= icache.io.icache_resp.bits.data[4] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[5] <= icache.io.icache_resp.bits.data[5] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[6] <= icache.io.icache_resp.bits.data[6] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.bits.data[7] <= icache.io.icache_resp.bits.data[7] @[Ifu.scala 52:25]
    bpu.io.inst_packet_i.valid <= icache.io.icache_resp.valid @[Ifu.scala 52:25]
    io.icache_io_read_req.bits.addr <= icache.io.io_read_req.bits.addr @[Ifu.scala 53:24]
    io.icache_io_read_req.valid <= icache.io.io_read_req.valid @[Ifu.scala 53:24]
    icache.io.io_read_req.ready <= io.icache_io_read_req.ready @[Ifu.scala 53:24]
    icache.io.io_read_resp.bits.data <= io.icache_io_read_resp.bits.data @[Ifu.scala 54:25]
    icache.io.io_read_resp.valid <= io.icache_io_read_resp.valid @[Ifu.scala 54:25]
    io.icache_io_read_resp.ready <= icache.io.io_read_resp.ready @[Ifu.scala 54:25]
    bpu.io.is_delay <= taking_delay @[Ifu.scala 56:18]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[0] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[0] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[1] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[1] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[2] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[2] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[3] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[3] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[4] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[4] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[5] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[5] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[6] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[6] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.predict_mask[7] <= bpu.io.bpu_inst_packet_o.bits.predict_mask[7] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[0] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[0] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[1] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[1] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[2] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[2] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[3] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[3] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[4] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[4] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[5] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[5] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[6] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[6] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.branch_mask[7] <= bpu.io.bpu_inst_packet_o.bits.branch_mask[7] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[0] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[0] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[1] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[1] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[2] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[2] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[3] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[3] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[4] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[4] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[5] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[5] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[6] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[6] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.delay_mask[7] <= bpu.io.bpu_inst_packet_o.bits.delay_mask[7] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[0] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[0] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[1] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[1] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[2] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[2] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[3] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[3] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[4] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[4] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[5] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[5] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[6] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[6] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.valid_mask[7] <= bpu.io.bpu_inst_packet_o.bits.valid_mask[7] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.gh_backup <= bpu.io.bpu_inst_packet_o.bits.gh_backup @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.addr <= bpu.io.bpu_inst_packet_o.bits.addr @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[0] <= bpu.io.bpu_inst_packet_o.bits.data[0] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[1] <= bpu.io.bpu_inst_packet_o.bits.data[1] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[2] <= bpu.io.bpu_inst_packet_o.bits.data[2] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[3] <= bpu.io.bpu_inst_packet_o.bits.data[3] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[4] <= bpu.io.bpu_inst_packet_o.bits.data[4] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[5] <= bpu.io.bpu_inst_packet_o.bits.data[5] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[6] <= bpu.io.bpu_inst_packet_o.bits.data[6] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.bits.data[7] <= bpu.io.bpu_inst_packet_o.bits.data[7] @[Ifu.scala 57:28]
    fetch_buffer.io.bpu_inst_packet_i.valid <= bpu.io.bpu_inst_packet_o.valid @[Ifu.scala 57:28]
    bpu.io.bpu_inst_packet_o.ready <= fetch_buffer.io.bpu_inst_packet_i.ready @[Ifu.scala 57:28]
    bpu.io.branch_info_i.bits.predict_miss <= io.ex_branch_info_i.bits.predict_miss @[Ifu.scala 58:24]
    bpu.io.branch_info_i.bits.is_taken <= io.ex_branch_info_i.bits.is_taken @[Ifu.scala 58:24]
    bpu.io.branch_info_i.bits.is_branch <= io.ex_branch_info_i.bits.is_branch @[Ifu.scala 58:24]
    bpu.io.branch_info_i.bits.gh_update <= io.ex_branch_info_i.bits.gh_update @[Ifu.scala 58:24]
    bpu.io.branch_info_i.bits.inst_addr <= io.ex_branch_info_i.bits.inst_addr @[Ifu.scala 58:24]
    bpu.io.branch_info_i.bits.target_addr <= io.ex_branch_info_i.bits.target_addr @[Ifu.scala 58:24]
    bpu.io.branch_info_i.valid <= io.ex_branch_info_i.valid @[Ifu.scala 58:24]
    bpu.io.need_flush <= redirect @[Ifu.scala 59:20]
    fetch_buffer.io.clear_i <= redirect @[Ifu.scala 61:26]
    io.fb_inst_bank_o.bits.data[0].predict_taken <= fetch_buffer.io.inst_bank.bits.data[0].predict_taken @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].is_branch <= fetch_buffer.io.inst_bank.bits.data[0].is_branch @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].is_delay <= fetch_buffer.io.inst_bank.bits.data[0].is_delay @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].is_valid <= fetch_buffer.io.inst_bank.bits.data[0].is_valid @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].gh_backup <= fetch_buffer.io.inst_bank.bits.data[0].gh_backup @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].inst_addr <= fetch_buffer.io.inst_bank.bits.data[0].inst_addr @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[0].inst <= fetch_buffer.io.inst_bank.bits.data[0].inst @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].predict_taken <= fetch_buffer.io.inst_bank.bits.data[1].predict_taken @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].is_branch <= fetch_buffer.io.inst_bank.bits.data[1].is_branch @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].is_delay <= fetch_buffer.io.inst_bank.bits.data[1].is_delay @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].is_valid <= fetch_buffer.io.inst_bank.bits.data[1].is_valid @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].gh_backup <= fetch_buffer.io.inst_bank.bits.data[1].gh_backup @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].inst_addr <= fetch_buffer.io.inst_bank.bits.data[1].inst_addr @[Ifu.scala 62:21]
    io.fb_inst_bank_o.bits.data[1].inst <= fetch_buffer.io.inst_bank.bits.data[1].inst @[Ifu.scala 62:21]
    io.fb_inst_bank_o.valid <= fetch_buffer.io.inst_bank.valid @[Ifu.scala 62:21]
    fetch_buffer.io.fb_resp.deq_valid[0] <= io.fb_resp.deq_valid[0] @[Ifu.scala 63:13]
    fetch_buffer.io.fb_resp.deq_valid[1] <= io.fb_resp.deq_valid[1] @[Ifu.scala 63:13]
    io.icache_debug.icache_req.bits.addr <= icache.io.icache_debug.icache_req.bits.addr @[Ifu.scala 65:18]
    io.icache_debug.icache_req.valid <= icache.io.icache_debug.icache_req.valid @[Ifu.scala 65:18]
    io.icache_debug.cache_read_tag <= icache.io.icache_debug.cache_read_tag @[Ifu.scala 65:18]
    io.icache_debug.cache_we <= icache.io.icache_debug.cache_we @[Ifu.scala 65:18]
    io.icache_debug.hit_cache <= icache.io.icache_debug.hit_cache @[Ifu.scala 65:18]
    io.icache_debug.state <= icache.io.icache_debug.state @[Ifu.scala 65:18]
    io.bpu_debug.inst_packet[0] <= bpu.io.bpu_debug.inst_packet[0] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[1] <= bpu.io.bpu_debug.inst_packet[1] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[2] <= bpu.io.bpu_debug.inst_packet[2] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[3] <= bpu.io.bpu_debug.inst_packet[3] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[4] <= bpu.io.bpu_debug.inst_packet[4] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[5] <= bpu.io.bpu_debug.inst_packet[5] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[6] <= bpu.io.bpu_debug.inst_packet[6] @[Ifu.scala 66:15]
    io.bpu_debug.inst_packet[7] <= bpu.io.bpu_debug.inst_packet[7] @[Ifu.scala 66:15]
    io.bpu_debug.take_delay <= bpu.io.bpu_debug.take_delay @[Ifu.scala 66:15]
    io.bpu_debug.is_taken <= bpu.io.bpu_debug.is_taken @[Ifu.scala 66:15]
    io.bpu_debug.predict_addr <= bpu.io.bpu_debug.predict_addr @[Ifu.scala 66:15]
    io.bpu_debug.predict_branch <= bpu.io.bpu_debug.predict_branch @[Ifu.scala 66:15]
    io.bpu_debug.fetched_mask <= bpu.io.bpu_debug.fetched_mask @[Ifu.scala 66:15]
    io.bpu_debug.branch_mask <= bpu.io.bpu_debug.branch_mask @[Ifu.scala 66:15]
    
  module Decode : 
    input clock : Clock
    input reset : Reset
    output io : {flip fb_inst_bank : {valid : UInt<1>, bits : {data : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[2]}}, fb_resp : {deq_valid : UInt<1>[2]}, flip rob_allocate : {flip allocate_req : {valid : UInt<1>, bits : UInt<1>[2]}, flip allocate_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, inst_valid : UInt<1>, inst_addr : UInt<32>, uop : UInt<6>, unit_sel : UInt<3>, need_imm : UInt<1>, commit_addr : UInt<32>, commit_target : UInt<3>, except_type : UInt<2>, is_branch : UInt<1>, is_delay : UInt<1>, gh_info : UInt<4>, imm_data : UInt<32>, flush_on_commit : UInt<1>, predict_taken : UInt<1>}[2]}, allocate_resp : {valid : UInt<1>, bits : {rob_idx : UInt<3>[2], enq_valid_mask : UInt<1>[2]}}}, rename_info : {valid : UInt<1>, bits : {is_valid : UInt<1>, op1_addr : UInt<5>, op2_addr : UInt<5>, des_addr : UInt<5>, des_rob : UInt<3>}[2]}, flip need_flush : UInt<1>}
    
    wire rename_info : {uop : UInt<6>, unit_sel : UInt<3>, except_type : UInt<2>, target_sel : UInt<3>, flush_on_commit : UInt<1>, need_imm : UInt<1>, op1_addr : UInt<5>, op2_addr : UInt<5>, des_addr : UInt<5>, imm_data : UInt<32>}[2] @[Decode.scala 105:25]
    wire imm_sel : UInt<3> @[Decode.scala 25:23]
    wire op1_sel : UInt<3> @[Decode.scala 26:23]
    wire op2_sel : UInt<3> @[Decode.scala 27:23]
    wire des_sel : UInt<3> @[Decode.scala 28:23]
    node _decoder_T = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_1 = eq(UInt<6>("h020"), _decoder_T) @[Lookup.scala 31:38]
    node _decoder_T_2 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_3 = eq(UInt<30>("h020000000"), _decoder_T_2) @[Lookup.scala 31:38]
    node _decoder_T_4 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_5 = eq(UInt<6>("h021"), _decoder_T_4) @[Lookup.scala 31:38]
    node _decoder_T_6 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_7 = eq(UInt<30>("h024000000"), _decoder_T_6) @[Lookup.scala 31:38]
    node _decoder_T_8 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_9 = eq(UInt<6>("h022"), _decoder_T_8) @[Lookup.scala 31:38]
    node _decoder_T_10 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_11 = eq(UInt<6>("h023"), _decoder_T_10) @[Lookup.scala 31:38]
    node _decoder_T_12 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_13 = eq(UInt<6>("h02a"), _decoder_T_12) @[Lookup.scala 31:38]
    node _decoder_T_14 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_15 = eq(UInt<30>("h028000000"), _decoder_T_14) @[Lookup.scala 31:38]
    node _decoder_T_16 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_17 = eq(UInt<6>("h02b"), _decoder_T_16) @[Lookup.scala 31:38]
    node _decoder_T_18 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_19 = eq(UInt<30>("h02c000000"), _decoder_T_18) @[Lookup.scala 31:38]
    node _decoder_T_20 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_21 = eq(UInt<31>("h070000002"), _decoder_T_20) @[Lookup.scala 31:38]
    node _decoder_T_22 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_23 = eq(UInt<5>("h01a"), _decoder_T_22) @[Lookup.scala 31:38]
    node _decoder_T_24 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_25 = eq(UInt<5>("h01b"), _decoder_T_24) @[Lookup.scala 31:38]
    node _decoder_T_26 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_27 = eq(UInt<5>("h018"), _decoder_T_26) @[Lookup.scala 31:38]
    node _decoder_T_28 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_29 = eq(UInt<5>("h019"), _decoder_T_28) @[Lookup.scala 31:38]
    node _decoder_T_30 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffff07ff")) @[Lookup.scala 31:38]
    node _decoder_T_31 = eq(UInt<5>("h010"), _decoder_T_30) @[Lookup.scala 31:38]
    node _decoder_T_32 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffff07ff")) @[Lookup.scala 31:38]
    node _decoder_T_33 = eq(UInt<5>("h012"), _decoder_T_32) @[Lookup.scala 31:38]
    node _decoder_T_34 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_35 = eq(UInt<5>("h011"), _decoder_T_34) @[Lookup.scala 31:38]
    node _decoder_T_36 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_37 = eq(UInt<5>("h013"), _decoder_T_36) @[Lookup.scala 31:38]
    node _decoder_T_38 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_39 = eq(UInt<6>("h024"), _decoder_T_38) @[Lookup.scala 31:38]
    node _decoder_T_40 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_41 = eq(UInt<30>("h030000000"), _decoder_T_40) @[Lookup.scala 31:38]
    node _decoder_T_42 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe00000")) @[Lookup.scala 31:38]
    node _decoder_T_43 = eq(UInt<30>("h03c000000"), _decoder_T_42) @[Lookup.scala 31:38]
    node _decoder_T_44 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_45 = eq(UInt<6>("h027"), _decoder_T_44) @[Lookup.scala 31:38]
    node _decoder_T_46 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_47 = eq(UInt<6>("h025"), _decoder_T_46) @[Lookup.scala 31:38]
    node _decoder_T_48 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_49 = eq(UInt<30>("h034000000"), _decoder_T_48) @[Lookup.scala 31:38]
    node _decoder_T_50 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_51 = eq(UInt<6>("h026"), _decoder_T_50) @[Lookup.scala 31:38]
    node _decoder_T_52 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_53 = eq(UInt<30>("h038000000"), _decoder_T_52) @[Lookup.scala 31:38]
    node _decoder_T_54 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_55 = eq(UInt<3>("h04"), _decoder_T_54) @[Lookup.scala 31:38]
    node _decoder_T_56 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_57 = eq(UInt<1>("h00"), _decoder_T_56) @[Lookup.scala 31:38]
    node _decoder_T_58 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_59 = eq(UInt<3>("h07"), _decoder_T_58) @[Lookup.scala 31:38]
    node _decoder_T_60 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_61 = eq(UInt<2>("h03"), _decoder_T_60) @[Lookup.scala 31:38]
    node _decoder_T_62 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_63 = eq(UInt<3>("h06"), _decoder_T_62) @[Lookup.scala 31:38]
    node _decoder_T_64 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_65 = eq(UInt<2>("h02"), _decoder_T_64) @[Lookup.scala 31:38]
    node _decoder_T_66 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_67 = eq(UInt<29>("h010000000"), _decoder_T_66) @[Lookup.scala 31:38]
    node _decoder_T_68 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_69 = eq(UInt<29>("h014000000"), _decoder_T_68) @[Lookup.scala 31:38]
    node _decoder_T_70 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_71 = eq(UInt<27>("h04010000"), _decoder_T_70) @[Lookup.scala 31:38]
    node _decoder_T_72 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_73 = eq(UInt<29>("h01c000000"), _decoder_T_72) @[Lookup.scala 31:38]
    node _decoder_T_74 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_75 = eq(UInt<29>("h018000000"), _decoder_T_74) @[Lookup.scala 31:38]
    node _decoder_T_76 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_77 = eq(UInt<27>("h04000000"), _decoder_T_76) @[Lookup.scala 31:38]
    node _decoder_T_78 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_79 = eq(UInt<27>("h04010000"), _decoder_T_78) @[Lookup.scala 31:38]
    node _decoder_T_80 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_81 = eq(UInt<29>("h018000000"), _decoder_T_80) @[Lookup.scala 31:38]
    node _decoder_T_82 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_83 = eq(UInt<28>("h08000000"), _decoder_T_82) @[Lookup.scala 31:38]
    node _decoder_T_84 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_85 = eq(UInt<28>("h0c000000"), _decoder_T_84) @[Lookup.scala 31:38]
    node _decoder_T_86 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_87 = eq(UInt<4>("h08"), _decoder_T_86) @[Lookup.scala 31:38]
    node _decoder_T_88 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc1f07ff")) @[Lookup.scala 31:38]
    node _decoder_T_89 = eq(UInt<4>("h09"), _decoder_T_88) @[Lookup.scala 31:38]
    node _decoder_T_90 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _decoder_T_91 = eq(UInt<4>("h0c"), _decoder_T_90) @[Lookup.scala 31:38]
    node _decoder_T_92 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc00003f")) @[Lookup.scala 31:38]
    node _decoder_T_93 = eq(UInt<4>("h0d"), _decoder_T_92) @[Lookup.scala 31:38]
    node _decoder_T_94 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _decoder_T_95 = eq(UInt<31>("h042000018"), _decoder_T_94) @[Lookup.scala 31:38]
    node _decoder_T_96 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe007ff")) @[Lookup.scala 31:38]
    node _decoder_T_97 = eq(UInt<31>("h040000000"), _decoder_T_96) @[Lookup.scala 31:38]
    node _decoder_T_98 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0ffe007ff")) @[Lookup.scala 31:38]
    node _decoder_T_99 = eq(UInt<31>("h040800000"), _decoder_T_98) @[Lookup.scala 31:38]
    node _decoder_T_100 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_101 = eq(UInt<32>("h080000000"), _decoder_T_100) @[Lookup.scala 31:38]
    node _decoder_T_102 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_103 = eq(UInt<32>("h084000000"), _decoder_T_102) @[Lookup.scala 31:38]
    node _decoder_T_104 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_105 = eq(UInt<32>("h08c000000"), _decoder_T_104) @[Lookup.scala 31:38]
    node _decoder_T_106 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_107 = eq(UInt<32>("h090000000"), _decoder_T_106) @[Lookup.scala 31:38]
    node _decoder_T_108 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_109 = eq(UInt<32>("h094000000"), _decoder_T_108) @[Lookup.scala 31:38]
    node _decoder_T_110 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_111 = eq(UInt<32>("h0a0000000"), _decoder_T_110) @[Lookup.scala 31:38]
    node _decoder_T_112 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_113 = eq(UInt<32>("h0a4000000"), _decoder_T_112) @[Lookup.scala 31:38]
    node _decoder_T_114 = and(io.fb_inst_bank.bits.data[0].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_115 = eq(UInt<32>("h0ac000000"), _decoder_T_114) @[Lookup.scala 31:38]
    node _decoder_T_116 = mux(_decoder_T_115, UInt<6>("h024"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_117 = mux(_decoder_T_113, UInt<6>("h025"), _decoder_T_116) @[Lookup.scala 33:37]
    node _decoder_T_118 = mux(_decoder_T_111, UInt<6>("h026"), _decoder_T_117) @[Lookup.scala 33:37]
    node _decoder_T_119 = mux(_decoder_T_109, UInt<6>("h029"), _decoder_T_118) @[Lookup.scala 33:37]
    node _decoder_T_120 = mux(_decoder_T_107, UInt<6>("h02b"), _decoder_T_119) @[Lookup.scala 33:37]
    node _decoder_T_121 = mux(_decoder_T_105, UInt<6>("h027"), _decoder_T_120) @[Lookup.scala 33:37]
    node _decoder_T_122 = mux(_decoder_T_103, UInt<6>("h028"), _decoder_T_121) @[Lookup.scala 33:37]
    node _decoder_T_123 = mux(_decoder_T_101, UInt<6>("h02a"), _decoder_T_122) @[Lookup.scala 33:37]
    node _decoder_T_124 = mux(_decoder_T_99, UInt<6>("h02c"), _decoder_T_123) @[Lookup.scala 33:37]
    node _decoder_T_125 = mux(_decoder_T_97, UInt<6>("h02d"), _decoder_T_124) @[Lookup.scala 33:37]
    node _decoder_T_126 = mux(_decoder_T_95, UInt<6>("h02f"), _decoder_T_125) @[Lookup.scala 33:37]
    node _decoder_T_127 = mux(_decoder_T_93, UInt<6>("h030"), _decoder_T_126) @[Lookup.scala 33:37]
    node _decoder_T_128 = mux(_decoder_T_91, UInt<6>("h02e"), _decoder_T_127) @[Lookup.scala 33:37]
    node _decoder_T_129 = mux(_decoder_T_89, UInt<5>("h01b"), _decoder_T_128) @[Lookup.scala 33:37]
    node _decoder_T_130 = mux(_decoder_T_87, UInt<5>("h01a"), _decoder_T_129) @[Lookup.scala 33:37]
    node _decoder_T_131 = mux(_decoder_T_85, UInt<5>("h019"), _decoder_T_130) @[Lookup.scala 33:37]
    node _decoder_T_132 = mux(_decoder_T_83, UInt<5>("h018"), _decoder_T_131) @[Lookup.scala 33:37]
    node _decoder_T_133 = mux(_decoder_T_81, UInt<6>("h023"), _decoder_T_132) @[Lookup.scala 33:37]
    node _decoder_T_134 = mux(_decoder_T_79, UInt<6>("h022"), _decoder_T_133) @[Lookup.scala 33:37]
    node _decoder_T_135 = mux(_decoder_T_77, UInt<6>("h020"), _decoder_T_134) @[Lookup.scala 33:37]
    node _decoder_T_136 = mux(_decoder_T_75, UInt<5>("h01e"), _decoder_T_135) @[Lookup.scala 33:37]
    node _decoder_T_137 = mux(_decoder_T_73, UInt<5>("h01f"), _decoder_T_136) @[Lookup.scala 33:37]
    node _decoder_T_138 = mux(_decoder_T_71, UInt<6>("h021"), _decoder_T_137) @[Lookup.scala 33:37]
    node _decoder_T_139 = mux(_decoder_T_69, UInt<5>("h01d"), _decoder_T_138) @[Lookup.scala 33:37]
    node _decoder_T_140 = mux(_decoder_T_67, UInt<5>("h01c"), _decoder_T_139) @[Lookup.scala 33:37]
    node _decoder_T_141 = mux(_decoder_T_65, UInt<3>("h06"), _decoder_T_140) @[Lookup.scala 33:37]
    node _decoder_T_142 = mux(_decoder_T_63, UInt<3>("h06"), _decoder_T_141) @[Lookup.scala 33:37]
    node _decoder_T_143 = mux(_decoder_T_61, UInt<3>("h07"), _decoder_T_142) @[Lookup.scala 33:37]
    node _decoder_T_144 = mux(_decoder_T_59, UInt<3>("h07"), _decoder_T_143) @[Lookup.scala 33:37]
    node _decoder_T_145 = mux(_decoder_T_57, UInt<3>("h05"), _decoder_T_144) @[Lookup.scala 33:37]
    node _decoder_T_146 = mux(_decoder_T_55, UInt<3>("h05"), _decoder_T_145) @[Lookup.scala 33:37]
    node _decoder_T_147 = mux(_decoder_T_53, UInt<4>("h0a"), _decoder_T_146) @[Lookup.scala 33:37]
    node _decoder_T_148 = mux(_decoder_T_51, UInt<4>("h0a"), _decoder_T_147) @[Lookup.scala 33:37]
    node _decoder_T_149 = mux(_decoder_T_49, UInt<4>("h0b"), _decoder_T_148) @[Lookup.scala 33:37]
    node _decoder_T_150 = mux(_decoder_T_47, UInt<4>("h0b"), _decoder_T_149) @[Lookup.scala 33:37]
    node _decoder_T_151 = mux(_decoder_T_45, UInt<4>("h0e"), _decoder_T_150) @[Lookup.scala 33:37]
    node _decoder_T_152 = mux(_decoder_T_43, UInt<4>("h0d"), _decoder_T_151) @[Lookup.scala 33:37]
    node _decoder_T_153 = mux(_decoder_T_41, UInt<4>("h0c"), _decoder_T_152) @[Lookup.scala 33:37]
    node _decoder_T_154 = mux(_decoder_T_39, UInt<4>("h0c"), _decoder_T_153) @[Lookup.scala 33:37]
    node _decoder_T_155 = mux(_decoder_T_37, UInt<5>("h017"), _decoder_T_154) @[Lookup.scala 33:37]
    node _decoder_T_156 = mux(_decoder_T_35, UInt<5>("h016"), _decoder_T_155) @[Lookup.scala 33:37]
    node _decoder_T_157 = mux(_decoder_T_33, UInt<5>("h015"), _decoder_T_156) @[Lookup.scala 33:37]
    node _decoder_T_158 = mux(_decoder_T_31, UInt<5>("h014"), _decoder_T_157) @[Lookup.scala 33:37]
    node _decoder_T_159 = mux(_decoder_T_29, UInt<5>("h011"), _decoder_T_158) @[Lookup.scala 33:37]
    node _decoder_T_160 = mux(_decoder_T_27, UInt<5>("h010"), _decoder_T_159) @[Lookup.scala 33:37]
    node _decoder_T_161 = mux(_decoder_T_25, UInt<5>("h013"), _decoder_T_160) @[Lookup.scala 33:37]
    node _decoder_T_162 = mux(_decoder_T_23, UInt<5>("h012"), _decoder_T_161) @[Lookup.scala 33:37]
    node _decoder_T_163 = mux(_decoder_T_21, UInt<4>("h0f"), _decoder_T_162) @[Lookup.scala 33:37]
    node _decoder_T_164 = mux(_decoder_T_19, UInt<4>("h09"), _decoder_T_163) @[Lookup.scala 33:37]
    node _decoder_T_165 = mux(_decoder_T_17, UInt<4>("h09"), _decoder_T_164) @[Lookup.scala 33:37]
    node _decoder_T_166 = mux(_decoder_T_15, UInt<4>("h08"), _decoder_T_165) @[Lookup.scala 33:37]
    node _decoder_T_167 = mux(_decoder_T_13, UInt<4>("h08"), _decoder_T_166) @[Lookup.scala 33:37]
    node _decoder_T_168 = mux(_decoder_T_11, UInt<3>("h04"), _decoder_T_167) @[Lookup.scala 33:37]
    node _decoder_T_169 = mux(_decoder_T_9, UInt<2>("h03"), _decoder_T_168) @[Lookup.scala 33:37]
    node _decoder_T_170 = mux(_decoder_T_7, UInt<2>("h02"), _decoder_T_169) @[Lookup.scala 33:37]
    node _decoder_T_171 = mux(_decoder_T_5, UInt<2>("h02"), _decoder_T_170) @[Lookup.scala 33:37]
    node _decoder_T_172 = mux(_decoder_T_3, UInt<1>("h01"), _decoder_T_171) @[Lookup.scala 33:37]
    node decoder_0 = mux(_decoder_T_1, UInt<1>("h01"), _decoder_T_172) @[Lookup.scala 33:37]
    node _decoder_T_173 = mux(_decoder_T_115, UInt<2>("h03"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_174 = mux(_decoder_T_113, UInt<2>("h03"), _decoder_T_173) @[Lookup.scala 33:37]
    node _decoder_T_175 = mux(_decoder_T_111, UInt<2>("h03"), _decoder_T_174) @[Lookup.scala 33:37]
    node _decoder_T_176 = mux(_decoder_T_109, UInt<2>("h03"), _decoder_T_175) @[Lookup.scala 33:37]
    node _decoder_T_177 = mux(_decoder_T_107, UInt<2>("h03"), _decoder_T_176) @[Lookup.scala 33:37]
    node _decoder_T_178 = mux(_decoder_T_105, UInt<2>("h03"), _decoder_T_177) @[Lookup.scala 33:37]
    node _decoder_T_179 = mux(_decoder_T_103, UInt<2>("h03"), _decoder_T_178) @[Lookup.scala 33:37]
    node _decoder_T_180 = mux(_decoder_T_101, UInt<2>("h03"), _decoder_T_179) @[Lookup.scala 33:37]
    node _decoder_T_181 = mux(_decoder_T_99, UInt<2>("h02"), _decoder_T_180) @[Lookup.scala 33:37]
    node _decoder_T_182 = mux(_decoder_T_97, UInt<2>("h02"), _decoder_T_181) @[Lookup.scala 33:37]
    node _decoder_T_183 = mux(_decoder_T_95, UInt<1>("h00"), _decoder_T_182) @[Lookup.scala 33:37]
    node _decoder_T_184 = mux(_decoder_T_93, UInt<1>("h00"), _decoder_T_183) @[Lookup.scala 33:37]
    node _decoder_T_185 = mux(_decoder_T_91, UInt<1>("h00"), _decoder_T_184) @[Lookup.scala 33:37]
    node _decoder_T_186 = mux(_decoder_T_89, UInt<3>("h05"), _decoder_T_185) @[Lookup.scala 33:37]
    node _decoder_T_187 = mux(_decoder_T_87, UInt<3>("h05"), _decoder_T_186) @[Lookup.scala 33:37]
    node _decoder_T_188 = mux(_decoder_T_85, UInt<3>("h05"), _decoder_T_187) @[Lookup.scala 33:37]
    node _decoder_T_189 = mux(_decoder_T_83, UInt<3>("h05"), _decoder_T_188) @[Lookup.scala 33:37]
    node _decoder_T_190 = mux(_decoder_T_81, UInt<3>("h05"), _decoder_T_189) @[Lookup.scala 33:37]
    node _decoder_T_191 = mux(_decoder_T_79, UInt<3>("h05"), _decoder_T_190) @[Lookup.scala 33:37]
    node _decoder_T_192 = mux(_decoder_T_77, UInt<3>("h05"), _decoder_T_191) @[Lookup.scala 33:37]
    node _decoder_T_193 = mux(_decoder_T_75, UInt<3>("h05"), _decoder_T_192) @[Lookup.scala 33:37]
    node _decoder_T_194 = mux(_decoder_T_73, UInt<3>("h05"), _decoder_T_193) @[Lookup.scala 33:37]
    node _decoder_T_195 = mux(_decoder_T_71, UInt<3>("h05"), _decoder_T_194) @[Lookup.scala 33:37]
    node _decoder_T_196 = mux(_decoder_T_69, UInt<3>("h05"), _decoder_T_195) @[Lookup.scala 33:37]
    node _decoder_T_197 = mux(_decoder_T_67, UInt<3>("h05"), _decoder_T_196) @[Lookup.scala 33:37]
    node _decoder_T_198 = mux(_decoder_T_65, UInt<1>("h01"), _decoder_T_197) @[Lookup.scala 33:37]
    node _decoder_T_199 = mux(_decoder_T_63, UInt<1>("h01"), _decoder_T_198) @[Lookup.scala 33:37]
    node _decoder_T_200 = mux(_decoder_T_61, UInt<1>("h01"), _decoder_T_199) @[Lookup.scala 33:37]
    node _decoder_T_201 = mux(_decoder_T_59, UInt<1>("h01"), _decoder_T_200) @[Lookup.scala 33:37]
    node _decoder_T_202 = mux(_decoder_T_57, UInt<1>("h01"), _decoder_T_201) @[Lookup.scala 33:37]
    node _decoder_T_203 = mux(_decoder_T_55, UInt<1>("h01"), _decoder_T_202) @[Lookup.scala 33:37]
    node _decoder_T_204 = mux(_decoder_T_53, UInt<1>("h01"), _decoder_T_203) @[Lookup.scala 33:37]
    node _decoder_T_205 = mux(_decoder_T_51, UInt<1>("h01"), _decoder_T_204) @[Lookup.scala 33:37]
    node _decoder_T_206 = mux(_decoder_T_49, UInt<1>("h01"), _decoder_T_205) @[Lookup.scala 33:37]
    node _decoder_T_207 = mux(_decoder_T_47, UInt<1>("h01"), _decoder_T_206) @[Lookup.scala 33:37]
    node _decoder_T_208 = mux(_decoder_T_45, UInt<1>("h01"), _decoder_T_207) @[Lookup.scala 33:37]
    node _decoder_T_209 = mux(_decoder_T_43, UInt<1>("h01"), _decoder_T_208) @[Lookup.scala 33:37]
    node _decoder_T_210 = mux(_decoder_T_41, UInt<1>("h01"), _decoder_T_209) @[Lookup.scala 33:37]
    node _decoder_T_211 = mux(_decoder_T_39, UInt<1>("h01"), _decoder_T_210) @[Lookup.scala 33:37]
    node _decoder_T_212 = mux(_decoder_T_37, UInt<3>("h04"), _decoder_T_211) @[Lookup.scala 33:37]
    node _decoder_T_213 = mux(_decoder_T_35, UInt<3>("h04"), _decoder_T_212) @[Lookup.scala 33:37]
    node _decoder_T_214 = mux(_decoder_T_33, UInt<3>("h04"), _decoder_T_213) @[Lookup.scala 33:37]
    node _decoder_T_215 = mux(_decoder_T_31, UInt<3>("h04"), _decoder_T_214) @[Lookup.scala 33:37]
    node _decoder_T_216 = mux(_decoder_T_29, UInt<3>("h04"), _decoder_T_215) @[Lookup.scala 33:37]
    node _decoder_T_217 = mux(_decoder_T_27, UInt<3>("h04"), _decoder_T_216) @[Lookup.scala 33:37]
    node _decoder_T_218 = mux(_decoder_T_25, UInt<3>("h04"), _decoder_T_217) @[Lookup.scala 33:37]
    node _decoder_T_219 = mux(_decoder_T_23, UInt<3>("h04"), _decoder_T_218) @[Lookup.scala 33:37]
    node _decoder_T_220 = mux(_decoder_T_21, UInt<3>("h04"), _decoder_T_219) @[Lookup.scala 33:37]
    node _decoder_T_221 = mux(_decoder_T_19, UInt<1>("h01"), _decoder_T_220) @[Lookup.scala 33:37]
    node _decoder_T_222 = mux(_decoder_T_17, UInt<1>("h01"), _decoder_T_221) @[Lookup.scala 33:37]
    node _decoder_T_223 = mux(_decoder_T_15, UInt<1>("h01"), _decoder_T_222) @[Lookup.scala 33:37]
    node _decoder_T_224 = mux(_decoder_T_13, UInt<1>("h01"), _decoder_T_223) @[Lookup.scala 33:37]
    node _decoder_T_225 = mux(_decoder_T_11, UInt<1>("h01"), _decoder_T_224) @[Lookup.scala 33:37]
    node _decoder_T_226 = mux(_decoder_T_9, UInt<1>("h01"), _decoder_T_225) @[Lookup.scala 33:37]
    node _decoder_T_227 = mux(_decoder_T_7, UInt<1>("h01"), _decoder_T_226) @[Lookup.scala 33:37]
    node _decoder_T_228 = mux(_decoder_T_5, UInt<1>("h01"), _decoder_T_227) @[Lookup.scala 33:37]
    node _decoder_T_229 = mux(_decoder_T_3, UInt<1>("h01"), _decoder_T_228) @[Lookup.scala 33:37]
    node decoder_1 = mux(_decoder_T_1, UInt<1>("h01"), _decoder_T_229) @[Lookup.scala 33:37]
    node _decoder_T_230 = mux(_decoder_T_115, UInt<1>("h01"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_231 = mux(_decoder_T_113, UInt<1>("h01"), _decoder_T_230) @[Lookup.scala 33:37]
    node _decoder_T_232 = mux(_decoder_T_111, UInt<1>("h01"), _decoder_T_231) @[Lookup.scala 33:37]
    node _decoder_T_233 = mux(_decoder_T_109, UInt<1>("h01"), _decoder_T_232) @[Lookup.scala 33:37]
    node _decoder_T_234 = mux(_decoder_T_107, UInt<1>("h01"), _decoder_T_233) @[Lookup.scala 33:37]
    node _decoder_T_235 = mux(_decoder_T_105, UInt<1>("h01"), _decoder_T_234) @[Lookup.scala 33:37]
    node _decoder_T_236 = mux(_decoder_T_103, UInt<1>("h01"), _decoder_T_235) @[Lookup.scala 33:37]
    node _decoder_T_237 = mux(_decoder_T_101, UInt<1>("h01"), _decoder_T_236) @[Lookup.scala 33:37]
    node _decoder_T_238 = mux(_decoder_T_99, UInt<1>("h00"), _decoder_T_237) @[Lookup.scala 33:37]
    node _decoder_T_239 = mux(_decoder_T_97, UInt<1>("h00"), _decoder_T_238) @[Lookup.scala 33:37]
    node _decoder_T_240 = mux(_decoder_T_95, UInt<3>("h04"), _decoder_T_239) @[Lookup.scala 33:37]
    node _decoder_T_241 = mux(_decoder_T_93, UInt<3>("h04"), _decoder_T_240) @[Lookup.scala 33:37]
    node _decoder_T_242 = mux(_decoder_T_91, UInt<3>("h04"), _decoder_T_241) @[Lookup.scala 33:37]
    node _decoder_T_243 = mux(_decoder_T_89, UInt<3>("h04"), _decoder_T_242) @[Lookup.scala 33:37]
    node _decoder_T_244 = mux(_decoder_T_87, UInt<3>("h04"), _decoder_T_243) @[Lookup.scala 33:37]
    node _decoder_T_245 = mux(_decoder_T_85, UInt<2>("h03"), _decoder_T_244) @[Lookup.scala 33:37]
    node _decoder_T_246 = mux(_decoder_T_83, UInt<2>("h03"), _decoder_T_245) @[Lookup.scala 33:37]
    node _decoder_T_247 = mux(_decoder_T_81, UInt<1>("h01"), _decoder_T_246) @[Lookup.scala 33:37]
    node _decoder_T_248 = mux(_decoder_T_79, UInt<1>("h01"), _decoder_T_247) @[Lookup.scala 33:37]
    node _decoder_T_249 = mux(_decoder_T_77, UInt<1>("h01"), _decoder_T_248) @[Lookup.scala 33:37]
    node _decoder_T_250 = mux(_decoder_T_75, UInt<1>("h01"), _decoder_T_249) @[Lookup.scala 33:37]
    node _decoder_T_251 = mux(_decoder_T_73, UInt<1>("h01"), _decoder_T_250) @[Lookup.scala 33:37]
    node _decoder_T_252 = mux(_decoder_T_71, UInt<1>("h01"), _decoder_T_251) @[Lookup.scala 33:37]
    node _decoder_T_253 = mux(_decoder_T_69, UInt<1>("h01"), _decoder_T_252) @[Lookup.scala 33:37]
    node _decoder_T_254 = mux(_decoder_T_67, UInt<1>("h01"), _decoder_T_253) @[Lookup.scala 33:37]
    node _decoder_T_255 = mux(_decoder_T_65, UInt<2>("h02"), _decoder_T_254) @[Lookup.scala 33:37]
    node _decoder_T_256 = mux(_decoder_T_63, UInt<3>("h04"), _decoder_T_255) @[Lookup.scala 33:37]
    node _decoder_T_257 = mux(_decoder_T_61, UInt<2>("h02"), _decoder_T_256) @[Lookup.scala 33:37]
    node _decoder_T_258 = mux(_decoder_T_59, UInt<3>("h04"), _decoder_T_257) @[Lookup.scala 33:37]
    node _decoder_T_259 = mux(_decoder_T_57, UInt<2>("h02"), _decoder_T_258) @[Lookup.scala 33:37]
    node _decoder_T_260 = mux(_decoder_T_55, UInt<3>("h04"), _decoder_T_259) @[Lookup.scala 33:37]
    node _decoder_T_261 = mux(_decoder_T_53, UInt<1>("h00"), _decoder_T_260) @[Lookup.scala 33:37]
    node _decoder_T_262 = mux(_decoder_T_51, UInt<3>("h04"), _decoder_T_261) @[Lookup.scala 33:37]
    node _decoder_T_263 = mux(_decoder_T_49, UInt<1>("h00"), _decoder_T_262) @[Lookup.scala 33:37]
    node _decoder_T_264 = mux(_decoder_T_47, UInt<3>("h04"), _decoder_T_263) @[Lookup.scala 33:37]
    node _decoder_T_265 = mux(_decoder_T_45, UInt<3>("h04"), _decoder_T_264) @[Lookup.scala 33:37]
    node _decoder_T_266 = mux(_decoder_T_43, UInt<1>("h00"), _decoder_T_265) @[Lookup.scala 33:37]
    node _decoder_T_267 = mux(_decoder_T_41, UInt<1>("h00"), _decoder_T_266) @[Lookup.scala 33:37]
    node _decoder_T_268 = mux(_decoder_T_39, UInt<3>("h04"), _decoder_T_267) @[Lookup.scala 33:37]
    node _decoder_T_269 = mux(_decoder_T_37, UInt<3>("h04"), _decoder_T_268) @[Lookup.scala 33:37]
    node _decoder_T_270 = mux(_decoder_T_35, UInt<3>("h04"), _decoder_T_269) @[Lookup.scala 33:37]
    node _decoder_T_271 = mux(_decoder_T_33, UInt<3>("h04"), _decoder_T_270) @[Lookup.scala 33:37]
    node _decoder_T_272 = mux(_decoder_T_31, UInt<3>("h04"), _decoder_T_271) @[Lookup.scala 33:37]
    node _decoder_T_273 = mux(_decoder_T_29, UInt<3>("h04"), _decoder_T_272) @[Lookup.scala 33:37]
    node _decoder_T_274 = mux(_decoder_T_27, UInt<3>("h04"), _decoder_T_273) @[Lookup.scala 33:37]
    node _decoder_T_275 = mux(_decoder_T_25, UInt<3>("h04"), _decoder_T_274) @[Lookup.scala 33:37]
    node _decoder_T_276 = mux(_decoder_T_23, UInt<3>("h04"), _decoder_T_275) @[Lookup.scala 33:37]
    node _decoder_T_277 = mux(_decoder_T_21, UInt<3>("h04"), _decoder_T_276) @[Lookup.scala 33:37]
    node _decoder_T_278 = mux(_decoder_T_19, UInt<1>("h01"), _decoder_T_277) @[Lookup.scala 33:37]
    node _decoder_T_279 = mux(_decoder_T_17, UInt<3>("h04"), _decoder_T_278) @[Lookup.scala 33:37]
    node _decoder_T_280 = mux(_decoder_T_15, UInt<1>("h01"), _decoder_T_279) @[Lookup.scala 33:37]
    node _decoder_T_281 = mux(_decoder_T_13, UInt<3>("h04"), _decoder_T_280) @[Lookup.scala 33:37]
    node _decoder_T_282 = mux(_decoder_T_11, UInt<3>("h04"), _decoder_T_281) @[Lookup.scala 33:37]
    node _decoder_T_283 = mux(_decoder_T_9, UInt<3>("h04"), _decoder_T_282) @[Lookup.scala 33:37]
    node _decoder_T_284 = mux(_decoder_T_7, UInt<1>("h01"), _decoder_T_283) @[Lookup.scala 33:37]
    node _decoder_T_285 = mux(_decoder_T_5, UInt<3>("h04"), _decoder_T_284) @[Lookup.scala 33:37]
    node _decoder_T_286 = mux(_decoder_T_3, UInt<1>("h01"), _decoder_T_285) @[Lookup.scala 33:37]
    node decoder_2 = mux(_decoder_T_1, UInt<3>("h04"), _decoder_T_286) @[Lookup.scala 33:37]
    node _decoder_T_287 = mux(_decoder_T_115, UInt<1>("h00"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_288 = mux(_decoder_T_113, UInt<1>("h00"), _decoder_T_287) @[Lookup.scala 33:37]
    node _decoder_T_289 = mux(_decoder_T_111, UInt<1>("h00"), _decoder_T_288) @[Lookup.scala 33:37]
    node _decoder_T_290 = mux(_decoder_T_109, UInt<1>("h00"), _decoder_T_289) @[Lookup.scala 33:37]
    node _decoder_T_291 = mux(_decoder_T_107, UInt<1>("h00"), _decoder_T_290) @[Lookup.scala 33:37]
    node _decoder_T_292 = mux(_decoder_T_105, UInt<1>("h00"), _decoder_T_291) @[Lookup.scala 33:37]
    node _decoder_T_293 = mux(_decoder_T_103, UInt<1>("h00"), _decoder_T_292) @[Lookup.scala 33:37]
    node _decoder_T_294 = mux(_decoder_T_101, UInt<1>("h00"), _decoder_T_293) @[Lookup.scala 33:37]
    node _decoder_T_295 = mux(_decoder_T_99, UInt<1>("h01"), _decoder_T_294) @[Lookup.scala 33:37]
    node _decoder_T_296 = mux(_decoder_T_97, UInt<2>("h02"), _decoder_T_295) @[Lookup.scala 33:37]
    node _decoder_T_297 = mux(_decoder_T_95, UInt<3>("h04"), _decoder_T_296) @[Lookup.scala 33:37]
    node _decoder_T_298 = mux(_decoder_T_93, UInt<3>("h04"), _decoder_T_297) @[Lookup.scala 33:37]
    node _decoder_T_299 = mux(_decoder_T_91, UInt<3>("h04"), _decoder_T_298) @[Lookup.scala 33:37]
    node _decoder_T_300 = mux(_decoder_T_89, UInt<1>("h00"), _decoder_T_299) @[Lookup.scala 33:37]
    node _decoder_T_301 = mux(_decoder_T_87, UInt<1>("h00"), _decoder_T_300) @[Lookup.scala 33:37]
    node _decoder_T_302 = mux(_decoder_T_85, UInt<3>("h04"), _decoder_T_301) @[Lookup.scala 33:37]
    node _decoder_T_303 = mux(_decoder_T_83, UInt<3>("h04"), _decoder_T_302) @[Lookup.scala 33:37]
    node _decoder_T_304 = mux(_decoder_T_81, UInt<1>("h00"), _decoder_T_303) @[Lookup.scala 33:37]
    node _decoder_T_305 = mux(_decoder_T_79, UInt<1>("h00"), _decoder_T_304) @[Lookup.scala 33:37]
    node _decoder_T_306 = mux(_decoder_T_77, UInt<1>("h00"), _decoder_T_305) @[Lookup.scala 33:37]
    node _decoder_T_307 = mux(_decoder_T_75, UInt<1>("h00"), _decoder_T_306) @[Lookup.scala 33:37]
    node _decoder_T_308 = mux(_decoder_T_73, UInt<1>("h00"), _decoder_T_307) @[Lookup.scala 33:37]
    node _decoder_T_309 = mux(_decoder_T_71, UInt<1>("h00"), _decoder_T_308) @[Lookup.scala 33:37]
    node _decoder_T_310 = mux(_decoder_T_69, UInt<1>("h00"), _decoder_T_309) @[Lookup.scala 33:37]
    node _decoder_T_311 = mux(_decoder_T_67, UInt<1>("h00"), _decoder_T_310) @[Lookup.scala 33:37]
    node _decoder_T_312 = mux(_decoder_T_65, UInt<1>("h01"), _decoder_T_311) @[Lookup.scala 33:37]
    node _decoder_T_313 = mux(_decoder_T_63, UInt<1>("h01"), _decoder_T_312) @[Lookup.scala 33:37]
    node _decoder_T_314 = mux(_decoder_T_61, UInt<1>("h01"), _decoder_T_313) @[Lookup.scala 33:37]
    node _decoder_T_315 = mux(_decoder_T_59, UInt<1>("h01"), _decoder_T_314) @[Lookup.scala 33:37]
    node _decoder_T_316 = mux(_decoder_T_57, UInt<1>("h01"), _decoder_T_315) @[Lookup.scala 33:37]
    node _decoder_T_317 = mux(_decoder_T_55, UInt<1>("h01"), _decoder_T_316) @[Lookup.scala 33:37]
    node _decoder_T_318 = mux(_decoder_T_53, UInt<1>("h00"), _decoder_T_317) @[Lookup.scala 33:37]
    node _decoder_T_319 = mux(_decoder_T_51, UInt<1>("h00"), _decoder_T_318) @[Lookup.scala 33:37]
    node _decoder_T_320 = mux(_decoder_T_49, UInt<1>("h00"), _decoder_T_319) @[Lookup.scala 33:37]
    node _decoder_T_321 = mux(_decoder_T_47, UInt<1>("h00"), _decoder_T_320) @[Lookup.scala 33:37]
    node _decoder_T_322 = mux(_decoder_T_45, UInt<1>("h00"), _decoder_T_321) @[Lookup.scala 33:37]
    node _decoder_T_323 = mux(_decoder_T_43, UInt<3>("h04"), _decoder_T_322) @[Lookup.scala 33:37]
    node _decoder_T_324 = mux(_decoder_T_41, UInt<1>("h00"), _decoder_T_323) @[Lookup.scala 33:37]
    node _decoder_T_325 = mux(_decoder_T_39, UInt<1>("h00"), _decoder_T_324) @[Lookup.scala 33:37]
    node _decoder_T_326 = mux(_decoder_T_37, UInt<1>("h00"), _decoder_T_325) @[Lookup.scala 33:37]
    node _decoder_T_327 = mux(_decoder_T_35, UInt<1>("h00"), _decoder_T_326) @[Lookup.scala 33:37]
    node _decoder_T_328 = mux(_decoder_T_33, UInt<3>("h04"), _decoder_T_327) @[Lookup.scala 33:37]
    node _decoder_T_329 = mux(_decoder_T_31, UInt<3>("h04"), _decoder_T_328) @[Lookup.scala 33:37]
    node _decoder_T_330 = mux(_decoder_T_29, UInt<1>("h00"), _decoder_T_329) @[Lookup.scala 33:37]
    node _decoder_T_331 = mux(_decoder_T_27, UInt<1>("h00"), _decoder_T_330) @[Lookup.scala 33:37]
    node _decoder_T_332 = mux(_decoder_T_25, UInt<1>("h00"), _decoder_T_331) @[Lookup.scala 33:37]
    node _decoder_T_333 = mux(_decoder_T_23, UInt<1>("h00"), _decoder_T_332) @[Lookup.scala 33:37]
    node _decoder_T_334 = mux(_decoder_T_21, UInt<1>("h00"), _decoder_T_333) @[Lookup.scala 33:37]
    node _decoder_T_335 = mux(_decoder_T_19, UInt<1>("h00"), _decoder_T_334) @[Lookup.scala 33:37]
    node _decoder_T_336 = mux(_decoder_T_17, UInt<1>("h00"), _decoder_T_335) @[Lookup.scala 33:37]
    node _decoder_T_337 = mux(_decoder_T_15, UInt<1>("h00"), _decoder_T_336) @[Lookup.scala 33:37]
    node _decoder_T_338 = mux(_decoder_T_13, UInt<1>("h00"), _decoder_T_337) @[Lookup.scala 33:37]
    node _decoder_T_339 = mux(_decoder_T_11, UInt<1>("h00"), _decoder_T_338) @[Lookup.scala 33:37]
    node _decoder_T_340 = mux(_decoder_T_9, UInt<1>("h00"), _decoder_T_339) @[Lookup.scala 33:37]
    node _decoder_T_341 = mux(_decoder_T_7, UInt<1>("h00"), _decoder_T_340) @[Lookup.scala 33:37]
    node _decoder_T_342 = mux(_decoder_T_5, UInt<1>("h00"), _decoder_T_341) @[Lookup.scala 33:37]
    node _decoder_T_343 = mux(_decoder_T_3, UInt<1>("h00"), _decoder_T_342) @[Lookup.scala 33:37]
    node decoder_3 = mux(_decoder_T_1, UInt<1>("h00"), _decoder_T_343) @[Lookup.scala 33:37]
    node _decoder_T_344 = mux(_decoder_T_115, UInt<1>("h01"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_345 = mux(_decoder_T_113, UInt<1>("h01"), _decoder_T_344) @[Lookup.scala 33:37]
    node _decoder_T_346 = mux(_decoder_T_111, UInt<1>("h01"), _decoder_T_345) @[Lookup.scala 33:37]
    node _decoder_T_347 = mux(_decoder_T_109, UInt<3>("h04"), _decoder_T_346) @[Lookup.scala 33:37]
    node _decoder_T_348 = mux(_decoder_T_107, UInt<3>("h04"), _decoder_T_347) @[Lookup.scala 33:37]
    node _decoder_T_349 = mux(_decoder_T_105, UInt<3>("h04"), _decoder_T_348) @[Lookup.scala 33:37]
    node _decoder_T_350 = mux(_decoder_T_103, UInt<3>("h04"), _decoder_T_349) @[Lookup.scala 33:37]
    node _decoder_T_351 = mux(_decoder_T_101, UInt<3>("h04"), _decoder_T_350) @[Lookup.scala 33:37]
    node _decoder_T_352 = mux(_decoder_T_99, UInt<2>("h02"), _decoder_T_351) @[Lookup.scala 33:37]
    node _decoder_T_353 = mux(_decoder_T_97, UInt<3>("h04"), _decoder_T_352) @[Lookup.scala 33:37]
    node _decoder_T_354 = mux(_decoder_T_95, UInt<3>("h04"), _decoder_T_353) @[Lookup.scala 33:37]
    node _decoder_T_355 = mux(_decoder_T_93, UInt<3>("h04"), _decoder_T_354) @[Lookup.scala 33:37]
    node _decoder_T_356 = mux(_decoder_T_91, UInt<3>("h04"), _decoder_T_355) @[Lookup.scala 33:37]
    node _decoder_T_357 = mux(_decoder_T_89, UInt<3>("h04"), _decoder_T_356) @[Lookup.scala 33:37]
    node _decoder_T_358 = mux(_decoder_T_87, UInt<3>("h04"), _decoder_T_357) @[Lookup.scala 33:37]
    node _decoder_T_359 = mux(_decoder_T_85, UInt<3>("h04"), _decoder_T_358) @[Lookup.scala 33:37]
    node _decoder_T_360 = mux(_decoder_T_83, UInt<3>("h04"), _decoder_T_359) @[Lookup.scala 33:37]
    node _decoder_T_361 = mux(_decoder_T_81, UInt<3>("h04"), _decoder_T_360) @[Lookup.scala 33:37]
    node _decoder_T_362 = mux(_decoder_T_79, UInt<3>("h04"), _decoder_T_361) @[Lookup.scala 33:37]
    node _decoder_T_363 = mux(_decoder_T_77, UInt<3>("h04"), _decoder_T_362) @[Lookup.scala 33:37]
    node _decoder_T_364 = mux(_decoder_T_75, UInt<3>("h04"), _decoder_T_363) @[Lookup.scala 33:37]
    node _decoder_T_365 = mux(_decoder_T_73, UInt<3>("h04"), _decoder_T_364) @[Lookup.scala 33:37]
    node _decoder_T_366 = mux(_decoder_T_71, UInt<3>("h04"), _decoder_T_365) @[Lookup.scala 33:37]
    node _decoder_T_367 = mux(_decoder_T_69, UInt<1>("h01"), _decoder_T_366) @[Lookup.scala 33:37]
    node _decoder_T_368 = mux(_decoder_T_67, UInt<1>("h01"), _decoder_T_367) @[Lookup.scala 33:37]
    node _decoder_T_369 = mux(_decoder_T_65, UInt<3>("h04"), _decoder_T_368) @[Lookup.scala 33:37]
    node _decoder_T_370 = mux(_decoder_T_63, UInt<1>("h00"), _decoder_T_369) @[Lookup.scala 33:37]
    node _decoder_T_371 = mux(_decoder_T_61, UInt<3>("h04"), _decoder_T_370) @[Lookup.scala 33:37]
    node _decoder_T_372 = mux(_decoder_T_59, UInt<1>("h00"), _decoder_T_371) @[Lookup.scala 33:37]
    node _decoder_T_373 = mux(_decoder_T_57, UInt<3>("h04"), _decoder_T_372) @[Lookup.scala 33:37]
    node _decoder_T_374 = mux(_decoder_T_55, UInt<1>("h00"), _decoder_T_373) @[Lookup.scala 33:37]
    node _decoder_T_375 = mux(_decoder_T_53, UInt<3>("h04"), _decoder_T_374) @[Lookup.scala 33:37]
    node _decoder_T_376 = mux(_decoder_T_51, UInt<1>("h01"), _decoder_T_375) @[Lookup.scala 33:37]
    node _decoder_T_377 = mux(_decoder_T_49, UInt<3>("h04"), _decoder_T_376) @[Lookup.scala 33:37]
    node _decoder_T_378 = mux(_decoder_T_47, UInt<1>("h01"), _decoder_T_377) @[Lookup.scala 33:37]
    node _decoder_T_379 = mux(_decoder_T_45, UInt<1>("h01"), _decoder_T_378) @[Lookup.scala 33:37]
    node _decoder_T_380 = mux(_decoder_T_43, UInt<3>("h04"), _decoder_T_379) @[Lookup.scala 33:37]
    node _decoder_T_381 = mux(_decoder_T_41, UInt<3>("h04"), _decoder_T_380) @[Lookup.scala 33:37]
    node _decoder_T_382 = mux(_decoder_T_39, UInt<1>("h01"), _decoder_T_381) @[Lookup.scala 33:37]
    node _decoder_T_383 = mux(_decoder_T_37, UInt<3>("h04"), _decoder_T_382) @[Lookup.scala 33:37]
    node _decoder_T_384 = mux(_decoder_T_35, UInt<3>("h04"), _decoder_T_383) @[Lookup.scala 33:37]
    node _decoder_T_385 = mux(_decoder_T_33, UInt<3>("h04"), _decoder_T_384) @[Lookup.scala 33:37]
    node _decoder_T_386 = mux(_decoder_T_31, UInt<3>("h04"), _decoder_T_385) @[Lookup.scala 33:37]
    node _decoder_T_387 = mux(_decoder_T_29, UInt<1>("h01"), _decoder_T_386) @[Lookup.scala 33:37]
    node _decoder_T_388 = mux(_decoder_T_27, UInt<1>("h01"), _decoder_T_387) @[Lookup.scala 33:37]
    node _decoder_T_389 = mux(_decoder_T_25, UInt<1>("h01"), _decoder_T_388) @[Lookup.scala 33:37]
    node _decoder_T_390 = mux(_decoder_T_23, UInt<1>("h01"), _decoder_T_389) @[Lookup.scala 33:37]
    node _decoder_T_391 = mux(_decoder_T_21, UInt<1>("h01"), _decoder_T_390) @[Lookup.scala 33:37]
    node _decoder_T_392 = mux(_decoder_T_19, UInt<3>("h04"), _decoder_T_391) @[Lookup.scala 33:37]
    node _decoder_T_393 = mux(_decoder_T_17, UInt<1>("h01"), _decoder_T_392) @[Lookup.scala 33:37]
    node _decoder_T_394 = mux(_decoder_T_15, UInt<3>("h04"), _decoder_T_393) @[Lookup.scala 33:37]
    node _decoder_T_395 = mux(_decoder_T_13, UInt<1>("h01"), _decoder_T_394) @[Lookup.scala 33:37]
    node _decoder_T_396 = mux(_decoder_T_11, UInt<1>("h01"), _decoder_T_395) @[Lookup.scala 33:37]
    node _decoder_T_397 = mux(_decoder_T_9, UInt<1>("h01"), _decoder_T_396) @[Lookup.scala 33:37]
    node _decoder_T_398 = mux(_decoder_T_7, UInt<3>("h04"), _decoder_T_397) @[Lookup.scala 33:37]
    node _decoder_T_399 = mux(_decoder_T_5, UInt<1>("h01"), _decoder_T_398) @[Lookup.scala 33:37]
    node _decoder_T_400 = mux(_decoder_T_3, UInt<3>("h04"), _decoder_T_399) @[Lookup.scala 33:37]
    node decoder_4 = mux(_decoder_T_1, UInt<1>("h01"), _decoder_T_400) @[Lookup.scala 33:37]
    node _decoder_T_401 = mux(_decoder_T_115, UInt<3>("h04"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_402 = mux(_decoder_T_113, UInt<3>("h04"), _decoder_T_401) @[Lookup.scala 33:37]
    node _decoder_T_403 = mux(_decoder_T_111, UInt<3>("h04"), _decoder_T_402) @[Lookup.scala 33:37]
    node _decoder_T_404 = mux(_decoder_T_109, UInt<1>("h01"), _decoder_T_403) @[Lookup.scala 33:37]
    node _decoder_T_405 = mux(_decoder_T_107, UInt<1>("h01"), _decoder_T_404) @[Lookup.scala 33:37]
    node _decoder_T_406 = mux(_decoder_T_105, UInt<1>("h01"), _decoder_T_405) @[Lookup.scala 33:37]
    node _decoder_T_407 = mux(_decoder_T_103, UInt<1>("h01"), _decoder_T_406) @[Lookup.scala 33:37]
    node _decoder_T_408 = mux(_decoder_T_101, UInt<1>("h01"), _decoder_T_407) @[Lookup.scala 33:37]
    node _decoder_T_409 = mux(_decoder_T_99, UInt<3>("h04"), _decoder_T_408) @[Lookup.scala 33:37]
    node _decoder_T_410 = mux(_decoder_T_97, UInt<1>("h01"), _decoder_T_409) @[Lookup.scala 33:37]
    node _decoder_T_411 = mux(_decoder_T_95, UInt<3>("h04"), _decoder_T_410) @[Lookup.scala 33:37]
    node _decoder_T_412 = mux(_decoder_T_93, UInt<3>("h04"), _decoder_T_411) @[Lookup.scala 33:37]
    node _decoder_T_413 = mux(_decoder_T_91, UInt<3>("h04"), _decoder_T_412) @[Lookup.scala 33:37]
    node _decoder_T_414 = mux(_decoder_T_89, UInt<2>("h02"), _decoder_T_413) @[Lookup.scala 33:37]
    node _decoder_T_415 = mux(_decoder_T_87, UInt<3>("h04"), _decoder_T_414) @[Lookup.scala 33:37]
    node _decoder_T_416 = mux(_decoder_T_85, UInt<2>("h03"), _decoder_T_415) @[Lookup.scala 33:37]
    node _decoder_T_417 = mux(_decoder_T_83, UInt<3>("h04"), _decoder_T_416) @[Lookup.scala 33:37]
    node _decoder_T_418 = mux(_decoder_T_81, UInt<2>("h03"), _decoder_T_417) @[Lookup.scala 33:37]
    node _decoder_T_419 = mux(_decoder_T_79, UInt<2>("h03"), _decoder_T_418) @[Lookup.scala 33:37]
    node _decoder_T_420 = mux(_decoder_T_77, UInt<3>("h04"), _decoder_T_419) @[Lookup.scala 33:37]
    node _decoder_T_421 = mux(_decoder_T_75, UInt<3>("h04"), _decoder_T_420) @[Lookup.scala 33:37]
    node _decoder_T_422 = mux(_decoder_T_73, UInt<3>("h04"), _decoder_T_421) @[Lookup.scala 33:37]
    node _decoder_T_423 = mux(_decoder_T_71, UInt<3>("h04"), _decoder_T_422) @[Lookup.scala 33:37]
    node _decoder_T_424 = mux(_decoder_T_69, UInt<3>("h04"), _decoder_T_423) @[Lookup.scala 33:37]
    node _decoder_T_425 = mux(_decoder_T_67, UInt<3>("h04"), _decoder_T_424) @[Lookup.scala 33:37]
    node _decoder_T_426 = mux(_decoder_T_65, UInt<2>("h02"), _decoder_T_425) @[Lookup.scala 33:37]
    node _decoder_T_427 = mux(_decoder_T_63, UInt<2>("h02"), _decoder_T_426) @[Lookup.scala 33:37]
    node _decoder_T_428 = mux(_decoder_T_61, UInt<2>("h02"), _decoder_T_427) @[Lookup.scala 33:37]
    node _decoder_T_429 = mux(_decoder_T_59, UInt<2>("h02"), _decoder_T_428) @[Lookup.scala 33:37]
    node _decoder_T_430 = mux(_decoder_T_57, UInt<2>("h02"), _decoder_T_429) @[Lookup.scala 33:37]
    node _decoder_T_431 = mux(_decoder_T_55, UInt<2>("h02"), _decoder_T_430) @[Lookup.scala 33:37]
    node _decoder_T_432 = mux(_decoder_T_53, UInt<1>("h01"), _decoder_T_431) @[Lookup.scala 33:37]
    node _decoder_T_433 = mux(_decoder_T_51, UInt<2>("h02"), _decoder_T_432) @[Lookup.scala 33:37]
    node _decoder_T_434 = mux(_decoder_T_49, UInt<1>("h01"), _decoder_T_433) @[Lookup.scala 33:37]
    node _decoder_T_435 = mux(_decoder_T_47, UInt<2>("h02"), _decoder_T_434) @[Lookup.scala 33:37]
    node _decoder_T_436 = mux(_decoder_T_45, UInt<2>("h02"), _decoder_T_435) @[Lookup.scala 33:37]
    node _decoder_T_437 = mux(_decoder_T_43, UInt<1>("h01"), _decoder_T_436) @[Lookup.scala 33:37]
    node _decoder_T_438 = mux(_decoder_T_41, UInt<1>("h01"), _decoder_T_437) @[Lookup.scala 33:37]
    node _decoder_T_439 = mux(_decoder_T_39, UInt<2>("h02"), _decoder_T_438) @[Lookup.scala 33:37]
    node _decoder_T_440 = mux(_decoder_T_37, UInt<3>("h04"), _decoder_T_439) @[Lookup.scala 33:37]
    node _decoder_T_441 = mux(_decoder_T_35, UInt<3>("h04"), _decoder_T_440) @[Lookup.scala 33:37]
    node _decoder_T_442 = mux(_decoder_T_33, UInt<2>("h02"), _decoder_T_441) @[Lookup.scala 33:37]
    node _decoder_T_443 = mux(_decoder_T_31, UInt<2>("h02"), _decoder_T_442) @[Lookup.scala 33:37]
    node _decoder_T_444 = mux(_decoder_T_29, UInt<3>("h04"), _decoder_T_443) @[Lookup.scala 33:37]
    node _decoder_T_445 = mux(_decoder_T_27, UInt<3>("h04"), _decoder_T_444) @[Lookup.scala 33:37]
    node _decoder_T_446 = mux(_decoder_T_25, UInt<3>("h04"), _decoder_T_445) @[Lookup.scala 33:37]
    node _decoder_T_447 = mux(_decoder_T_23, UInt<3>("h04"), _decoder_T_446) @[Lookup.scala 33:37]
    node _decoder_T_448 = mux(_decoder_T_21, UInt<2>("h02"), _decoder_T_447) @[Lookup.scala 33:37]
    node _decoder_T_449 = mux(_decoder_T_19, UInt<1>("h01"), _decoder_T_448) @[Lookup.scala 33:37]
    node _decoder_T_450 = mux(_decoder_T_17, UInt<2>("h02"), _decoder_T_449) @[Lookup.scala 33:37]
    node _decoder_T_451 = mux(_decoder_T_15, UInt<1>("h01"), _decoder_T_450) @[Lookup.scala 33:37]
    node _decoder_T_452 = mux(_decoder_T_13, UInt<2>("h02"), _decoder_T_451) @[Lookup.scala 33:37]
    node _decoder_T_453 = mux(_decoder_T_11, UInt<2>("h02"), _decoder_T_452) @[Lookup.scala 33:37]
    node _decoder_T_454 = mux(_decoder_T_9, UInt<2>("h02"), _decoder_T_453) @[Lookup.scala 33:37]
    node _decoder_T_455 = mux(_decoder_T_7, UInt<1>("h01"), _decoder_T_454) @[Lookup.scala 33:37]
    node _decoder_T_456 = mux(_decoder_T_5, UInt<2>("h02"), _decoder_T_455) @[Lookup.scala 33:37]
    node _decoder_T_457 = mux(_decoder_T_3, UInt<1>("h01"), _decoder_T_456) @[Lookup.scala 33:37]
    node decoder_5 = mux(_decoder_T_1, UInt<2>("h02"), _decoder_T_457) @[Lookup.scala 33:37]
    node _decoder_T_458 = mux(_decoder_T_115, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_459 = mux(_decoder_T_113, UInt<1>("h00"), _decoder_T_458) @[Lookup.scala 33:37]
    node _decoder_T_460 = mux(_decoder_T_111, UInt<1>("h00"), _decoder_T_459) @[Lookup.scala 33:37]
    node _decoder_T_461 = mux(_decoder_T_109, UInt<1>("h00"), _decoder_T_460) @[Lookup.scala 33:37]
    node _decoder_T_462 = mux(_decoder_T_107, UInt<1>("h00"), _decoder_T_461) @[Lookup.scala 33:37]
    node _decoder_T_463 = mux(_decoder_T_105, UInt<1>("h00"), _decoder_T_462) @[Lookup.scala 33:37]
    node _decoder_T_464 = mux(_decoder_T_103, UInt<1>("h00"), _decoder_T_463) @[Lookup.scala 33:37]
    node _decoder_T_465 = mux(_decoder_T_101, UInt<1>("h00"), _decoder_T_464) @[Lookup.scala 33:37]
    node _decoder_T_466 = mux(_decoder_T_99, UInt<1>("h00"), _decoder_T_465) @[Lookup.scala 33:37]
    node _decoder_T_467 = mux(_decoder_T_97, UInt<1>("h00"), _decoder_T_466) @[Lookup.scala 33:37]
    node _decoder_T_468 = mux(_decoder_T_95, UInt<1>("h01"), _decoder_T_467) @[Lookup.scala 33:37]
    node _decoder_T_469 = mux(_decoder_T_93, UInt<1>("h01"), _decoder_T_468) @[Lookup.scala 33:37]
    node _decoder_T_470 = mux(_decoder_T_91, UInt<1>("h01"), _decoder_T_469) @[Lookup.scala 33:37]
    node _decoder_T_471 = mux(_decoder_T_89, UInt<1>("h01"), _decoder_T_470) @[Lookup.scala 33:37]
    node _decoder_T_472 = mux(_decoder_T_87, UInt<1>("h01"), _decoder_T_471) @[Lookup.scala 33:37]
    node _decoder_T_473 = mux(_decoder_T_85, UInt<1>("h01"), _decoder_T_472) @[Lookup.scala 33:37]
    node _decoder_T_474 = mux(_decoder_T_83, UInt<1>("h01"), _decoder_T_473) @[Lookup.scala 33:37]
    node _decoder_T_475 = mux(_decoder_T_81, UInt<1>("h00"), _decoder_T_474) @[Lookup.scala 33:37]
    node _decoder_T_476 = mux(_decoder_T_79, UInt<1>("h00"), _decoder_T_475) @[Lookup.scala 33:37]
    node _decoder_T_477 = mux(_decoder_T_77, UInt<1>("h00"), _decoder_T_476) @[Lookup.scala 33:37]
    node _decoder_T_478 = mux(_decoder_T_75, UInt<1>("h00"), _decoder_T_477) @[Lookup.scala 33:37]
    node _decoder_T_479 = mux(_decoder_T_73, UInt<1>("h00"), _decoder_T_478) @[Lookup.scala 33:37]
    node _decoder_T_480 = mux(_decoder_T_71, UInt<1>("h00"), _decoder_T_479) @[Lookup.scala 33:37]
    node _decoder_T_481 = mux(_decoder_T_69, UInt<1>("h00"), _decoder_T_480) @[Lookup.scala 33:37]
    node _decoder_T_482 = mux(_decoder_T_67, UInt<1>("h00"), _decoder_T_481) @[Lookup.scala 33:37]
    node _decoder_T_483 = mux(_decoder_T_65, UInt<1>("h00"), _decoder_T_482) @[Lookup.scala 33:37]
    node _decoder_T_484 = mux(_decoder_T_63, UInt<1>("h00"), _decoder_T_483) @[Lookup.scala 33:37]
    node _decoder_T_485 = mux(_decoder_T_61, UInt<1>("h00"), _decoder_T_484) @[Lookup.scala 33:37]
    node _decoder_T_486 = mux(_decoder_T_59, UInt<1>("h00"), _decoder_T_485) @[Lookup.scala 33:37]
    node _decoder_T_487 = mux(_decoder_T_57, UInt<1>("h00"), _decoder_T_486) @[Lookup.scala 33:37]
    node _decoder_T_488 = mux(_decoder_T_55, UInt<1>("h00"), _decoder_T_487) @[Lookup.scala 33:37]
    node _decoder_T_489 = mux(_decoder_T_53, UInt<1>("h00"), _decoder_T_488) @[Lookup.scala 33:37]
    node _decoder_T_490 = mux(_decoder_T_51, UInt<1>("h00"), _decoder_T_489) @[Lookup.scala 33:37]
    node _decoder_T_491 = mux(_decoder_T_49, UInt<1>("h00"), _decoder_T_490) @[Lookup.scala 33:37]
    node _decoder_T_492 = mux(_decoder_T_47, UInt<1>("h00"), _decoder_T_491) @[Lookup.scala 33:37]
    node _decoder_T_493 = mux(_decoder_T_45, UInt<1>("h00"), _decoder_T_492) @[Lookup.scala 33:37]
    node _decoder_T_494 = mux(_decoder_T_43, UInt<1>("h00"), _decoder_T_493) @[Lookup.scala 33:37]
    node _decoder_T_495 = mux(_decoder_T_41, UInt<1>("h00"), _decoder_T_494) @[Lookup.scala 33:37]
    node _decoder_T_496 = mux(_decoder_T_39, UInt<1>("h00"), _decoder_T_495) @[Lookup.scala 33:37]
    node _decoder_T_497 = mux(_decoder_T_37, UInt<1>("h00"), _decoder_T_496) @[Lookup.scala 33:37]
    node _decoder_T_498 = mux(_decoder_T_35, UInt<1>("h00"), _decoder_T_497) @[Lookup.scala 33:37]
    node _decoder_T_499 = mux(_decoder_T_33, UInt<1>("h00"), _decoder_T_498) @[Lookup.scala 33:37]
    node _decoder_T_500 = mux(_decoder_T_31, UInt<1>("h00"), _decoder_T_499) @[Lookup.scala 33:37]
    node _decoder_T_501 = mux(_decoder_T_29, UInt<1>("h00"), _decoder_T_500) @[Lookup.scala 33:37]
    node _decoder_T_502 = mux(_decoder_T_27, UInt<1>("h00"), _decoder_T_501) @[Lookup.scala 33:37]
    node _decoder_T_503 = mux(_decoder_T_25, UInt<1>("h00"), _decoder_T_502) @[Lookup.scala 33:37]
    node _decoder_T_504 = mux(_decoder_T_23, UInt<1>("h00"), _decoder_T_503) @[Lookup.scala 33:37]
    node _decoder_T_505 = mux(_decoder_T_21, UInt<1>("h00"), _decoder_T_504) @[Lookup.scala 33:37]
    node _decoder_T_506 = mux(_decoder_T_19, UInt<1>("h00"), _decoder_T_505) @[Lookup.scala 33:37]
    node _decoder_T_507 = mux(_decoder_T_17, UInt<1>("h00"), _decoder_T_506) @[Lookup.scala 33:37]
    node _decoder_T_508 = mux(_decoder_T_15, UInt<1>("h00"), _decoder_T_507) @[Lookup.scala 33:37]
    node _decoder_T_509 = mux(_decoder_T_13, UInt<1>("h00"), _decoder_T_508) @[Lookup.scala 33:37]
    node _decoder_T_510 = mux(_decoder_T_11, UInt<1>("h00"), _decoder_T_509) @[Lookup.scala 33:37]
    node _decoder_T_511 = mux(_decoder_T_9, UInt<1>("h00"), _decoder_T_510) @[Lookup.scala 33:37]
    node _decoder_T_512 = mux(_decoder_T_7, UInt<1>("h00"), _decoder_T_511) @[Lookup.scala 33:37]
    node _decoder_T_513 = mux(_decoder_T_5, UInt<1>("h00"), _decoder_T_512) @[Lookup.scala 33:37]
    node _decoder_T_514 = mux(_decoder_T_3, UInt<1>("h00"), _decoder_T_513) @[Lookup.scala 33:37]
    node decoder_6 = mux(_decoder_T_1, UInt<1>("h00"), _decoder_T_514) @[Lookup.scala 33:37]
    node _decoder_T_515 = mux(_decoder_T_115, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_516 = mux(_decoder_T_113, UInt<1>("h01"), _decoder_T_515) @[Lookup.scala 33:37]
    node _decoder_T_517 = mux(_decoder_T_111, UInt<1>("h01"), _decoder_T_516) @[Lookup.scala 33:37]
    node _decoder_T_518 = mux(_decoder_T_109, UInt<2>("h02"), _decoder_T_517) @[Lookup.scala 33:37]
    node _decoder_T_519 = mux(_decoder_T_107, UInt<2>("h02"), _decoder_T_518) @[Lookup.scala 33:37]
    node _decoder_T_520 = mux(_decoder_T_105, UInt<2>("h02"), _decoder_T_519) @[Lookup.scala 33:37]
    node _decoder_T_521 = mux(_decoder_T_103, UInt<2>("h02"), _decoder_T_520) @[Lookup.scala 33:37]
    node _decoder_T_522 = mux(_decoder_T_101, UInt<2>("h02"), _decoder_T_521) @[Lookup.scala 33:37]
    node _decoder_T_523 = mux(_decoder_T_99, UInt<2>("h03"), _decoder_T_522) @[Lookup.scala 33:37]
    node _decoder_T_524 = mux(_decoder_T_97, UInt<2>("h03"), _decoder_T_523) @[Lookup.scala 33:37]
    node _decoder_T_525 = mux(_decoder_T_95, UInt<2>("h03"), _decoder_T_524) @[Lookup.scala 33:37]
    node _decoder_T_526 = mux(_decoder_T_93, UInt<1>("h00"), _decoder_T_525) @[Lookup.scala 33:37]
    node _decoder_T_527 = mux(_decoder_T_91, UInt<1>("h00"), _decoder_T_526) @[Lookup.scala 33:37]
    node _decoder_T_528 = mux(_decoder_T_89, UInt<3>("h06"), _decoder_T_527) @[Lookup.scala 33:37]
    node _decoder_T_529 = mux(_decoder_T_87, UInt<3>("h05"), _decoder_T_528) @[Lookup.scala 33:37]
    node _decoder_T_530 = mux(_decoder_T_85, UInt<3>("h06"), _decoder_T_529) @[Lookup.scala 33:37]
    node _decoder_T_531 = mux(_decoder_T_83, UInt<3>("h05"), _decoder_T_530) @[Lookup.scala 33:37]
    node _decoder_T_532 = mux(_decoder_T_81, UInt<3>("h06"), _decoder_T_531) @[Lookup.scala 33:37]
    node _decoder_T_533 = mux(_decoder_T_79, UInt<3>("h06"), _decoder_T_532) @[Lookup.scala 33:37]
    node _decoder_T_534 = mux(_decoder_T_77, UInt<3>("h05"), _decoder_T_533) @[Lookup.scala 33:37]
    node _decoder_T_535 = mux(_decoder_T_75, UInt<3>("h05"), _decoder_T_534) @[Lookup.scala 33:37]
    node _decoder_T_536 = mux(_decoder_T_73, UInt<3>("h05"), _decoder_T_535) @[Lookup.scala 33:37]
    node _decoder_T_537 = mux(_decoder_T_71, UInt<3>("h05"), _decoder_T_536) @[Lookup.scala 33:37]
    node _decoder_T_538 = mux(_decoder_T_69, UInt<3>("h05"), _decoder_T_537) @[Lookup.scala 33:37]
    node _decoder_T_539 = mux(_decoder_T_67, UInt<3>("h05"), _decoder_T_538) @[Lookup.scala 33:37]
    node _decoder_T_540 = mux(_decoder_T_65, UInt<2>("h02"), _decoder_T_539) @[Lookup.scala 33:37]
    node _decoder_T_541 = mux(_decoder_T_63, UInt<2>("h02"), _decoder_T_540) @[Lookup.scala 33:37]
    node _decoder_T_542 = mux(_decoder_T_61, UInt<2>("h02"), _decoder_T_541) @[Lookup.scala 33:37]
    node _decoder_T_543 = mux(_decoder_T_59, UInt<2>("h02"), _decoder_T_542) @[Lookup.scala 33:37]
    node _decoder_T_544 = mux(_decoder_T_57, UInt<2>("h02"), _decoder_T_543) @[Lookup.scala 33:37]
    node _decoder_T_545 = mux(_decoder_T_55, UInt<2>("h02"), _decoder_T_544) @[Lookup.scala 33:37]
    node _decoder_T_546 = mux(_decoder_T_53, UInt<2>("h02"), _decoder_T_545) @[Lookup.scala 33:37]
    node _decoder_T_547 = mux(_decoder_T_51, UInt<2>("h02"), _decoder_T_546) @[Lookup.scala 33:37]
    node _decoder_T_548 = mux(_decoder_T_49, UInt<2>("h02"), _decoder_T_547) @[Lookup.scala 33:37]
    node _decoder_T_549 = mux(_decoder_T_47, UInt<2>("h02"), _decoder_T_548) @[Lookup.scala 33:37]
    node _decoder_T_550 = mux(_decoder_T_45, UInt<2>("h02"), _decoder_T_549) @[Lookup.scala 33:37]
    node _decoder_T_551 = mux(_decoder_T_43, UInt<2>("h02"), _decoder_T_550) @[Lookup.scala 33:37]
    node _decoder_T_552 = mux(_decoder_T_41, UInt<2>("h02"), _decoder_T_551) @[Lookup.scala 33:37]
    node _decoder_T_553 = mux(_decoder_T_39, UInt<2>("h02"), _decoder_T_552) @[Lookup.scala 33:37]
    node _decoder_T_554 = mux(_decoder_T_37, UInt<3>("h04"), _decoder_T_553) @[Lookup.scala 33:37]
    node _decoder_T_555 = mux(_decoder_T_35, UInt<3>("h04"), _decoder_T_554) @[Lookup.scala 33:37]
    node _decoder_T_556 = mux(_decoder_T_33, UInt<2>("h02"), _decoder_T_555) @[Lookup.scala 33:37]
    node _decoder_T_557 = mux(_decoder_T_31, UInt<2>("h02"), _decoder_T_556) @[Lookup.scala 33:37]
    node _decoder_T_558 = mux(_decoder_T_29, UInt<3>("h04"), _decoder_T_557) @[Lookup.scala 33:37]
    node _decoder_T_559 = mux(_decoder_T_27, UInt<3>("h04"), _decoder_T_558) @[Lookup.scala 33:37]
    node _decoder_T_560 = mux(_decoder_T_25, UInt<3>("h04"), _decoder_T_559) @[Lookup.scala 33:37]
    node _decoder_T_561 = mux(_decoder_T_23, UInt<3>("h04"), _decoder_T_560) @[Lookup.scala 33:37]
    node _decoder_T_562 = mux(_decoder_T_21, UInt<2>("h02"), _decoder_T_561) @[Lookup.scala 33:37]
    node _decoder_T_563 = mux(_decoder_T_19, UInt<2>("h02"), _decoder_T_562) @[Lookup.scala 33:37]
    node _decoder_T_564 = mux(_decoder_T_17, UInt<2>("h02"), _decoder_T_563) @[Lookup.scala 33:37]
    node _decoder_T_565 = mux(_decoder_T_15, UInt<2>("h02"), _decoder_T_564) @[Lookup.scala 33:37]
    node _decoder_T_566 = mux(_decoder_T_13, UInt<2>("h02"), _decoder_T_565) @[Lookup.scala 33:37]
    node _decoder_T_567 = mux(_decoder_T_11, UInt<2>("h02"), _decoder_T_566) @[Lookup.scala 33:37]
    node _decoder_T_568 = mux(_decoder_T_9, UInt<2>("h02"), _decoder_T_567) @[Lookup.scala 33:37]
    node _decoder_T_569 = mux(_decoder_T_7, UInt<2>("h02"), _decoder_T_568) @[Lookup.scala 33:37]
    node _decoder_T_570 = mux(_decoder_T_5, UInt<2>("h02"), _decoder_T_569) @[Lookup.scala 33:37]
    node _decoder_T_571 = mux(_decoder_T_3, UInt<2>("h02"), _decoder_T_570) @[Lookup.scala 33:37]
    node decoder_7 = mux(_decoder_T_1, UInt<2>("h02"), _decoder_T_571) @[Lookup.scala 33:37]
    rename_info[0].uop <= decoder_0 @[Decode.scala 32:52]
    rename_info[0].unit_sel <= decoder_1 @[Decode.scala 32:52]
    imm_sel <= decoder_2 @[Decode.scala 32:52]
    op1_sel <= decoder_3 @[Decode.scala 32:52]
    op2_sel <= decoder_4 @[Decode.scala 32:52]
    des_sel <= decoder_5 @[Decode.scala 32:52]
    rename_info[0].flush_on_commit <= decoder_6 @[Decode.scala 32:52]
    rename_info[0].target_sel <= decoder_7 @[Decode.scala 32:52]
    node rs = bits(io.fb_inst_bank.bits.data[0].inst, 25, 21) @[Decode.scala 34:27]
    node rt = bits(io.fb_inst_bank.bits.data[0].inst, 20, 16) @[Decode.scala 35:27]
    node rd = bits(io.fb_inst_bank.bits.data[0].inst, 15, 11) @[Decode.scala 36:27]
    node rename_info_0_imm_data_lo = bits(io.fb_inst_bank.bits.data[0].inst, 15, 0) @[Decode.scala 37:27]
    node rename_info_0_imm_data_lo_1 = bits(io.fb_inst_bank.bits.data[0].inst, 25, 0) @[Decode.scala 38:27]
    node rename_info_0_imm_data_lo_2 = bits(io.fb_inst_bank.bits.data[0].inst, 10, 6) @[Decode.scala 39:27]
    node _rename_info_0_except_type_T = asUInt(rename_info[0].uop) @[Decode.scala 41:40]
    node _rename_info_0_except_type_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 41:68]
    node _rename_info_0_except_type_T_2 = asUInt(UInt<6>("h02e")) @[Decode.scala 42:25]
    node _rename_info_0_except_type_T_3 = asUInt(UInt<1>("h01")) @[Decode.scala 42:58]
    node _rename_info_0_except_type_T_4 = asUInt(UInt<6>("h030")) @[Decode.scala 43:23]
    node _rename_info_0_except_type_T_5 = asUInt(UInt<2>("h02")) @[Decode.scala 43:54]
    node _rename_info_0_except_type_T_6 = eq(_rename_info_0_except_type_T_2, _rename_info_0_except_type_T) @[Mux.scala 80:60]
    node _rename_info_0_except_type_T_7 = mux(_rename_info_0_except_type_T_6, _rename_info_0_except_type_T_3, _rename_info_0_except_type_T_1) @[Mux.scala 80:57]
    node _rename_info_0_except_type_T_8 = eq(_rename_info_0_except_type_T_4, _rename_info_0_except_type_T) @[Mux.scala 80:60]
    node _rename_info_0_except_type_T_9 = mux(_rename_info_0_except_type_T_8, _rename_info_0_except_type_T_5, _rename_info_0_except_type_T_7) @[Mux.scala 80:57]
    wire _rename_info_0_except_type_WIRE : UInt<2> @[Decode.scala 44:16]
    wire _rename_info_0_except_type_WIRE_1 : UInt<2> @[Decode.scala 44:16]
    _rename_info_0_except_type_WIRE_1 <= _rename_info_0_except_type_T_9 @[Decode.scala 44:16]
    wire _rename_info_0_except_type_WIRE_2 : UInt<2> @[Decode.scala 44:16]
    _rename_info_0_except_type_WIRE_2 <= _rename_info_0_except_type_WIRE_1 @[Decode.scala 44:16]
    _rename_info_0_except_type_WIRE <= _rename_info_0_except_type_WIRE_2 @[Decode.scala 44:16]
    rename_info[0].except_type <= _rename_info_0_except_type_WIRE @[Decode.scala 41:17]
    node _rename_info_0_need_imm_T = neq(imm_sel, UInt<3>("h04")) @[Decode.scala 46:25]
    rename_info[0].need_imm <= _rename_info_0_need_imm_T @[Decode.scala 46:14]
    node _rename_info_0_op1_addr_T = asUInt(op1_sel) @[Decode.scala 47:41]
    node _rename_info_0_op1_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 48:25]
    node _rename_info_0_op1_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 49:25]
    node _rename_info_0_op1_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 50:25]
    node _rename_info_0_op1_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 51:25]
    node _rename_info_0_op1_addr_T_5 = eq(_rename_info_0_op1_addr_T_1, _rename_info_0_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op1_addr_T_6 = mux(_rename_info_0_op1_addr_T_5, rs, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_0_op1_addr_T_7 = eq(_rename_info_0_op1_addr_T_2, _rename_info_0_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op1_addr_T_8 = mux(_rename_info_0_op1_addr_T_7, rt, _rename_info_0_op1_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_0_op1_addr_T_9 = eq(_rename_info_0_op1_addr_T_3, _rename_info_0_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op1_addr_T_10 = mux(_rename_info_0_op1_addr_T_9, rd, _rename_info_0_op1_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_0_op1_addr_T_11 = eq(_rename_info_0_op1_addr_T_4, _rename_info_0_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op1_addr_T_12 = mux(_rename_info_0_op1_addr_T_11, UInt<5>("h01f"), _rename_info_0_op1_addr_T_10) @[Mux.scala 80:57]
    rename_info[0].op1_addr <= _rename_info_0_op1_addr_T_12 @[Decode.scala 47:14]
    node _rename_info_0_op2_addr_T = asUInt(op2_sel) @[Decode.scala 53:41]
    node _rename_info_0_op2_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 54:25]
    node _rename_info_0_op2_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 55:25]
    node _rename_info_0_op2_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 56:25]
    node _rename_info_0_op2_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 57:25]
    node _rename_info_0_op2_addr_T_5 = eq(_rename_info_0_op2_addr_T_1, _rename_info_0_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op2_addr_T_6 = mux(_rename_info_0_op2_addr_T_5, rs, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_0_op2_addr_T_7 = eq(_rename_info_0_op2_addr_T_2, _rename_info_0_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op2_addr_T_8 = mux(_rename_info_0_op2_addr_T_7, rt, _rename_info_0_op2_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_0_op2_addr_T_9 = eq(_rename_info_0_op2_addr_T_3, _rename_info_0_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op2_addr_T_10 = mux(_rename_info_0_op2_addr_T_9, rd, _rename_info_0_op2_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_0_op2_addr_T_11 = eq(_rename_info_0_op2_addr_T_4, _rename_info_0_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_op2_addr_T_12 = mux(_rename_info_0_op2_addr_T_11, UInt<5>("h01f"), _rename_info_0_op2_addr_T_10) @[Mux.scala 80:57]
    rename_info[0].op2_addr <= _rename_info_0_op2_addr_T_12 @[Decode.scala 53:14]
    node _rename_info_0_des_addr_T = asUInt(des_sel) @[Decode.scala 59:41]
    node _rename_info_0_des_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 60:25]
    node _rename_info_0_des_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 61:25]
    node _rename_info_0_des_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 62:25]
    node _rename_info_0_des_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 63:25]
    node _rename_info_0_des_addr_T_5 = eq(_rename_info_0_des_addr_T_1, _rename_info_0_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_des_addr_T_6 = mux(_rename_info_0_des_addr_T_5, rs, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_0_des_addr_T_7 = eq(_rename_info_0_des_addr_T_2, _rename_info_0_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_des_addr_T_8 = mux(_rename_info_0_des_addr_T_7, rt, _rename_info_0_des_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_0_des_addr_T_9 = eq(_rename_info_0_des_addr_T_3, _rename_info_0_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_des_addr_T_10 = mux(_rename_info_0_des_addr_T_9, rd, _rename_info_0_des_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_0_des_addr_T_11 = eq(_rename_info_0_des_addr_T_4, _rename_info_0_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_0_des_addr_T_12 = mux(_rename_info_0_des_addr_T_11, UInt<5>("h01f"), _rename_info_0_des_addr_T_10) @[Mux.scala 80:57]
    rename_info[0].des_addr <= _rename_info_0_des_addr_T_12 @[Decode.scala 59:14]
    node _rename_info_0_imm_data_T = asUInt(imm_sel) @[Decode.scala 65:41]
    node _rename_info_0_imm_data_T_1 = asUInt(UInt<1>("h01")) @[Decode.scala 66:28]
    node _rename_info_0_imm_data_T_2 = bits(rename_info_0_imm_data_lo, 15, 15) @[Decode.scala 66:56]
    node _rename_info_0_imm_data_T_3 = bits(_rename_info_0_imm_data_T_2, 0, 0) @[Bitwise.scala 72:15]
    node rename_info_0_imm_data_hi = mux(_rename_info_0_imm_data_T_3, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_0_imm_data_T_4 = cat(rename_info_0_imm_data_hi, rename_info_0_imm_data_lo) @[Cat.scala 30:58]
    node _rename_info_0_imm_data_T_5 = asUInt(UInt<1>("h00")) @[Decode.scala 67:28]
    node rename_info_0_imm_data_hi_1 = mux(UInt<1>("h00"), UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_0_imm_data_T_6 = cat(rename_info_0_imm_data_hi_1, rename_info_0_imm_data_lo) @[Cat.scala 30:58]
    node _rename_info_0_imm_data_T_7 = asUInt(UInt<2>("h02")) @[Decode.scala 68:26]
    node rename_info_0_imm_data_hi_2 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_0_imm_data_T_8 = cat(rename_info_0_imm_data_hi_2, rename_info_0_imm_data_lo_2) @[Cat.scala 30:58]
    node _rename_info_0_imm_data_T_9 = asUInt(UInt<2>("h03")) @[Decode.scala 69:35]
    node rename_info_0_imm_data_hi_3 = mux(UInt<1>("h00"), UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_0_imm_data_T_10 = cat(rename_info_0_imm_data_hi_3, rename_info_0_imm_data_lo_1) @[Cat.scala 30:58]
    node _rename_info_0_imm_data_T_11 = eq(_rename_info_0_imm_data_T_1, _rename_info_0_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_0_imm_data_T_12 = mux(_rename_info_0_imm_data_T_11, _rename_info_0_imm_data_T_4, UInt<32>("h00")) @[Mux.scala 80:57]
    node _rename_info_0_imm_data_T_13 = eq(_rename_info_0_imm_data_T_5, _rename_info_0_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_0_imm_data_T_14 = mux(_rename_info_0_imm_data_T_13, _rename_info_0_imm_data_T_6, _rename_info_0_imm_data_T_12) @[Mux.scala 80:57]
    node _rename_info_0_imm_data_T_15 = eq(_rename_info_0_imm_data_T_7, _rename_info_0_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_0_imm_data_T_16 = mux(_rename_info_0_imm_data_T_15, _rename_info_0_imm_data_T_8, _rename_info_0_imm_data_T_14) @[Mux.scala 80:57]
    node _rename_info_0_imm_data_T_17 = eq(_rename_info_0_imm_data_T_9, _rename_info_0_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_0_imm_data_T_18 = mux(_rename_info_0_imm_data_T_17, _rename_info_0_imm_data_T_10, _rename_info_0_imm_data_T_16) @[Mux.scala 80:57]
    rename_info[0].imm_data <= _rename_info_0_imm_data_T_18 @[Decode.scala 65:14]
    wire imm_sel_1 : UInt<3> @[Decode.scala 25:23]
    wire op1_sel_1 : UInt<3> @[Decode.scala 26:23]
    wire op2_sel_1 : UInt<3> @[Decode.scala 27:23]
    wire des_sel_1 : UInt<3> @[Decode.scala 28:23]
    node _decoder_T_572 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_573 = eq(UInt<6>("h020"), _decoder_T_572) @[Lookup.scala 31:38]
    node _decoder_T_574 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_575 = eq(UInt<30>("h020000000"), _decoder_T_574) @[Lookup.scala 31:38]
    node _decoder_T_576 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_577 = eq(UInt<6>("h021"), _decoder_T_576) @[Lookup.scala 31:38]
    node _decoder_T_578 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_579 = eq(UInt<30>("h024000000"), _decoder_T_578) @[Lookup.scala 31:38]
    node _decoder_T_580 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_581 = eq(UInt<6>("h022"), _decoder_T_580) @[Lookup.scala 31:38]
    node _decoder_T_582 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_583 = eq(UInt<6>("h023"), _decoder_T_582) @[Lookup.scala 31:38]
    node _decoder_T_584 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_585 = eq(UInt<6>("h02a"), _decoder_T_584) @[Lookup.scala 31:38]
    node _decoder_T_586 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_587 = eq(UInt<30>("h028000000"), _decoder_T_586) @[Lookup.scala 31:38]
    node _decoder_T_588 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_589 = eq(UInt<6>("h02b"), _decoder_T_588) @[Lookup.scala 31:38]
    node _decoder_T_590 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_591 = eq(UInt<30>("h02c000000"), _decoder_T_590) @[Lookup.scala 31:38]
    node _decoder_T_592 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_593 = eq(UInt<31>("h070000002"), _decoder_T_592) @[Lookup.scala 31:38]
    node _decoder_T_594 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_595 = eq(UInt<5>("h01a"), _decoder_T_594) @[Lookup.scala 31:38]
    node _decoder_T_596 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_597 = eq(UInt<5>("h01b"), _decoder_T_596) @[Lookup.scala 31:38]
    node _decoder_T_598 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_599 = eq(UInt<5>("h018"), _decoder_T_598) @[Lookup.scala 31:38]
    node _decoder_T_600 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc00ffff")) @[Lookup.scala 31:38]
    node _decoder_T_601 = eq(UInt<5>("h019"), _decoder_T_600) @[Lookup.scala 31:38]
    node _decoder_T_602 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffff07ff")) @[Lookup.scala 31:38]
    node _decoder_T_603 = eq(UInt<5>("h010"), _decoder_T_602) @[Lookup.scala 31:38]
    node _decoder_T_604 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffff07ff")) @[Lookup.scala 31:38]
    node _decoder_T_605 = eq(UInt<5>("h012"), _decoder_T_604) @[Lookup.scala 31:38]
    node _decoder_T_606 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_607 = eq(UInt<5>("h011"), _decoder_T_606) @[Lookup.scala 31:38]
    node _decoder_T_608 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_609 = eq(UInt<5>("h013"), _decoder_T_608) @[Lookup.scala 31:38]
    node _decoder_T_610 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_611 = eq(UInt<6>("h024"), _decoder_T_610) @[Lookup.scala 31:38]
    node _decoder_T_612 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_613 = eq(UInt<30>("h030000000"), _decoder_T_612) @[Lookup.scala 31:38]
    node _decoder_T_614 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe00000")) @[Lookup.scala 31:38]
    node _decoder_T_615 = eq(UInt<30>("h03c000000"), _decoder_T_614) @[Lookup.scala 31:38]
    node _decoder_T_616 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_617 = eq(UInt<6>("h027"), _decoder_T_616) @[Lookup.scala 31:38]
    node _decoder_T_618 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_619 = eq(UInt<6>("h025"), _decoder_T_618) @[Lookup.scala 31:38]
    node _decoder_T_620 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_621 = eq(UInt<30>("h034000000"), _decoder_T_620) @[Lookup.scala 31:38]
    node _decoder_T_622 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_623 = eq(UInt<6>("h026"), _decoder_T_622) @[Lookup.scala 31:38]
    node _decoder_T_624 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_625 = eq(UInt<30>("h038000000"), _decoder_T_624) @[Lookup.scala 31:38]
    node _decoder_T_626 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_627 = eq(UInt<3>("h04"), _decoder_T_626) @[Lookup.scala 31:38]
    node _decoder_T_628 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_629 = eq(UInt<1>("h00"), _decoder_T_628) @[Lookup.scala 31:38]
    node _decoder_T_630 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_631 = eq(UInt<3>("h07"), _decoder_T_630) @[Lookup.scala 31:38]
    node _decoder_T_632 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_633 = eq(UInt<2>("h03"), _decoder_T_632) @[Lookup.scala 31:38]
    node _decoder_T_634 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc0007ff")) @[Lookup.scala 31:38]
    node _decoder_T_635 = eq(UInt<3>("h06"), _decoder_T_634) @[Lookup.scala 31:38]
    node _decoder_T_636 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe0003f")) @[Lookup.scala 31:38]
    node _decoder_T_637 = eq(UInt<2>("h02"), _decoder_T_636) @[Lookup.scala 31:38]
    node _decoder_T_638 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_639 = eq(UInt<29>("h010000000"), _decoder_T_638) @[Lookup.scala 31:38]
    node _decoder_T_640 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_641 = eq(UInt<29>("h014000000"), _decoder_T_640) @[Lookup.scala 31:38]
    node _decoder_T_642 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_643 = eq(UInt<27>("h04010000"), _decoder_T_642) @[Lookup.scala 31:38]
    node _decoder_T_644 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_645 = eq(UInt<29>("h01c000000"), _decoder_T_644) @[Lookup.scala 31:38]
    node _decoder_T_646 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_647 = eq(UInt<29>("h018000000"), _decoder_T_646) @[Lookup.scala 31:38]
    node _decoder_T_648 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_649 = eq(UInt<27>("h04000000"), _decoder_T_648) @[Lookup.scala 31:38]
    node _decoder_T_650 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_651 = eq(UInt<27>("h04010000"), _decoder_T_650) @[Lookup.scala 31:38]
    node _decoder_T_652 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f0000")) @[Lookup.scala 31:38]
    node _decoder_T_653 = eq(UInt<29>("h018000000"), _decoder_T_652) @[Lookup.scala 31:38]
    node _decoder_T_654 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_655 = eq(UInt<28>("h08000000"), _decoder_T_654) @[Lookup.scala 31:38]
    node _decoder_T_656 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_657 = eq(UInt<28>("h0c000000"), _decoder_T_656) @[Lookup.scala 31:38]
    node _decoder_T_658 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1fffff")) @[Lookup.scala 31:38]
    node _decoder_T_659 = eq(UInt<4>("h08"), _decoder_T_658) @[Lookup.scala 31:38]
    node _decoder_T_660 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc1f07ff")) @[Lookup.scala 31:38]
    node _decoder_T_661 = eq(UInt<4>("h09"), _decoder_T_660) @[Lookup.scala 31:38]
    node _decoder_T_662 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _decoder_T_663 = eq(UInt<4>("h0c"), _decoder_T_662) @[Lookup.scala 31:38]
    node _decoder_T_664 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc00003f")) @[Lookup.scala 31:38]
    node _decoder_T_665 = eq(UInt<4>("h0d"), _decoder_T_664) @[Lookup.scala 31:38]
    node _decoder_T_666 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _decoder_T_667 = eq(UInt<31>("h042000018"), _decoder_T_666) @[Lookup.scala 31:38]
    node _decoder_T_668 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe007ff")) @[Lookup.scala 31:38]
    node _decoder_T_669 = eq(UInt<31>("h040000000"), _decoder_T_668) @[Lookup.scala 31:38]
    node _decoder_T_670 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0ffe007ff")) @[Lookup.scala 31:38]
    node _decoder_T_671 = eq(UInt<31>("h040800000"), _decoder_T_670) @[Lookup.scala 31:38]
    node _decoder_T_672 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_673 = eq(UInt<32>("h080000000"), _decoder_T_672) @[Lookup.scala 31:38]
    node _decoder_T_674 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_675 = eq(UInt<32>("h084000000"), _decoder_T_674) @[Lookup.scala 31:38]
    node _decoder_T_676 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_677 = eq(UInt<32>("h08c000000"), _decoder_T_676) @[Lookup.scala 31:38]
    node _decoder_T_678 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_679 = eq(UInt<32>("h090000000"), _decoder_T_678) @[Lookup.scala 31:38]
    node _decoder_T_680 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_681 = eq(UInt<32>("h094000000"), _decoder_T_680) @[Lookup.scala 31:38]
    node _decoder_T_682 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_683 = eq(UInt<32>("h0a0000000"), _decoder_T_682) @[Lookup.scala 31:38]
    node _decoder_T_684 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_685 = eq(UInt<32>("h0a4000000"), _decoder_T_684) @[Lookup.scala 31:38]
    node _decoder_T_686 = and(io.fb_inst_bank.bits.data[1].inst, UInt<32>("h0fc000000")) @[Lookup.scala 31:38]
    node _decoder_T_687 = eq(UInt<32>("h0ac000000"), _decoder_T_686) @[Lookup.scala 31:38]
    node _decoder_T_688 = mux(_decoder_T_687, UInt<6>("h024"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_689 = mux(_decoder_T_685, UInt<6>("h025"), _decoder_T_688) @[Lookup.scala 33:37]
    node _decoder_T_690 = mux(_decoder_T_683, UInt<6>("h026"), _decoder_T_689) @[Lookup.scala 33:37]
    node _decoder_T_691 = mux(_decoder_T_681, UInt<6>("h029"), _decoder_T_690) @[Lookup.scala 33:37]
    node _decoder_T_692 = mux(_decoder_T_679, UInt<6>("h02b"), _decoder_T_691) @[Lookup.scala 33:37]
    node _decoder_T_693 = mux(_decoder_T_677, UInt<6>("h027"), _decoder_T_692) @[Lookup.scala 33:37]
    node _decoder_T_694 = mux(_decoder_T_675, UInt<6>("h028"), _decoder_T_693) @[Lookup.scala 33:37]
    node _decoder_T_695 = mux(_decoder_T_673, UInt<6>("h02a"), _decoder_T_694) @[Lookup.scala 33:37]
    node _decoder_T_696 = mux(_decoder_T_671, UInt<6>("h02c"), _decoder_T_695) @[Lookup.scala 33:37]
    node _decoder_T_697 = mux(_decoder_T_669, UInt<6>("h02d"), _decoder_T_696) @[Lookup.scala 33:37]
    node _decoder_T_698 = mux(_decoder_T_667, UInt<6>("h02f"), _decoder_T_697) @[Lookup.scala 33:37]
    node _decoder_T_699 = mux(_decoder_T_665, UInt<6>("h030"), _decoder_T_698) @[Lookup.scala 33:37]
    node _decoder_T_700 = mux(_decoder_T_663, UInt<6>("h02e"), _decoder_T_699) @[Lookup.scala 33:37]
    node _decoder_T_701 = mux(_decoder_T_661, UInt<5>("h01b"), _decoder_T_700) @[Lookup.scala 33:37]
    node _decoder_T_702 = mux(_decoder_T_659, UInt<5>("h01a"), _decoder_T_701) @[Lookup.scala 33:37]
    node _decoder_T_703 = mux(_decoder_T_657, UInt<5>("h019"), _decoder_T_702) @[Lookup.scala 33:37]
    node _decoder_T_704 = mux(_decoder_T_655, UInt<5>("h018"), _decoder_T_703) @[Lookup.scala 33:37]
    node _decoder_T_705 = mux(_decoder_T_653, UInt<6>("h023"), _decoder_T_704) @[Lookup.scala 33:37]
    node _decoder_T_706 = mux(_decoder_T_651, UInt<6>("h022"), _decoder_T_705) @[Lookup.scala 33:37]
    node _decoder_T_707 = mux(_decoder_T_649, UInt<6>("h020"), _decoder_T_706) @[Lookup.scala 33:37]
    node _decoder_T_708 = mux(_decoder_T_647, UInt<5>("h01e"), _decoder_T_707) @[Lookup.scala 33:37]
    node _decoder_T_709 = mux(_decoder_T_645, UInt<5>("h01f"), _decoder_T_708) @[Lookup.scala 33:37]
    node _decoder_T_710 = mux(_decoder_T_643, UInt<6>("h021"), _decoder_T_709) @[Lookup.scala 33:37]
    node _decoder_T_711 = mux(_decoder_T_641, UInt<5>("h01d"), _decoder_T_710) @[Lookup.scala 33:37]
    node _decoder_T_712 = mux(_decoder_T_639, UInt<5>("h01c"), _decoder_T_711) @[Lookup.scala 33:37]
    node _decoder_T_713 = mux(_decoder_T_637, UInt<3>("h06"), _decoder_T_712) @[Lookup.scala 33:37]
    node _decoder_T_714 = mux(_decoder_T_635, UInt<3>("h06"), _decoder_T_713) @[Lookup.scala 33:37]
    node _decoder_T_715 = mux(_decoder_T_633, UInt<3>("h07"), _decoder_T_714) @[Lookup.scala 33:37]
    node _decoder_T_716 = mux(_decoder_T_631, UInt<3>("h07"), _decoder_T_715) @[Lookup.scala 33:37]
    node _decoder_T_717 = mux(_decoder_T_629, UInt<3>("h05"), _decoder_T_716) @[Lookup.scala 33:37]
    node _decoder_T_718 = mux(_decoder_T_627, UInt<3>("h05"), _decoder_T_717) @[Lookup.scala 33:37]
    node _decoder_T_719 = mux(_decoder_T_625, UInt<4>("h0a"), _decoder_T_718) @[Lookup.scala 33:37]
    node _decoder_T_720 = mux(_decoder_T_623, UInt<4>("h0a"), _decoder_T_719) @[Lookup.scala 33:37]
    node _decoder_T_721 = mux(_decoder_T_621, UInt<4>("h0b"), _decoder_T_720) @[Lookup.scala 33:37]
    node _decoder_T_722 = mux(_decoder_T_619, UInt<4>("h0b"), _decoder_T_721) @[Lookup.scala 33:37]
    node _decoder_T_723 = mux(_decoder_T_617, UInt<4>("h0e"), _decoder_T_722) @[Lookup.scala 33:37]
    node _decoder_T_724 = mux(_decoder_T_615, UInt<4>("h0d"), _decoder_T_723) @[Lookup.scala 33:37]
    node _decoder_T_725 = mux(_decoder_T_613, UInt<4>("h0c"), _decoder_T_724) @[Lookup.scala 33:37]
    node _decoder_T_726 = mux(_decoder_T_611, UInt<4>("h0c"), _decoder_T_725) @[Lookup.scala 33:37]
    node _decoder_T_727 = mux(_decoder_T_609, UInt<5>("h017"), _decoder_T_726) @[Lookup.scala 33:37]
    node _decoder_T_728 = mux(_decoder_T_607, UInt<5>("h016"), _decoder_T_727) @[Lookup.scala 33:37]
    node _decoder_T_729 = mux(_decoder_T_605, UInt<5>("h015"), _decoder_T_728) @[Lookup.scala 33:37]
    node _decoder_T_730 = mux(_decoder_T_603, UInt<5>("h014"), _decoder_T_729) @[Lookup.scala 33:37]
    node _decoder_T_731 = mux(_decoder_T_601, UInt<5>("h011"), _decoder_T_730) @[Lookup.scala 33:37]
    node _decoder_T_732 = mux(_decoder_T_599, UInt<5>("h010"), _decoder_T_731) @[Lookup.scala 33:37]
    node _decoder_T_733 = mux(_decoder_T_597, UInt<5>("h013"), _decoder_T_732) @[Lookup.scala 33:37]
    node _decoder_T_734 = mux(_decoder_T_595, UInt<5>("h012"), _decoder_T_733) @[Lookup.scala 33:37]
    node _decoder_T_735 = mux(_decoder_T_593, UInt<4>("h0f"), _decoder_T_734) @[Lookup.scala 33:37]
    node _decoder_T_736 = mux(_decoder_T_591, UInt<4>("h09"), _decoder_T_735) @[Lookup.scala 33:37]
    node _decoder_T_737 = mux(_decoder_T_589, UInt<4>("h09"), _decoder_T_736) @[Lookup.scala 33:37]
    node _decoder_T_738 = mux(_decoder_T_587, UInt<4>("h08"), _decoder_T_737) @[Lookup.scala 33:37]
    node _decoder_T_739 = mux(_decoder_T_585, UInt<4>("h08"), _decoder_T_738) @[Lookup.scala 33:37]
    node _decoder_T_740 = mux(_decoder_T_583, UInt<3>("h04"), _decoder_T_739) @[Lookup.scala 33:37]
    node _decoder_T_741 = mux(_decoder_T_581, UInt<2>("h03"), _decoder_T_740) @[Lookup.scala 33:37]
    node _decoder_T_742 = mux(_decoder_T_579, UInt<2>("h02"), _decoder_T_741) @[Lookup.scala 33:37]
    node _decoder_T_743 = mux(_decoder_T_577, UInt<2>("h02"), _decoder_T_742) @[Lookup.scala 33:37]
    node _decoder_T_744 = mux(_decoder_T_575, UInt<1>("h01"), _decoder_T_743) @[Lookup.scala 33:37]
    node decoder_0_1 = mux(_decoder_T_573, UInt<1>("h01"), _decoder_T_744) @[Lookup.scala 33:37]
    node _decoder_T_745 = mux(_decoder_T_687, UInt<2>("h03"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_746 = mux(_decoder_T_685, UInt<2>("h03"), _decoder_T_745) @[Lookup.scala 33:37]
    node _decoder_T_747 = mux(_decoder_T_683, UInt<2>("h03"), _decoder_T_746) @[Lookup.scala 33:37]
    node _decoder_T_748 = mux(_decoder_T_681, UInt<2>("h03"), _decoder_T_747) @[Lookup.scala 33:37]
    node _decoder_T_749 = mux(_decoder_T_679, UInt<2>("h03"), _decoder_T_748) @[Lookup.scala 33:37]
    node _decoder_T_750 = mux(_decoder_T_677, UInt<2>("h03"), _decoder_T_749) @[Lookup.scala 33:37]
    node _decoder_T_751 = mux(_decoder_T_675, UInt<2>("h03"), _decoder_T_750) @[Lookup.scala 33:37]
    node _decoder_T_752 = mux(_decoder_T_673, UInt<2>("h03"), _decoder_T_751) @[Lookup.scala 33:37]
    node _decoder_T_753 = mux(_decoder_T_671, UInt<2>("h02"), _decoder_T_752) @[Lookup.scala 33:37]
    node _decoder_T_754 = mux(_decoder_T_669, UInt<2>("h02"), _decoder_T_753) @[Lookup.scala 33:37]
    node _decoder_T_755 = mux(_decoder_T_667, UInt<1>("h00"), _decoder_T_754) @[Lookup.scala 33:37]
    node _decoder_T_756 = mux(_decoder_T_665, UInt<1>("h00"), _decoder_T_755) @[Lookup.scala 33:37]
    node _decoder_T_757 = mux(_decoder_T_663, UInt<1>("h00"), _decoder_T_756) @[Lookup.scala 33:37]
    node _decoder_T_758 = mux(_decoder_T_661, UInt<3>("h05"), _decoder_T_757) @[Lookup.scala 33:37]
    node _decoder_T_759 = mux(_decoder_T_659, UInt<3>("h05"), _decoder_T_758) @[Lookup.scala 33:37]
    node _decoder_T_760 = mux(_decoder_T_657, UInt<3>("h05"), _decoder_T_759) @[Lookup.scala 33:37]
    node _decoder_T_761 = mux(_decoder_T_655, UInt<3>("h05"), _decoder_T_760) @[Lookup.scala 33:37]
    node _decoder_T_762 = mux(_decoder_T_653, UInt<3>("h05"), _decoder_T_761) @[Lookup.scala 33:37]
    node _decoder_T_763 = mux(_decoder_T_651, UInt<3>("h05"), _decoder_T_762) @[Lookup.scala 33:37]
    node _decoder_T_764 = mux(_decoder_T_649, UInt<3>("h05"), _decoder_T_763) @[Lookup.scala 33:37]
    node _decoder_T_765 = mux(_decoder_T_647, UInt<3>("h05"), _decoder_T_764) @[Lookup.scala 33:37]
    node _decoder_T_766 = mux(_decoder_T_645, UInt<3>("h05"), _decoder_T_765) @[Lookup.scala 33:37]
    node _decoder_T_767 = mux(_decoder_T_643, UInt<3>("h05"), _decoder_T_766) @[Lookup.scala 33:37]
    node _decoder_T_768 = mux(_decoder_T_641, UInt<3>("h05"), _decoder_T_767) @[Lookup.scala 33:37]
    node _decoder_T_769 = mux(_decoder_T_639, UInt<3>("h05"), _decoder_T_768) @[Lookup.scala 33:37]
    node _decoder_T_770 = mux(_decoder_T_637, UInt<1>("h01"), _decoder_T_769) @[Lookup.scala 33:37]
    node _decoder_T_771 = mux(_decoder_T_635, UInt<1>("h01"), _decoder_T_770) @[Lookup.scala 33:37]
    node _decoder_T_772 = mux(_decoder_T_633, UInt<1>("h01"), _decoder_T_771) @[Lookup.scala 33:37]
    node _decoder_T_773 = mux(_decoder_T_631, UInt<1>("h01"), _decoder_T_772) @[Lookup.scala 33:37]
    node _decoder_T_774 = mux(_decoder_T_629, UInt<1>("h01"), _decoder_T_773) @[Lookup.scala 33:37]
    node _decoder_T_775 = mux(_decoder_T_627, UInt<1>("h01"), _decoder_T_774) @[Lookup.scala 33:37]
    node _decoder_T_776 = mux(_decoder_T_625, UInt<1>("h01"), _decoder_T_775) @[Lookup.scala 33:37]
    node _decoder_T_777 = mux(_decoder_T_623, UInt<1>("h01"), _decoder_T_776) @[Lookup.scala 33:37]
    node _decoder_T_778 = mux(_decoder_T_621, UInt<1>("h01"), _decoder_T_777) @[Lookup.scala 33:37]
    node _decoder_T_779 = mux(_decoder_T_619, UInt<1>("h01"), _decoder_T_778) @[Lookup.scala 33:37]
    node _decoder_T_780 = mux(_decoder_T_617, UInt<1>("h01"), _decoder_T_779) @[Lookup.scala 33:37]
    node _decoder_T_781 = mux(_decoder_T_615, UInt<1>("h01"), _decoder_T_780) @[Lookup.scala 33:37]
    node _decoder_T_782 = mux(_decoder_T_613, UInt<1>("h01"), _decoder_T_781) @[Lookup.scala 33:37]
    node _decoder_T_783 = mux(_decoder_T_611, UInt<1>("h01"), _decoder_T_782) @[Lookup.scala 33:37]
    node _decoder_T_784 = mux(_decoder_T_609, UInt<3>("h04"), _decoder_T_783) @[Lookup.scala 33:37]
    node _decoder_T_785 = mux(_decoder_T_607, UInt<3>("h04"), _decoder_T_784) @[Lookup.scala 33:37]
    node _decoder_T_786 = mux(_decoder_T_605, UInt<3>("h04"), _decoder_T_785) @[Lookup.scala 33:37]
    node _decoder_T_787 = mux(_decoder_T_603, UInt<3>("h04"), _decoder_T_786) @[Lookup.scala 33:37]
    node _decoder_T_788 = mux(_decoder_T_601, UInt<3>("h04"), _decoder_T_787) @[Lookup.scala 33:37]
    node _decoder_T_789 = mux(_decoder_T_599, UInt<3>("h04"), _decoder_T_788) @[Lookup.scala 33:37]
    node _decoder_T_790 = mux(_decoder_T_597, UInt<3>("h04"), _decoder_T_789) @[Lookup.scala 33:37]
    node _decoder_T_791 = mux(_decoder_T_595, UInt<3>("h04"), _decoder_T_790) @[Lookup.scala 33:37]
    node _decoder_T_792 = mux(_decoder_T_593, UInt<3>("h04"), _decoder_T_791) @[Lookup.scala 33:37]
    node _decoder_T_793 = mux(_decoder_T_591, UInt<1>("h01"), _decoder_T_792) @[Lookup.scala 33:37]
    node _decoder_T_794 = mux(_decoder_T_589, UInt<1>("h01"), _decoder_T_793) @[Lookup.scala 33:37]
    node _decoder_T_795 = mux(_decoder_T_587, UInt<1>("h01"), _decoder_T_794) @[Lookup.scala 33:37]
    node _decoder_T_796 = mux(_decoder_T_585, UInt<1>("h01"), _decoder_T_795) @[Lookup.scala 33:37]
    node _decoder_T_797 = mux(_decoder_T_583, UInt<1>("h01"), _decoder_T_796) @[Lookup.scala 33:37]
    node _decoder_T_798 = mux(_decoder_T_581, UInt<1>("h01"), _decoder_T_797) @[Lookup.scala 33:37]
    node _decoder_T_799 = mux(_decoder_T_579, UInt<1>("h01"), _decoder_T_798) @[Lookup.scala 33:37]
    node _decoder_T_800 = mux(_decoder_T_577, UInt<1>("h01"), _decoder_T_799) @[Lookup.scala 33:37]
    node _decoder_T_801 = mux(_decoder_T_575, UInt<1>("h01"), _decoder_T_800) @[Lookup.scala 33:37]
    node decoder_1_1 = mux(_decoder_T_573, UInt<1>("h01"), _decoder_T_801) @[Lookup.scala 33:37]
    node _decoder_T_802 = mux(_decoder_T_687, UInt<1>("h01"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_803 = mux(_decoder_T_685, UInt<1>("h01"), _decoder_T_802) @[Lookup.scala 33:37]
    node _decoder_T_804 = mux(_decoder_T_683, UInt<1>("h01"), _decoder_T_803) @[Lookup.scala 33:37]
    node _decoder_T_805 = mux(_decoder_T_681, UInt<1>("h01"), _decoder_T_804) @[Lookup.scala 33:37]
    node _decoder_T_806 = mux(_decoder_T_679, UInt<1>("h01"), _decoder_T_805) @[Lookup.scala 33:37]
    node _decoder_T_807 = mux(_decoder_T_677, UInt<1>("h01"), _decoder_T_806) @[Lookup.scala 33:37]
    node _decoder_T_808 = mux(_decoder_T_675, UInt<1>("h01"), _decoder_T_807) @[Lookup.scala 33:37]
    node _decoder_T_809 = mux(_decoder_T_673, UInt<1>("h01"), _decoder_T_808) @[Lookup.scala 33:37]
    node _decoder_T_810 = mux(_decoder_T_671, UInt<1>("h00"), _decoder_T_809) @[Lookup.scala 33:37]
    node _decoder_T_811 = mux(_decoder_T_669, UInt<1>("h00"), _decoder_T_810) @[Lookup.scala 33:37]
    node _decoder_T_812 = mux(_decoder_T_667, UInt<3>("h04"), _decoder_T_811) @[Lookup.scala 33:37]
    node _decoder_T_813 = mux(_decoder_T_665, UInt<3>("h04"), _decoder_T_812) @[Lookup.scala 33:37]
    node _decoder_T_814 = mux(_decoder_T_663, UInt<3>("h04"), _decoder_T_813) @[Lookup.scala 33:37]
    node _decoder_T_815 = mux(_decoder_T_661, UInt<3>("h04"), _decoder_T_814) @[Lookup.scala 33:37]
    node _decoder_T_816 = mux(_decoder_T_659, UInt<3>("h04"), _decoder_T_815) @[Lookup.scala 33:37]
    node _decoder_T_817 = mux(_decoder_T_657, UInt<2>("h03"), _decoder_T_816) @[Lookup.scala 33:37]
    node _decoder_T_818 = mux(_decoder_T_655, UInt<2>("h03"), _decoder_T_817) @[Lookup.scala 33:37]
    node _decoder_T_819 = mux(_decoder_T_653, UInt<1>("h01"), _decoder_T_818) @[Lookup.scala 33:37]
    node _decoder_T_820 = mux(_decoder_T_651, UInt<1>("h01"), _decoder_T_819) @[Lookup.scala 33:37]
    node _decoder_T_821 = mux(_decoder_T_649, UInt<1>("h01"), _decoder_T_820) @[Lookup.scala 33:37]
    node _decoder_T_822 = mux(_decoder_T_647, UInt<1>("h01"), _decoder_T_821) @[Lookup.scala 33:37]
    node _decoder_T_823 = mux(_decoder_T_645, UInt<1>("h01"), _decoder_T_822) @[Lookup.scala 33:37]
    node _decoder_T_824 = mux(_decoder_T_643, UInt<1>("h01"), _decoder_T_823) @[Lookup.scala 33:37]
    node _decoder_T_825 = mux(_decoder_T_641, UInt<1>("h01"), _decoder_T_824) @[Lookup.scala 33:37]
    node _decoder_T_826 = mux(_decoder_T_639, UInt<1>("h01"), _decoder_T_825) @[Lookup.scala 33:37]
    node _decoder_T_827 = mux(_decoder_T_637, UInt<2>("h02"), _decoder_T_826) @[Lookup.scala 33:37]
    node _decoder_T_828 = mux(_decoder_T_635, UInt<3>("h04"), _decoder_T_827) @[Lookup.scala 33:37]
    node _decoder_T_829 = mux(_decoder_T_633, UInt<2>("h02"), _decoder_T_828) @[Lookup.scala 33:37]
    node _decoder_T_830 = mux(_decoder_T_631, UInt<3>("h04"), _decoder_T_829) @[Lookup.scala 33:37]
    node _decoder_T_831 = mux(_decoder_T_629, UInt<2>("h02"), _decoder_T_830) @[Lookup.scala 33:37]
    node _decoder_T_832 = mux(_decoder_T_627, UInt<3>("h04"), _decoder_T_831) @[Lookup.scala 33:37]
    node _decoder_T_833 = mux(_decoder_T_625, UInt<1>("h00"), _decoder_T_832) @[Lookup.scala 33:37]
    node _decoder_T_834 = mux(_decoder_T_623, UInt<3>("h04"), _decoder_T_833) @[Lookup.scala 33:37]
    node _decoder_T_835 = mux(_decoder_T_621, UInt<1>("h00"), _decoder_T_834) @[Lookup.scala 33:37]
    node _decoder_T_836 = mux(_decoder_T_619, UInt<3>("h04"), _decoder_T_835) @[Lookup.scala 33:37]
    node _decoder_T_837 = mux(_decoder_T_617, UInt<3>("h04"), _decoder_T_836) @[Lookup.scala 33:37]
    node _decoder_T_838 = mux(_decoder_T_615, UInt<1>("h00"), _decoder_T_837) @[Lookup.scala 33:37]
    node _decoder_T_839 = mux(_decoder_T_613, UInt<1>("h00"), _decoder_T_838) @[Lookup.scala 33:37]
    node _decoder_T_840 = mux(_decoder_T_611, UInt<3>("h04"), _decoder_T_839) @[Lookup.scala 33:37]
    node _decoder_T_841 = mux(_decoder_T_609, UInt<3>("h04"), _decoder_T_840) @[Lookup.scala 33:37]
    node _decoder_T_842 = mux(_decoder_T_607, UInt<3>("h04"), _decoder_T_841) @[Lookup.scala 33:37]
    node _decoder_T_843 = mux(_decoder_T_605, UInt<3>("h04"), _decoder_T_842) @[Lookup.scala 33:37]
    node _decoder_T_844 = mux(_decoder_T_603, UInt<3>("h04"), _decoder_T_843) @[Lookup.scala 33:37]
    node _decoder_T_845 = mux(_decoder_T_601, UInt<3>("h04"), _decoder_T_844) @[Lookup.scala 33:37]
    node _decoder_T_846 = mux(_decoder_T_599, UInt<3>("h04"), _decoder_T_845) @[Lookup.scala 33:37]
    node _decoder_T_847 = mux(_decoder_T_597, UInt<3>("h04"), _decoder_T_846) @[Lookup.scala 33:37]
    node _decoder_T_848 = mux(_decoder_T_595, UInt<3>("h04"), _decoder_T_847) @[Lookup.scala 33:37]
    node _decoder_T_849 = mux(_decoder_T_593, UInt<3>("h04"), _decoder_T_848) @[Lookup.scala 33:37]
    node _decoder_T_850 = mux(_decoder_T_591, UInt<1>("h01"), _decoder_T_849) @[Lookup.scala 33:37]
    node _decoder_T_851 = mux(_decoder_T_589, UInt<3>("h04"), _decoder_T_850) @[Lookup.scala 33:37]
    node _decoder_T_852 = mux(_decoder_T_587, UInt<1>("h01"), _decoder_T_851) @[Lookup.scala 33:37]
    node _decoder_T_853 = mux(_decoder_T_585, UInt<3>("h04"), _decoder_T_852) @[Lookup.scala 33:37]
    node _decoder_T_854 = mux(_decoder_T_583, UInt<3>("h04"), _decoder_T_853) @[Lookup.scala 33:37]
    node _decoder_T_855 = mux(_decoder_T_581, UInt<3>("h04"), _decoder_T_854) @[Lookup.scala 33:37]
    node _decoder_T_856 = mux(_decoder_T_579, UInt<1>("h01"), _decoder_T_855) @[Lookup.scala 33:37]
    node _decoder_T_857 = mux(_decoder_T_577, UInt<3>("h04"), _decoder_T_856) @[Lookup.scala 33:37]
    node _decoder_T_858 = mux(_decoder_T_575, UInt<1>("h01"), _decoder_T_857) @[Lookup.scala 33:37]
    node decoder_2_1 = mux(_decoder_T_573, UInt<3>("h04"), _decoder_T_858) @[Lookup.scala 33:37]
    node _decoder_T_859 = mux(_decoder_T_687, UInt<1>("h00"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_860 = mux(_decoder_T_685, UInt<1>("h00"), _decoder_T_859) @[Lookup.scala 33:37]
    node _decoder_T_861 = mux(_decoder_T_683, UInt<1>("h00"), _decoder_T_860) @[Lookup.scala 33:37]
    node _decoder_T_862 = mux(_decoder_T_681, UInt<1>("h00"), _decoder_T_861) @[Lookup.scala 33:37]
    node _decoder_T_863 = mux(_decoder_T_679, UInt<1>("h00"), _decoder_T_862) @[Lookup.scala 33:37]
    node _decoder_T_864 = mux(_decoder_T_677, UInt<1>("h00"), _decoder_T_863) @[Lookup.scala 33:37]
    node _decoder_T_865 = mux(_decoder_T_675, UInt<1>("h00"), _decoder_T_864) @[Lookup.scala 33:37]
    node _decoder_T_866 = mux(_decoder_T_673, UInt<1>("h00"), _decoder_T_865) @[Lookup.scala 33:37]
    node _decoder_T_867 = mux(_decoder_T_671, UInt<1>("h01"), _decoder_T_866) @[Lookup.scala 33:37]
    node _decoder_T_868 = mux(_decoder_T_669, UInt<2>("h02"), _decoder_T_867) @[Lookup.scala 33:37]
    node _decoder_T_869 = mux(_decoder_T_667, UInt<3>("h04"), _decoder_T_868) @[Lookup.scala 33:37]
    node _decoder_T_870 = mux(_decoder_T_665, UInt<3>("h04"), _decoder_T_869) @[Lookup.scala 33:37]
    node _decoder_T_871 = mux(_decoder_T_663, UInt<3>("h04"), _decoder_T_870) @[Lookup.scala 33:37]
    node _decoder_T_872 = mux(_decoder_T_661, UInt<1>("h00"), _decoder_T_871) @[Lookup.scala 33:37]
    node _decoder_T_873 = mux(_decoder_T_659, UInt<1>("h00"), _decoder_T_872) @[Lookup.scala 33:37]
    node _decoder_T_874 = mux(_decoder_T_657, UInt<3>("h04"), _decoder_T_873) @[Lookup.scala 33:37]
    node _decoder_T_875 = mux(_decoder_T_655, UInt<3>("h04"), _decoder_T_874) @[Lookup.scala 33:37]
    node _decoder_T_876 = mux(_decoder_T_653, UInt<1>("h00"), _decoder_T_875) @[Lookup.scala 33:37]
    node _decoder_T_877 = mux(_decoder_T_651, UInt<1>("h00"), _decoder_T_876) @[Lookup.scala 33:37]
    node _decoder_T_878 = mux(_decoder_T_649, UInt<1>("h00"), _decoder_T_877) @[Lookup.scala 33:37]
    node _decoder_T_879 = mux(_decoder_T_647, UInt<1>("h00"), _decoder_T_878) @[Lookup.scala 33:37]
    node _decoder_T_880 = mux(_decoder_T_645, UInt<1>("h00"), _decoder_T_879) @[Lookup.scala 33:37]
    node _decoder_T_881 = mux(_decoder_T_643, UInt<1>("h00"), _decoder_T_880) @[Lookup.scala 33:37]
    node _decoder_T_882 = mux(_decoder_T_641, UInt<1>("h00"), _decoder_T_881) @[Lookup.scala 33:37]
    node _decoder_T_883 = mux(_decoder_T_639, UInt<1>("h00"), _decoder_T_882) @[Lookup.scala 33:37]
    node _decoder_T_884 = mux(_decoder_T_637, UInt<1>("h01"), _decoder_T_883) @[Lookup.scala 33:37]
    node _decoder_T_885 = mux(_decoder_T_635, UInt<1>("h01"), _decoder_T_884) @[Lookup.scala 33:37]
    node _decoder_T_886 = mux(_decoder_T_633, UInt<1>("h01"), _decoder_T_885) @[Lookup.scala 33:37]
    node _decoder_T_887 = mux(_decoder_T_631, UInt<1>("h01"), _decoder_T_886) @[Lookup.scala 33:37]
    node _decoder_T_888 = mux(_decoder_T_629, UInt<1>("h01"), _decoder_T_887) @[Lookup.scala 33:37]
    node _decoder_T_889 = mux(_decoder_T_627, UInt<1>("h01"), _decoder_T_888) @[Lookup.scala 33:37]
    node _decoder_T_890 = mux(_decoder_T_625, UInt<1>("h00"), _decoder_T_889) @[Lookup.scala 33:37]
    node _decoder_T_891 = mux(_decoder_T_623, UInt<1>("h00"), _decoder_T_890) @[Lookup.scala 33:37]
    node _decoder_T_892 = mux(_decoder_T_621, UInt<1>("h00"), _decoder_T_891) @[Lookup.scala 33:37]
    node _decoder_T_893 = mux(_decoder_T_619, UInt<1>("h00"), _decoder_T_892) @[Lookup.scala 33:37]
    node _decoder_T_894 = mux(_decoder_T_617, UInt<1>("h00"), _decoder_T_893) @[Lookup.scala 33:37]
    node _decoder_T_895 = mux(_decoder_T_615, UInt<3>("h04"), _decoder_T_894) @[Lookup.scala 33:37]
    node _decoder_T_896 = mux(_decoder_T_613, UInt<1>("h00"), _decoder_T_895) @[Lookup.scala 33:37]
    node _decoder_T_897 = mux(_decoder_T_611, UInt<1>("h00"), _decoder_T_896) @[Lookup.scala 33:37]
    node _decoder_T_898 = mux(_decoder_T_609, UInt<1>("h00"), _decoder_T_897) @[Lookup.scala 33:37]
    node _decoder_T_899 = mux(_decoder_T_607, UInt<1>("h00"), _decoder_T_898) @[Lookup.scala 33:37]
    node _decoder_T_900 = mux(_decoder_T_605, UInt<3>("h04"), _decoder_T_899) @[Lookup.scala 33:37]
    node _decoder_T_901 = mux(_decoder_T_603, UInt<3>("h04"), _decoder_T_900) @[Lookup.scala 33:37]
    node _decoder_T_902 = mux(_decoder_T_601, UInt<1>("h00"), _decoder_T_901) @[Lookup.scala 33:37]
    node _decoder_T_903 = mux(_decoder_T_599, UInt<1>("h00"), _decoder_T_902) @[Lookup.scala 33:37]
    node _decoder_T_904 = mux(_decoder_T_597, UInt<1>("h00"), _decoder_T_903) @[Lookup.scala 33:37]
    node _decoder_T_905 = mux(_decoder_T_595, UInt<1>("h00"), _decoder_T_904) @[Lookup.scala 33:37]
    node _decoder_T_906 = mux(_decoder_T_593, UInt<1>("h00"), _decoder_T_905) @[Lookup.scala 33:37]
    node _decoder_T_907 = mux(_decoder_T_591, UInt<1>("h00"), _decoder_T_906) @[Lookup.scala 33:37]
    node _decoder_T_908 = mux(_decoder_T_589, UInt<1>("h00"), _decoder_T_907) @[Lookup.scala 33:37]
    node _decoder_T_909 = mux(_decoder_T_587, UInt<1>("h00"), _decoder_T_908) @[Lookup.scala 33:37]
    node _decoder_T_910 = mux(_decoder_T_585, UInt<1>("h00"), _decoder_T_909) @[Lookup.scala 33:37]
    node _decoder_T_911 = mux(_decoder_T_583, UInt<1>("h00"), _decoder_T_910) @[Lookup.scala 33:37]
    node _decoder_T_912 = mux(_decoder_T_581, UInt<1>("h00"), _decoder_T_911) @[Lookup.scala 33:37]
    node _decoder_T_913 = mux(_decoder_T_579, UInt<1>("h00"), _decoder_T_912) @[Lookup.scala 33:37]
    node _decoder_T_914 = mux(_decoder_T_577, UInt<1>("h00"), _decoder_T_913) @[Lookup.scala 33:37]
    node _decoder_T_915 = mux(_decoder_T_575, UInt<1>("h00"), _decoder_T_914) @[Lookup.scala 33:37]
    node decoder_3_1 = mux(_decoder_T_573, UInt<1>("h00"), _decoder_T_915) @[Lookup.scala 33:37]
    node _decoder_T_916 = mux(_decoder_T_687, UInt<1>("h01"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_917 = mux(_decoder_T_685, UInt<1>("h01"), _decoder_T_916) @[Lookup.scala 33:37]
    node _decoder_T_918 = mux(_decoder_T_683, UInt<1>("h01"), _decoder_T_917) @[Lookup.scala 33:37]
    node _decoder_T_919 = mux(_decoder_T_681, UInt<3>("h04"), _decoder_T_918) @[Lookup.scala 33:37]
    node _decoder_T_920 = mux(_decoder_T_679, UInt<3>("h04"), _decoder_T_919) @[Lookup.scala 33:37]
    node _decoder_T_921 = mux(_decoder_T_677, UInt<3>("h04"), _decoder_T_920) @[Lookup.scala 33:37]
    node _decoder_T_922 = mux(_decoder_T_675, UInt<3>("h04"), _decoder_T_921) @[Lookup.scala 33:37]
    node _decoder_T_923 = mux(_decoder_T_673, UInt<3>("h04"), _decoder_T_922) @[Lookup.scala 33:37]
    node _decoder_T_924 = mux(_decoder_T_671, UInt<2>("h02"), _decoder_T_923) @[Lookup.scala 33:37]
    node _decoder_T_925 = mux(_decoder_T_669, UInt<3>("h04"), _decoder_T_924) @[Lookup.scala 33:37]
    node _decoder_T_926 = mux(_decoder_T_667, UInt<3>("h04"), _decoder_T_925) @[Lookup.scala 33:37]
    node _decoder_T_927 = mux(_decoder_T_665, UInt<3>("h04"), _decoder_T_926) @[Lookup.scala 33:37]
    node _decoder_T_928 = mux(_decoder_T_663, UInt<3>("h04"), _decoder_T_927) @[Lookup.scala 33:37]
    node _decoder_T_929 = mux(_decoder_T_661, UInt<3>("h04"), _decoder_T_928) @[Lookup.scala 33:37]
    node _decoder_T_930 = mux(_decoder_T_659, UInt<3>("h04"), _decoder_T_929) @[Lookup.scala 33:37]
    node _decoder_T_931 = mux(_decoder_T_657, UInt<3>("h04"), _decoder_T_930) @[Lookup.scala 33:37]
    node _decoder_T_932 = mux(_decoder_T_655, UInt<3>("h04"), _decoder_T_931) @[Lookup.scala 33:37]
    node _decoder_T_933 = mux(_decoder_T_653, UInt<3>("h04"), _decoder_T_932) @[Lookup.scala 33:37]
    node _decoder_T_934 = mux(_decoder_T_651, UInt<3>("h04"), _decoder_T_933) @[Lookup.scala 33:37]
    node _decoder_T_935 = mux(_decoder_T_649, UInt<3>("h04"), _decoder_T_934) @[Lookup.scala 33:37]
    node _decoder_T_936 = mux(_decoder_T_647, UInt<3>("h04"), _decoder_T_935) @[Lookup.scala 33:37]
    node _decoder_T_937 = mux(_decoder_T_645, UInt<3>("h04"), _decoder_T_936) @[Lookup.scala 33:37]
    node _decoder_T_938 = mux(_decoder_T_643, UInt<3>("h04"), _decoder_T_937) @[Lookup.scala 33:37]
    node _decoder_T_939 = mux(_decoder_T_641, UInt<1>("h01"), _decoder_T_938) @[Lookup.scala 33:37]
    node _decoder_T_940 = mux(_decoder_T_639, UInt<1>("h01"), _decoder_T_939) @[Lookup.scala 33:37]
    node _decoder_T_941 = mux(_decoder_T_637, UInt<3>("h04"), _decoder_T_940) @[Lookup.scala 33:37]
    node _decoder_T_942 = mux(_decoder_T_635, UInt<1>("h00"), _decoder_T_941) @[Lookup.scala 33:37]
    node _decoder_T_943 = mux(_decoder_T_633, UInt<3>("h04"), _decoder_T_942) @[Lookup.scala 33:37]
    node _decoder_T_944 = mux(_decoder_T_631, UInt<1>("h00"), _decoder_T_943) @[Lookup.scala 33:37]
    node _decoder_T_945 = mux(_decoder_T_629, UInt<3>("h04"), _decoder_T_944) @[Lookup.scala 33:37]
    node _decoder_T_946 = mux(_decoder_T_627, UInt<1>("h00"), _decoder_T_945) @[Lookup.scala 33:37]
    node _decoder_T_947 = mux(_decoder_T_625, UInt<3>("h04"), _decoder_T_946) @[Lookup.scala 33:37]
    node _decoder_T_948 = mux(_decoder_T_623, UInt<1>("h01"), _decoder_T_947) @[Lookup.scala 33:37]
    node _decoder_T_949 = mux(_decoder_T_621, UInt<3>("h04"), _decoder_T_948) @[Lookup.scala 33:37]
    node _decoder_T_950 = mux(_decoder_T_619, UInt<1>("h01"), _decoder_T_949) @[Lookup.scala 33:37]
    node _decoder_T_951 = mux(_decoder_T_617, UInt<1>("h01"), _decoder_T_950) @[Lookup.scala 33:37]
    node _decoder_T_952 = mux(_decoder_T_615, UInt<3>("h04"), _decoder_T_951) @[Lookup.scala 33:37]
    node _decoder_T_953 = mux(_decoder_T_613, UInt<3>("h04"), _decoder_T_952) @[Lookup.scala 33:37]
    node _decoder_T_954 = mux(_decoder_T_611, UInt<1>("h01"), _decoder_T_953) @[Lookup.scala 33:37]
    node _decoder_T_955 = mux(_decoder_T_609, UInt<3>("h04"), _decoder_T_954) @[Lookup.scala 33:37]
    node _decoder_T_956 = mux(_decoder_T_607, UInt<3>("h04"), _decoder_T_955) @[Lookup.scala 33:37]
    node _decoder_T_957 = mux(_decoder_T_605, UInt<3>("h04"), _decoder_T_956) @[Lookup.scala 33:37]
    node _decoder_T_958 = mux(_decoder_T_603, UInt<3>("h04"), _decoder_T_957) @[Lookup.scala 33:37]
    node _decoder_T_959 = mux(_decoder_T_601, UInt<1>("h01"), _decoder_T_958) @[Lookup.scala 33:37]
    node _decoder_T_960 = mux(_decoder_T_599, UInt<1>("h01"), _decoder_T_959) @[Lookup.scala 33:37]
    node _decoder_T_961 = mux(_decoder_T_597, UInt<1>("h01"), _decoder_T_960) @[Lookup.scala 33:37]
    node _decoder_T_962 = mux(_decoder_T_595, UInt<1>("h01"), _decoder_T_961) @[Lookup.scala 33:37]
    node _decoder_T_963 = mux(_decoder_T_593, UInt<1>("h01"), _decoder_T_962) @[Lookup.scala 33:37]
    node _decoder_T_964 = mux(_decoder_T_591, UInt<3>("h04"), _decoder_T_963) @[Lookup.scala 33:37]
    node _decoder_T_965 = mux(_decoder_T_589, UInt<1>("h01"), _decoder_T_964) @[Lookup.scala 33:37]
    node _decoder_T_966 = mux(_decoder_T_587, UInt<3>("h04"), _decoder_T_965) @[Lookup.scala 33:37]
    node _decoder_T_967 = mux(_decoder_T_585, UInt<1>("h01"), _decoder_T_966) @[Lookup.scala 33:37]
    node _decoder_T_968 = mux(_decoder_T_583, UInt<1>("h01"), _decoder_T_967) @[Lookup.scala 33:37]
    node _decoder_T_969 = mux(_decoder_T_581, UInt<1>("h01"), _decoder_T_968) @[Lookup.scala 33:37]
    node _decoder_T_970 = mux(_decoder_T_579, UInt<3>("h04"), _decoder_T_969) @[Lookup.scala 33:37]
    node _decoder_T_971 = mux(_decoder_T_577, UInt<1>("h01"), _decoder_T_970) @[Lookup.scala 33:37]
    node _decoder_T_972 = mux(_decoder_T_575, UInt<3>("h04"), _decoder_T_971) @[Lookup.scala 33:37]
    node decoder_4_1 = mux(_decoder_T_573, UInt<1>("h01"), _decoder_T_972) @[Lookup.scala 33:37]
    node _decoder_T_973 = mux(_decoder_T_687, UInt<3>("h04"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _decoder_T_974 = mux(_decoder_T_685, UInt<3>("h04"), _decoder_T_973) @[Lookup.scala 33:37]
    node _decoder_T_975 = mux(_decoder_T_683, UInt<3>("h04"), _decoder_T_974) @[Lookup.scala 33:37]
    node _decoder_T_976 = mux(_decoder_T_681, UInt<1>("h01"), _decoder_T_975) @[Lookup.scala 33:37]
    node _decoder_T_977 = mux(_decoder_T_679, UInt<1>("h01"), _decoder_T_976) @[Lookup.scala 33:37]
    node _decoder_T_978 = mux(_decoder_T_677, UInt<1>("h01"), _decoder_T_977) @[Lookup.scala 33:37]
    node _decoder_T_979 = mux(_decoder_T_675, UInt<1>("h01"), _decoder_T_978) @[Lookup.scala 33:37]
    node _decoder_T_980 = mux(_decoder_T_673, UInt<1>("h01"), _decoder_T_979) @[Lookup.scala 33:37]
    node _decoder_T_981 = mux(_decoder_T_671, UInt<3>("h04"), _decoder_T_980) @[Lookup.scala 33:37]
    node _decoder_T_982 = mux(_decoder_T_669, UInt<1>("h01"), _decoder_T_981) @[Lookup.scala 33:37]
    node _decoder_T_983 = mux(_decoder_T_667, UInt<3>("h04"), _decoder_T_982) @[Lookup.scala 33:37]
    node _decoder_T_984 = mux(_decoder_T_665, UInt<3>("h04"), _decoder_T_983) @[Lookup.scala 33:37]
    node _decoder_T_985 = mux(_decoder_T_663, UInt<3>("h04"), _decoder_T_984) @[Lookup.scala 33:37]
    node _decoder_T_986 = mux(_decoder_T_661, UInt<2>("h02"), _decoder_T_985) @[Lookup.scala 33:37]
    node _decoder_T_987 = mux(_decoder_T_659, UInt<3>("h04"), _decoder_T_986) @[Lookup.scala 33:37]
    node _decoder_T_988 = mux(_decoder_T_657, UInt<2>("h03"), _decoder_T_987) @[Lookup.scala 33:37]
    node _decoder_T_989 = mux(_decoder_T_655, UInt<3>("h04"), _decoder_T_988) @[Lookup.scala 33:37]
    node _decoder_T_990 = mux(_decoder_T_653, UInt<2>("h03"), _decoder_T_989) @[Lookup.scala 33:37]
    node _decoder_T_991 = mux(_decoder_T_651, UInt<2>("h03"), _decoder_T_990) @[Lookup.scala 33:37]
    node _decoder_T_992 = mux(_decoder_T_649, UInt<3>("h04"), _decoder_T_991) @[Lookup.scala 33:37]
    node _decoder_T_993 = mux(_decoder_T_647, UInt<3>("h04"), _decoder_T_992) @[Lookup.scala 33:37]
    node _decoder_T_994 = mux(_decoder_T_645, UInt<3>("h04"), _decoder_T_993) @[Lookup.scala 33:37]
    node _decoder_T_995 = mux(_decoder_T_643, UInt<3>("h04"), _decoder_T_994) @[Lookup.scala 33:37]
    node _decoder_T_996 = mux(_decoder_T_641, UInt<3>("h04"), _decoder_T_995) @[Lookup.scala 33:37]
    node _decoder_T_997 = mux(_decoder_T_639, UInt<3>("h04"), _decoder_T_996) @[Lookup.scala 33:37]
    node _decoder_T_998 = mux(_decoder_T_637, UInt<2>("h02"), _decoder_T_997) @[Lookup.scala 33:37]
    node _decoder_T_999 = mux(_decoder_T_635, UInt<2>("h02"), _decoder_T_998) @[Lookup.scala 33:37]
    node _decoder_T_1000 = mux(_decoder_T_633, UInt<2>("h02"), _decoder_T_999) @[Lookup.scala 33:37]
    node _decoder_T_1001 = mux(_decoder_T_631, UInt<2>("h02"), _decoder_T_1000) @[Lookup.scala 33:37]
    node _decoder_T_1002 = mux(_decoder_T_629, UInt<2>("h02"), _decoder_T_1001) @[Lookup.scala 33:37]
    node _decoder_T_1003 = mux(_decoder_T_627, UInt<2>("h02"), _decoder_T_1002) @[Lookup.scala 33:37]
    node _decoder_T_1004 = mux(_decoder_T_625, UInt<1>("h01"), _decoder_T_1003) @[Lookup.scala 33:37]
    node _decoder_T_1005 = mux(_decoder_T_623, UInt<2>("h02"), _decoder_T_1004) @[Lookup.scala 33:37]
    node _decoder_T_1006 = mux(_decoder_T_621, UInt<1>("h01"), _decoder_T_1005) @[Lookup.scala 33:37]
    node _decoder_T_1007 = mux(_decoder_T_619, UInt<2>("h02"), _decoder_T_1006) @[Lookup.scala 33:37]
    node _decoder_T_1008 = mux(_decoder_T_617, UInt<2>("h02"), _decoder_T_1007) @[Lookup.scala 33:37]
    node _decoder_T_1009 = mux(_decoder_T_615, UInt<1>("h01"), _decoder_T_1008) @[Lookup.scala 33:37]
    node _decoder_T_1010 = mux(_decoder_T_613, UInt<1>("h01"), _decoder_T_1009) @[Lookup.scala 33:37]
    node _decoder_T_1011 = mux(_decoder_T_611, UInt<2>("h02"), _decoder_T_1010) @[Lookup.scala 33:37]
    node _decoder_T_1012 = mux(_decoder_T_609, UInt<3>("h04"), _decoder_T_1011) @[Lookup.scala 33:37]
    node _decoder_T_1013 = mux(_decoder_T_607, UInt<3>("h04"), _decoder_T_1012) @[Lookup.scala 33:37]
    node _decoder_T_1014 = mux(_decoder_T_605, UInt<2>("h02"), _decoder_T_1013) @[Lookup.scala 33:37]
    node _decoder_T_1015 = mux(_decoder_T_603, UInt<2>("h02"), _decoder_T_1014) @[Lookup.scala 33:37]
    node _decoder_T_1016 = mux(_decoder_T_601, UInt<3>("h04"), _decoder_T_1015) @[Lookup.scala 33:37]
    node _decoder_T_1017 = mux(_decoder_T_599, UInt<3>("h04"), _decoder_T_1016) @[Lookup.scala 33:37]
    node _decoder_T_1018 = mux(_decoder_T_597, UInt<3>("h04"), _decoder_T_1017) @[Lookup.scala 33:37]
    node _decoder_T_1019 = mux(_decoder_T_595, UInt<3>("h04"), _decoder_T_1018) @[Lookup.scala 33:37]
    node _decoder_T_1020 = mux(_decoder_T_593, UInt<2>("h02"), _decoder_T_1019) @[Lookup.scala 33:37]
    node _decoder_T_1021 = mux(_decoder_T_591, UInt<1>("h01"), _decoder_T_1020) @[Lookup.scala 33:37]
    node _decoder_T_1022 = mux(_decoder_T_589, UInt<2>("h02"), _decoder_T_1021) @[Lookup.scala 33:37]
    node _decoder_T_1023 = mux(_decoder_T_587, UInt<1>("h01"), _decoder_T_1022) @[Lookup.scala 33:37]
    node _decoder_T_1024 = mux(_decoder_T_585, UInt<2>("h02"), _decoder_T_1023) @[Lookup.scala 33:37]
    node _decoder_T_1025 = mux(_decoder_T_583, UInt<2>("h02"), _decoder_T_1024) @[Lookup.scala 33:37]
    node _decoder_T_1026 = mux(_decoder_T_581, UInt<2>("h02"), _decoder_T_1025) @[Lookup.scala 33:37]
    node _decoder_T_1027 = mux(_decoder_T_579, UInt<1>("h01"), _decoder_T_1026) @[Lookup.scala 33:37]
    node _decoder_T_1028 = mux(_decoder_T_577, UInt<2>("h02"), _decoder_T_1027) @[Lookup.scala 33:37]
    node _decoder_T_1029 = mux(_decoder_T_575, UInt<1>("h01"), _decoder_T_1028) @[Lookup.scala 33:37]
    node decoder_5_1 = mux(_decoder_T_573, UInt<2>("h02"), _decoder_T_1029) @[Lookup.scala 33:37]
    node _decoder_T_1030 = mux(_decoder_T_687, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_1031 = mux(_decoder_T_685, UInt<1>("h00"), _decoder_T_1030) @[Lookup.scala 33:37]
    node _decoder_T_1032 = mux(_decoder_T_683, UInt<1>("h00"), _decoder_T_1031) @[Lookup.scala 33:37]
    node _decoder_T_1033 = mux(_decoder_T_681, UInt<1>("h00"), _decoder_T_1032) @[Lookup.scala 33:37]
    node _decoder_T_1034 = mux(_decoder_T_679, UInt<1>("h00"), _decoder_T_1033) @[Lookup.scala 33:37]
    node _decoder_T_1035 = mux(_decoder_T_677, UInt<1>("h00"), _decoder_T_1034) @[Lookup.scala 33:37]
    node _decoder_T_1036 = mux(_decoder_T_675, UInt<1>("h00"), _decoder_T_1035) @[Lookup.scala 33:37]
    node _decoder_T_1037 = mux(_decoder_T_673, UInt<1>("h00"), _decoder_T_1036) @[Lookup.scala 33:37]
    node _decoder_T_1038 = mux(_decoder_T_671, UInt<1>("h00"), _decoder_T_1037) @[Lookup.scala 33:37]
    node _decoder_T_1039 = mux(_decoder_T_669, UInt<1>("h00"), _decoder_T_1038) @[Lookup.scala 33:37]
    node _decoder_T_1040 = mux(_decoder_T_667, UInt<1>("h01"), _decoder_T_1039) @[Lookup.scala 33:37]
    node _decoder_T_1041 = mux(_decoder_T_665, UInt<1>("h01"), _decoder_T_1040) @[Lookup.scala 33:37]
    node _decoder_T_1042 = mux(_decoder_T_663, UInt<1>("h01"), _decoder_T_1041) @[Lookup.scala 33:37]
    node _decoder_T_1043 = mux(_decoder_T_661, UInt<1>("h01"), _decoder_T_1042) @[Lookup.scala 33:37]
    node _decoder_T_1044 = mux(_decoder_T_659, UInt<1>("h01"), _decoder_T_1043) @[Lookup.scala 33:37]
    node _decoder_T_1045 = mux(_decoder_T_657, UInt<1>("h01"), _decoder_T_1044) @[Lookup.scala 33:37]
    node _decoder_T_1046 = mux(_decoder_T_655, UInt<1>("h01"), _decoder_T_1045) @[Lookup.scala 33:37]
    node _decoder_T_1047 = mux(_decoder_T_653, UInt<1>("h00"), _decoder_T_1046) @[Lookup.scala 33:37]
    node _decoder_T_1048 = mux(_decoder_T_651, UInt<1>("h00"), _decoder_T_1047) @[Lookup.scala 33:37]
    node _decoder_T_1049 = mux(_decoder_T_649, UInt<1>("h00"), _decoder_T_1048) @[Lookup.scala 33:37]
    node _decoder_T_1050 = mux(_decoder_T_647, UInt<1>("h00"), _decoder_T_1049) @[Lookup.scala 33:37]
    node _decoder_T_1051 = mux(_decoder_T_645, UInt<1>("h00"), _decoder_T_1050) @[Lookup.scala 33:37]
    node _decoder_T_1052 = mux(_decoder_T_643, UInt<1>("h00"), _decoder_T_1051) @[Lookup.scala 33:37]
    node _decoder_T_1053 = mux(_decoder_T_641, UInt<1>("h00"), _decoder_T_1052) @[Lookup.scala 33:37]
    node _decoder_T_1054 = mux(_decoder_T_639, UInt<1>("h00"), _decoder_T_1053) @[Lookup.scala 33:37]
    node _decoder_T_1055 = mux(_decoder_T_637, UInt<1>("h00"), _decoder_T_1054) @[Lookup.scala 33:37]
    node _decoder_T_1056 = mux(_decoder_T_635, UInt<1>("h00"), _decoder_T_1055) @[Lookup.scala 33:37]
    node _decoder_T_1057 = mux(_decoder_T_633, UInt<1>("h00"), _decoder_T_1056) @[Lookup.scala 33:37]
    node _decoder_T_1058 = mux(_decoder_T_631, UInt<1>("h00"), _decoder_T_1057) @[Lookup.scala 33:37]
    node _decoder_T_1059 = mux(_decoder_T_629, UInt<1>("h00"), _decoder_T_1058) @[Lookup.scala 33:37]
    node _decoder_T_1060 = mux(_decoder_T_627, UInt<1>("h00"), _decoder_T_1059) @[Lookup.scala 33:37]
    node _decoder_T_1061 = mux(_decoder_T_625, UInt<1>("h00"), _decoder_T_1060) @[Lookup.scala 33:37]
    node _decoder_T_1062 = mux(_decoder_T_623, UInt<1>("h00"), _decoder_T_1061) @[Lookup.scala 33:37]
    node _decoder_T_1063 = mux(_decoder_T_621, UInt<1>("h00"), _decoder_T_1062) @[Lookup.scala 33:37]
    node _decoder_T_1064 = mux(_decoder_T_619, UInt<1>("h00"), _decoder_T_1063) @[Lookup.scala 33:37]
    node _decoder_T_1065 = mux(_decoder_T_617, UInt<1>("h00"), _decoder_T_1064) @[Lookup.scala 33:37]
    node _decoder_T_1066 = mux(_decoder_T_615, UInt<1>("h00"), _decoder_T_1065) @[Lookup.scala 33:37]
    node _decoder_T_1067 = mux(_decoder_T_613, UInt<1>("h00"), _decoder_T_1066) @[Lookup.scala 33:37]
    node _decoder_T_1068 = mux(_decoder_T_611, UInt<1>("h00"), _decoder_T_1067) @[Lookup.scala 33:37]
    node _decoder_T_1069 = mux(_decoder_T_609, UInt<1>("h00"), _decoder_T_1068) @[Lookup.scala 33:37]
    node _decoder_T_1070 = mux(_decoder_T_607, UInt<1>("h00"), _decoder_T_1069) @[Lookup.scala 33:37]
    node _decoder_T_1071 = mux(_decoder_T_605, UInt<1>("h00"), _decoder_T_1070) @[Lookup.scala 33:37]
    node _decoder_T_1072 = mux(_decoder_T_603, UInt<1>("h00"), _decoder_T_1071) @[Lookup.scala 33:37]
    node _decoder_T_1073 = mux(_decoder_T_601, UInt<1>("h00"), _decoder_T_1072) @[Lookup.scala 33:37]
    node _decoder_T_1074 = mux(_decoder_T_599, UInt<1>("h00"), _decoder_T_1073) @[Lookup.scala 33:37]
    node _decoder_T_1075 = mux(_decoder_T_597, UInt<1>("h00"), _decoder_T_1074) @[Lookup.scala 33:37]
    node _decoder_T_1076 = mux(_decoder_T_595, UInt<1>("h00"), _decoder_T_1075) @[Lookup.scala 33:37]
    node _decoder_T_1077 = mux(_decoder_T_593, UInt<1>("h00"), _decoder_T_1076) @[Lookup.scala 33:37]
    node _decoder_T_1078 = mux(_decoder_T_591, UInt<1>("h00"), _decoder_T_1077) @[Lookup.scala 33:37]
    node _decoder_T_1079 = mux(_decoder_T_589, UInt<1>("h00"), _decoder_T_1078) @[Lookup.scala 33:37]
    node _decoder_T_1080 = mux(_decoder_T_587, UInt<1>("h00"), _decoder_T_1079) @[Lookup.scala 33:37]
    node _decoder_T_1081 = mux(_decoder_T_585, UInt<1>("h00"), _decoder_T_1080) @[Lookup.scala 33:37]
    node _decoder_T_1082 = mux(_decoder_T_583, UInt<1>("h00"), _decoder_T_1081) @[Lookup.scala 33:37]
    node _decoder_T_1083 = mux(_decoder_T_581, UInt<1>("h00"), _decoder_T_1082) @[Lookup.scala 33:37]
    node _decoder_T_1084 = mux(_decoder_T_579, UInt<1>("h00"), _decoder_T_1083) @[Lookup.scala 33:37]
    node _decoder_T_1085 = mux(_decoder_T_577, UInt<1>("h00"), _decoder_T_1084) @[Lookup.scala 33:37]
    node _decoder_T_1086 = mux(_decoder_T_575, UInt<1>("h00"), _decoder_T_1085) @[Lookup.scala 33:37]
    node decoder_6_1 = mux(_decoder_T_573, UInt<1>("h00"), _decoder_T_1086) @[Lookup.scala 33:37]
    node _decoder_T_1087 = mux(_decoder_T_687, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _decoder_T_1088 = mux(_decoder_T_685, UInt<1>("h01"), _decoder_T_1087) @[Lookup.scala 33:37]
    node _decoder_T_1089 = mux(_decoder_T_683, UInt<1>("h01"), _decoder_T_1088) @[Lookup.scala 33:37]
    node _decoder_T_1090 = mux(_decoder_T_681, UInt<2>("h02"), _decoder_T_1089) @[Lookup.scala 33:37]
    node _decoder_T_1091 = mux(_decoder_T_679, UInt<2>("h02"), _decoder_T_1090) @[Lookup.scala 33:37]
    node _decoder_T_1092 = mux(_decoder_T_677, UInt<2>("h02"), _decoder_T_1091) @[Lookup.scala 33:37]
    node _decoder_T_1093 = mux(_decoder_T_675, UInt<2>("h02"), _decoder_T_1092) @[Lookup.scala 33:37]
    node _decoder_T_1094 = mux(_decoder_T_673, UInt<2>("h02"), _decoder_T_1093) @[Lookup.scala 33:37]
    node _decoder_T_1095 = mux(_decoder_T_671, UInt<2>("h03"), _decoder_T_1094) @[Lookup.scala 33:37]
    node _decoder_T_1096 = mux(_decoder_T_669, UInt<2>("h03"), _decoder_T_1095) @[Lookup.scala 33:37]
    node _decoder_T_1097 = mux(_decoder_T_667, UInt<2>("h03"), _decoder_T_1096) @[Lookup.scala 33:37]
    node _decoder_T_1098 = mux(_decoder_T_665, UInt<1>("h00"), _decoder_T_1097) @[Lookup.scala 33:37]
    node _decoder_T_1099 = mux(_decoder_T_663, UInt<1>("h00"), _decoder_T_1098) @[Lookup.scala 33:37]
    node _decoder_T_1100 = mux(_decoder_T_661, UInt<3>("h06"), _decoder_T_1099) @[Lookup.scala 33:37]
    node _decoder_T_1101 = mux(_decoder_T_659, UInt<3>("h05"), _decoder_T_1100) @[Lookup.scala 33:37]
    node _decoder_T_1102 = mux(_decoder_T_657, UInt<3>("h06"), _decoder_T_1101) @[Lookup.scala 33:37]
    node _decoder_T_1103 = mux(_decoder_T_655, UInt<3>("h05"), _decoder_T_1102) @[Lookup.scala 33:37]
    node _decoder_T_1104 = mux(_decoder_T_653, UInt<3>("h06"), _decoder_T_1103) @[Lookup.scala 33:37]
    node _decoder_T_1105 = mux(_decoder_T_651, UInt<3>("h06"), _decoder_T_1104) @[Lookup.scala 33:37]
    node _decoder_T_1106 = mux(_decoder_T_649, UInt<3>("h05"), _decoder_T_1105) @[Lookup.scala 33:37]
    node _decoder_T_1107 = mux(_decoder_T_647, UInt<3>("h05"), _decoder_T_1106) @[Lookup.scala 33:37]
    node _decoder_T_1108 = mux(_decoder_T_645, UInt<3>("h05"), _decoder_T_1107) @[Lookup.scala 33:37]
    node _decoder_T_1109 = mux(_decoder_T_643, UInt<3>("h05"), _decoder_T_1108) @[Lookup.scala 33:37]
    node _decoder_T_1110 = mux(_decoder_T_641, UInt<3>("h05"), _decoder_T_1109) @[Lookup.scala 33:37]
    node _decoder_T_1111 = mux(_decoder_T_639, UInt<3>("h05"), _decoder_T_1110) @[Lookup.scala 33:37]
    node _decoder_T_1112 = mux(_decoder_T_637, UInt<2>("h02"), _decoder_T_1111) @[Lookup.scala 33:37]
    node _decoder_T_1113 = mux(_decoder_T_635, UInt<2>("h02"), _decoder_T_1112) @[Lookup.scala 33:37]
    node _decoder_T_1114 = mux(_decoder_T_633, UInt<2>("h02"), _decoder_T_1113) @[Lookup.scala 33:37]
    node _decoder_T_1115 = mux(_decoder_T_631, UInt<2>("h02"), _decoder_T_1114) @[Lookup.scala 33:37]
    node _decoder_T_1116 = mux(_decoder_T_629, UInt<2>("h02"), _decoder_T_1115) @[Lookup.scala 33:37]
    node _decoder_T_1117 = mux(_decoder_T_627, UInt<2>("h02"), _decoder_T_1116) @[Lookup.scala 33:37]
    node _decoder_T_1118 = mux(_decoder_T_625, UInt<2>("h02"), _decoder_T_1117) @[Lookup.scala 33:37]
    node _decoder_T_1119 = mux(_decoder_T_623, UInt<2>("h02"), _decoder_T_1118) @[Lookup.scala 33:37]
    node _decoder_T_1120 = mux(_decoder_T_621, UInt<2>("h02"), _decoder_T_1119) @[Lookup.scala 33:37]
    node _decoder_T_1121 = mux(_decoder_T_619, UInt<2>("h02"), _decoder_T_1120) @[Lookup.scala 33:37]
    node _decoder_T_1122 = mux(_decoder_T_617, UInt<2>("h02"), _decoder_T_1121) @[Lookup.scala 33:37]
    node _decoder_T_1123 = mux(_decoder_T_615, UInt<2>("h02"), _decoder_T_1122) @[Lookup.scala 33:37]
    node _decoder_T_1124 = mux(_decoder_T_613, UInt<2>("h02"), _decoder_T_1123) @[Lookup.scala 33:37]
    node _decoder_T_1125 = mux(_decoder_T_611, UInt<2>("h02"), _decoder_T_1124) @[Lookup.scala 33:37]
    node _decoder_T_1126 = mux(_decoder_T_609, UInt<3>("h04"), _decoder_T_1125) @[Lookup.scala 33:37]
    node _decoder_T_1127 = mux(_decoder_T_607, UInt<3>("h04"), _decoder_T_1126) @[Lookup.scala 33:37]
    node _decoder_T_1128 = mux(_decoder_T_605, UInt<2>("h02"), _decoder_T_1127) @[Lookup.scala 33:37]
    node _decoder_T_1129 = mux(_decoder_T_603, UInt<2>("h02"), _decoder_T_1128) @[Lookup.scala 33:37]
    node _decoder_T_1130 = mux(_decoder_T_601, UInt<3>("h04"), _decoder_T_1129) @[Lookup.scala 33:37]
    node _decoder_T_1131 = mux(_decoder_T_599, UInt<3>("h04"), _decoder_T_1130) @[Lookup.scala 33:37]
    node _decoder_T_1132 = mux(_decoder_T_597, UInt<3>("h04"), _decoder_T_1131) @[Lookup.scala 33:37]
    node _decoder_T_1133 = mux(_decoder_T_595, UInt<3>("h04"), _decoder_T_1132) @[Lookup.scala 33:37]
    node _decoder_T_1134 = mux(_decoder_T_593, UInt<2>("h02"), _decoder_T_1133) @[Lookup.scala 33:37]
    node _decoder_T_1135 = mux(_decoder_T_591, UInt<2>("h02"), _decoder_T_1134) @[Lookup.scala 33:37]
    node _decoder_T_1136 = mux(_decoder_T_589, UInt<2>("h02"), _decoder_T_1135) @[Lookup.scala 33:37]
    node _decoder_T_1137 = mux(_decoder_T_587, UInt<2>("h02"), _decoder_T_1136) @[Lookup.scala 33:37]
    node _decoder_T_1138 = mux(_decoder_T_585, UInt<2>("h02"), _decoder_T_1137) @[Lookup.scala 33:37]
    node _decoder_T_1139 = mux(_decoder_T_583, UInt<2>("h02"), _decoder_T_1138) @[Lookup.scala 33:37]
    node _decoder_T_1140 = mux(_decoder_T_581, UInt<2>("h02"), _decoder_T_1139) @[Lookup.scala 33:37]
    node _decoder_T_1141 = mux(_decoder_T_579, UInt<2>("h02"), _decoder_T_1140) @[Lookup.scala 33:37]
    node _decoder_T_1142 = mux(_decoder_T_577, UInt<2>("h02"), _decoder_T_1141) @[Lookup.scala 33:37]
    node _decoder_T_1143 = mux(_decoder_T_575, UInt<2>("h02"), _decoder_T_1142) @[Lookup.scala 33:37]
    node decoder_7_1 = mux(_decoder_T_573, UInt<2>("h02"), _decoder_T_1143) @[Lookup.scala 33:37]
    rename_info[1].uop <= decoder_0_1 @[Decode.scala 32:52]
    rename_info[1].unit_sel <= decoder_1_1 @[Decode.scala 32:52]
    imm_sel_1 <= decoder_2_1 @[Decode.scala 32:52]
    op1_sel_1 <= decoder_3_1 @[Decode.scala 32:52]
    op2_sel_1 <= decoder_4_1 @[Decode.scala 32:52]
    des_sel_1 <= decoder_5_1 @[Decode.scala 32:52]
    rename_info[1].flush_on_commit <= decoder_6_1 @[Decode.scala 32:52]
    rename_info[1].target_sel <= decoder_7_1 @[Decode.scala 32:52]
    node rs_1 = bits(io.fb_inst_bank.bits.data[1].inst, 25, 21) @[Decode.scala 34:27]
    node rt_1 = bits(io.fb_inst_bank.bits.data[1].inst, 20, 16) @[Decode.scala 35:27]
    node rd_1 = bits(io.fb_inst_bank.bits.data[1].inst, 15, 11) @[Decode.scala 36:27]
    node rename_info_1_imm_data_lo = bits(io.fb_inst_bank.bits.data[1].inst, 15, 0) @[Decode.scala 37:27]
    node rename_info_1_imm_data_lo_1 = bits(io.fb_inst_bank.bits.data[1].inst, 25, 0) @[Decode.scala 38:27]
    node rename_info_1_imm_data_lo_2 = bits(io.fb_inst_bank.bits.data[1].inst, 10, 6) @[Decode.scala 39:27]
    node _rename_info_1_except_type_T = asUInt(rename_info[1].uop) @[Decode.scala 41:40]
    node _rename_info_1_except_type_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 41:68]
    node _rename_info_1_except_type_T_2 = asUInt(UInt<6>("h02e")) @[Decode.scala 42:25]
    node _rename_info_1_except_type_T_3 = asUInt(UInt<1>("h01")) @[Decode.scala 42:58]
    node _rename_info_1_except_type_T_4 = asUInt(UInt<6>("h030")) @[Decode.scala 43:23]
    node _rename_info_1_except_type_T_5 = asUInt(UInt<2>("h02")) @[Decode.scala 43:54]
    node _rename_info_1_except_type_T_6 = eq(_rename_info_1_except_type_T_2, _rename_info_1_except_type_T) @[Mux.scala 80:60]
    node _rename_info_1_except_type_T_7 = mux(_rename_info_1_except_type_T_6, _rename_info_1_except_type_T_3, _rename_info_1_except_type_T_1) @[Mux.scala 80:57]
    node _rename_info_1_except_type_T_8 = eq(_rename_info_1_except_type_T_4, _rename_info_1_except_type_T) @[Mux.scala 80:60]
    node _rename_info_1_except_type_T_9 = mux(_rename_info_1_except_type_T_8, _rename_info_1_except_type_T_5, _rename_info_1_except_type_T_7) @[Mux.scala 80:57]
    wire _rename_info_1_except_type_WIRE : UInt<2> @[Decode.scala 44:16]
    wire _rename_info_1_except_type_WIRE_1 : UInt<2> @[Decode.scala 44:16]
    _rename_info_1_except_type_WIRE_1 <= _rename_info_1_except_type_T_9 @[Decode.scala 44:16]
    wire _rename_info_1_except_type_WIRE_2 : UInt<2> @[Decode.scala 44:16]
    _rename_info_1_except_type_WIRE_2 <= _rename_info_1_except_type_WIRE_1 @[Decode.scala 44:16]
    _rename_info_1_except_type_WIRE <= _rename_info_1_except_type_WIRE_2 @[Decode.scala 44:16]
    rename_info[1].except_type <= _rename_info_1_except_type_WIRE @[Decode.scala 41:17]
    node _rename_info_1_need_imm_T = neq(imm_sel_1, UInt<3>("h04")) @[Decode.scala 46:25]
    rename_info[1].need_imm <= _rename_info_1_need_imm_T @[Decode.scala 46:14]
    node _rename_info_1_op1_addr_T = asUInt(op1_sel_1) @[Decode.scala 47:41]
    node _rename_info_1_op1_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 48:25]
    node _rename_info_1_op1_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 49:25]
    node _rename_info_1_op1_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 50:25]
    node _rename_info_1_op1_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 51:25]
    node _rename_info_1_op1_addr_T_5 = eq(_rename_info_1_op1_addr_T_1, _rename_info_1_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op1_addr_T_6 = mux(_rename_info_1_op1_addr_T_5, rs_1, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_1_op1_addr_T_7 = eq(_rename_info_1_op1_addr_T_2, _rename_info_1_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op1_addr_T_8 = mux(_rename_info_1_op1_addr_T_7, rt_1, _rename_info_1_op1_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_1_op1_addr_T_9 = eq(_rename_info_1_op1_addr_T_3, _rename_info_1_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op1_addr_T_10 = mux(_rename_info_1_op1_addr_T_9, rd_1, _rename_info_1_op1_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_1_op1_addr_T_11 = eq(_rename_info_1_op1_addr_T_4, _rename_info_1_op1_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op1_addr_T_12 = mux(_rename_info_1_op1_addr_T_11, UInt<5>("h01f"), _rename_info_1_op1_addr_T_10) @[Mux.scala 80:57]
    rename_info[1].op1_addr <= _rename_info_1_op1_addr_T_12 @[Decode.scala 47:14]
    node _rename_info_1_op2_addr_T = asUInt(op2_sel_1) @[Decode.scala 53:41]
    node _rename_info_1_op2_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 54:25]
    node _rename_info_1_op2_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 55:25]
    node _rename_info_1_op2_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 56:25]
    node _rename_info_1_op2_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 57:25]
    node _rename_info_1_op2_addr_T_5 = eq(_rename_info_1_op2_addr_T_1, _rename_info_1_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op2_addr_T_6 = mux(_rename_info_1_op2_addr_T_5, rs_1, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_1_op2_addr_T_7 = eq(_rename_info_1_op2_addr_T_2, _rename_info_1_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op2_addr_T_8 = mux(_rename_info_1_op2_addr_T_7, rt_1, _rename_info_1_op2_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_1_op2_addr_T_9 = eq(_rename_info_1_op2_addr_T_3, _rename_info_1_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op2_addr_T_10 = mux(_rename_info_1_op2_addr_T_9, rd_1, _rename_info_1_op2_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_1_op2_addr_T_11 = eq(_rename_info_1_op2_addr_T_4, _rename_info_1_op2_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_op2_addr_T_12 = mux(_rename_info_1_op2_addr_T_11, UInt<5>("h01f"), _rename_info_1_op2_addr_T_10) @[Mux.scala 80:57]
    rename_info[1].op2_addr <= _rename_info_1_op2_addr_T_12 @[Decode.scala 53:14]
    node _rename_info_1_des_addr_T = asUInt(des_sel_1) @[Decode.scala 59:41]
    node _rename_info_1_des_addr_T_1 = asUInt(UInt<1>("h00")) @[Decode.scala 60:25]
    node _rename_info_1_des_addr_T_2 = asUInt(UInt<1>("h01")) @[Decode.scala 61:25]
    node _rename_info_1_des_addr_T_3 = asUInt(UInt<2>("h02")) @[Decode.scala 62:25]
    node _rename_info_1_des_addr_T_4 = asUInt(UInt<2>("h03")) @[Decode.scala 63:25]
    node _rename_info_1_des_addr_T_5 = eq(_rename_info_1_des_addr_T_1, _rename_info_1_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_des_addr_T_6 = mux(_rename_info_1_des_addr_T_5, rs_1, UInt<5>("h00")) @[Mux.scala 80:57]
    node _rename_info_1_des_addr_T_7 = eq(_rename_info_1_des_addr_T_2, _rename_info_1_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_des_addr_T_8 = mux(_rename_info_1_des_addr_T_7, rt_1, _rename_info_1_des_addr_T_6) @[Mux.scala 80:57]
    node _rename_info_1_des_addr_T_9 = eq(_rename_info_1_des_addr_T_3, _rename_info_1_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_des_addr_T_10 = mux(_rename_info_1_des_addr_T_9, rd_1, _rename_info_1_des_addr_T_8) @[Mux.scala 80:57]
    node _rename_info_1_des_addr_T_11 = eq(_rename_info_1_des_addr_T_4, _rename_info_1_des_addr_T) @[Mux.scala 80:60]
    node _rename_info_1_des_addr_T_12 = mux(_rename_info_1_des_addr_T_11, UInt<5>("h01f"), _rename_info_1_des_addr_T_10) @[Mux.scala 80:57]
    rename_info[1].des_addr <= _rename_info_1_des_addr_T_12 @[Decode.scala 59:14]
    node _rename_info_1_imm_data_T = asUInt(imm_sel_1) @[Decode.scala 65:41]
    node _rename_info_1_imm_data_T_1 = asUInt(UInt<1>("h01")) @[Decode.scala 66:28]
    node _rename_info_1_imm_data_T_2 = bits(rename_info_1_imm_data_lo, 15, 15) @[Decode.scala 66:56]
    node _rename_info_1_imm_data_T_3 = bits(_rename_info_1_imm_data_T_2, 0, 0) @[Bitwise.scala 72:15]
    node rename_info_1_imm_data_hi = mux(_rename_info_1_imm_data_T_3, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_1_imm_data_T_4 = cat(rename_info_1_imm_data_hi, rename_info_1_imm_data_lo) @[Cat.scala 30:58]
    node _rename_info_1_imm_data_T_5 = asUInt(UInt<1>("h00")) @[Decode.scala 67:28]
    node rename_info_1_imm_data_hi_1 = mux(UInt<1>("h00"), UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_1_imm_data_T_6 = cat(rename_info_1_imm_data_hi_1, rename_info_1_imm_data_lo) @[Cat.scala 30:58]
    node _rename_info_1_imm_data_T_7 = asUInt(UInt<2>("h02")) @[Decode.scala 68:26]
    node rename_info_1_imm_data_hi_2 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_1_imm_data_T_8 = cat(rename_info_1_imm_data_hi_2, rename_info_1_imm_data_lo_2) @[Cat.scala 30:58]
    node _rename_info_1_imm_data_T_9 = asUInt(UInt<2>("h03")) @[Decode.scala 69:35]
    node rename_info_1_imm_data_hi_3 = mux(UInt<1>("h00"), UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node _rename_info_1_imm_data_T_10 = cat(rename_info_1_imm_data_hi_3, rename_info_1_imm_data_lo_1) @[Cat.scala 30:58]
    node _rename_info_1_imm_data_T_11 = eq(_rename_info_1_imm_data_T_1, _rename_info_1_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_1_imm_data_T_12 = mux(_rename_info_1_imm_data_T_11, _rename_info_1_imm_data_T_4, UInt<32>("h00")) @[Mux.scala 80:57]
    node _rename_info_1_imm_data_T_13 = eq(_rename_info_1_imm_data_T_5, _rename_info_1_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_1_imm_data_T_14 = mux(_rename_info_1_imm_data_T_13, _rename_info_1_imm_data_T_6, _rename_info_1_imm_data_T_12) @[Mux.scala 80:57]
    node _rename_info_1_imm_data_T_15 = eq(_rename_info_1_imm_data_T_7, _rename_info_1_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_1_imm_data_T_16 = mux(_rename_info_1_imm_data_T_15, _rename_info_1_imm_data_T_8, _rename_info_1_imm_data_T_14) @[Mux.scala 80:57]
    node _rename_info_1_imm_data_T_17 = eq(_rename_info_1_imm_data_T_9, _rename_info_1_imm_data_T) @[Mux.scala 80:60]
    node _rename_info_1_imm_data_T_18 = mux(_rename_info_1_imm_data_T_17, _rename_info_1_imm_data_T_10, _rename_info_1_imm_data_T_16) @[Mux.scala 80:57]
    rename_info[1].imm_data <= _rename_info_1_imm_data_T_18 @[Decode.scala 65:14]
    wire rename_info_bits : {is_valid : UInt<1>, op1_addr : UInt<5>, op2_addr : UInt<5>, des_addr : UInt<5>, des_rob : UInt<3>}[2] @[Decode.scala 109:30]
    wire rename_info_valid : UInt<1>
    rename_info_valid <= UInt<1>("h00")
    wire _WIRE : UInt<1>[2] @[Decode.scala 112:46]
    _WIRE[0] <= io.fb_inst_bank.bits.data[0].is_valid @[Decode.scala 112:46]
    _WIRE[1] <= io.fb_inst_bank.bits.data[1].is_valid @[Decode.scala 112:46]
    io.rob_allocate.allocate_req.bits[0] <= _WIRE[0] @[Decode.scala 112:36]
    io.rob_allocate.allocate_req.bits[1] <= _WIRE[1] @[Decode.scala 112:36]
    io.rob_allocate.allocate_req.valid <= io.fb_inst_bank.valid @[Decode.scala 113:37]
    reg rob_allocate_info_bits : {rob_idx : UInt<3>, inst_valid : UInt<1>, inst_addr : UInt<32>, uop : UInt<6>, unit_sel : UInt<3>, need_imm : UInt<1>, commit_addr : UInt<32>, commit_target : UInt<3>, except_type : UInt<2>, is_branch : UInt<1>, is_delay : UInt<1>, gh_info : UInt<4>, imm_data : UInt<32>, flush_on_commit : UInt<1>, predict_taken : UInt<1>}[2], clock @[Decode.scala 115:35]
    reg rob_allocate_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decode.scala 116:40]
    rob_allocate_info_valid <= io.fb_inst_bank.valid @[Decode.scala 117:27]
    io.rob_allocate.allocate_info.bits[0].predict_taken <= rob_allocate_info_bits[0].predict_taken @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].flush_on_commit <= rob_allocate_info_bits[0].flush_on_commit @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].imm_data <= rob_allocate_info_bits[0].imm_data @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].gh_info <= rob_allocate_info_bits[0].gh_info @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].is_delay <= rob_allocate_info_bits[0].is_delay @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].is_branch <= rob_allocate_info_bits[0].is_branch @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].except_type <= rob_allocate_info_bits[0].except_type @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].commit_target <= rob_allocate_info_bits[0].commit_target @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].commit_addr <= rob_allocate_info_bits[0].commit_addr @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].need_imm <= rob_allocate_info_bits[0].need_imm @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].unit_sel <= rob_allocate_info_bits[0].unit_sel @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].uop <= rob_allocate_info_bits[0].uop @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].inst_addr <= rob_allocate_info_bits[0].inst_addr @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].inst_valid <= rob_allocate_info_bits[0].inst_valid @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[0].rob_idx <= rob_allocate_info_bits[0].rob_idx @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].predict_taken <= rob_allocate_info_bits[1].predict_taken @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].flush_on_commit <= rob_allocate_info_bits[1].flush_on_commit @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].imm_data <= rob_allocate_info_bits[1].imm_data @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].gh_info <= rob_allocate_info_bits[1].gh_info @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].is_delay <= rob_allocate_info_bits[1].is_delay @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].is_branch <= rob_allocate_info_bits[1].is_branch @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].except_type <= rob_allocate_info_bits[1].except_type @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].commit_target <= rob_allocate_info_bits[1].commit_target @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].commit_addr <= rob_allocate_info_bits[1].commit_addr @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].need_imm <= rob_allocate_info_bits[1].need_imm @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].unit_sel <= rob_allocate_info_bits[1].unit_sel @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].uop <= rob_allocate_info_bits[1].uop @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].inst_addr <= rob_allocate_info_bits[1].inst_addr @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].inst_valid <= rob_allocate_info_bits[1].inst_valid @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.bits[1].rob_idx <= rob_allocate_info_bits[1].rob_idx @[Decode.scala 119:37]
    io.rob_allocate.allocate_info.valid <= rob_allocate_info_valid @[Decode.scala 120:38]
    rob_allocate_info_bits[0].rob_idx <= io.rob_allocate.allocate_resp.bits.rob_idx[0] @[Decode.scala 123:39]
    rob_allocate_info_bits[0].inst_valid <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] @[Decode.scala 124:42]
    rob_allocate_info_bits[0].inst_addr <= io.fb_inst_bank.bits.data[0].inst_addr @[Decode.scala 125:41]
    rob_allocate_info_bits[0].commit_addr <= rename_info[0].des_addr @[Decode.scala 126:43]
    rob_allocate_info_bits[0].commit_target <= rename_info[0].target_sel @[Decode.scala 127:45]
    rob_allocate_info_bits[0].except_type <= rename_info[0].except_type @[Decode.scala 128:43]
    rob_allocate_info_bits[0].is_branch <= io.fb_inst_bank.bits.data[0].is_branch @[Decode.scala 129:41]
    rob_allocate_info_bits[0].is_delay <= io.fb_inst_bank.bits.data[0].is_delay @[Decode.scala 130:40]
    rob_allocate_info_bits[0].predict_taken <= io.fb_inst_bank.bits.data[0].predict_taken @[Decode.scala 131:45]
    rob_allocate_info_bits[0].gh_info <= io.fb_inst_bank.bits.data[0].gh_backup @[Decode.scala 132:39]
    rob_allocate_info_bits[0].imm_data <= rename_info[0].imm_data @[Decode.scala 133:40]
    rob_allocate_info_bits[0].flush_on_commit <= rename_info[0].flush_on_commit @[Decode.scala 134:47]
    rob_allocate_info_bits[0].uop <= rename_info[0].uop @[Decode.scala 135:35]
    rob_allocate_info_bits[0].unit_sel <= rename_info[0].unit_sel @[Decode.scala 136:40]
    rob_allocate_info_bits[0].need_imm <= rename_info[0].need_imm @[Decode.scala 137:40]
    rename_info_bits[0].is_valid <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] @[Decode.scala 140:34]
    rename_info_bits[0].op1_addr <= rename_info[0].op1_addr @[Decode.scala 141:34]
    rename_info_bits[0].op2_addr <= rename_info[0].op2_addr @[Decode.scala 142:34]
    rename_info_bits[0].des_addr <= rename_info[0].des_addr @[Decode.scala 143:34]
    rename_info_bits[0].des_rob <= io.rob_allocate.allocate_resp.bits.rob_idx[0] @[Decode.scala 144:34]
    rob_allocate_info_bits[1].rob_idx <= io.rob_allocate.allocate_resp.bits.rob_idx[1] @[Decode.scala 123:39]
    rob_allocate_info_bits[1].inst_valid <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] @[Decode.scala 124:42]
    rob_allocate_info_bits[1].inst_addr <= io.fb_inst_bank.bits.data[1].inst_addr @[Decode.scala 125:41]
    rob_allocate_info_bits[1].commit_addr <= rename_info[1].des_addr @[Decode.scala 126:43]
    rob_allocate_info_bits[1].commit_target <= rename_info[1].target_sel @[Decode.scala 127:45]
    rob_allocate_info_bits[1].except_type <= rename_info[1].except_type @[Decode.scala 128:43]
    rob_allocate_info_bits[1].is_branch <= io.fb_inst_bank.bits.data[1].is_branch @[Decode.scala 129:41]
    rob_allocate_info_bits[1].is_delay <= io.fb_inst_bank.bits.data[1].is_delay @[Decode.scala 130:40]
    rob_allocate_info_bits[1].predict_taken <= io.fb_inst_bank.bits.data[1].predict_taken @[Decode.scala 131:45]
    rob_allocate_info_bits[1].gh_info <= io.fb_inst_bank.bits.data[1].gh_backup @[Decode.scala 132:39]
    rob_allocate_info_bits[1].imm_data <= rename_info[1].imm_data @[Decode.scala 133:40]
    rob_allocate_info_bits[1].flush_on_commit <= rename_info[1].flush_on_commit @[Decode.scala 134:47]
    rob_allocate_info_bits[1].uop <= rename_info[1].uop @[Decode.scala 135:35]
    rob_allocate_info_bits[1].unit_sel <= rename_info[1].unit_sel @[Decode.scala 136:40]
    rob_allocate_info_bits[1].need_imm <= rename_info[1].need_imm @[Decode.scala 137:40]
    rename_info_bits[1].is_valid <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] @[Decode.scala 140:34]
    rename_info_bits[1].op1_addr <= rename_info[1].op1_addr @[Decode.scala 141:34]
    rename_info_bits[1].op2_addr <= rename_info[1].op2_addr @[Decode.scala 142:34]
    rename_info_bits[1].des_addr <= rename_info[1].des_addr @[Decode.scala 143:34]
    rename_info_bits[1].des_rob <= io.rob_allocate.allocate_resp.bits.rob_idx[1] @[Decode.scala 144:34]
    node _rename_info_valid_T = and(io.fb_inst_bank.valid, io.rob_allocate.allocate_resp.valid) @[Decode.scala 146:46]
    rename_info_valid <= _rename_info_valid_T @[Decode.scala 146:21]
    io.rename_info.bits[0].des_rob <= rename_info_bits[0].des_rob @[Decode.scala 148:22]
    io.rename_info.bits[0].des_addr <= rename_info_bits[0].des_addr @[Decode.scala 148:22]
    io.rename_info.bits[0].op2_addr <= rename_info_bits[0].op2_addr @[Decode.scala 148:22]
    io.rename_info.bits[0].op1_addr <= rename_info_bits[0].op1_addr @[Decode.scala 148:22]
    io.rename_info.bits[0].is_valid <= rename_info_bits[0].is_valid @[Decode.scala 148:22]
    io.rename_info.bits[1].des_rob <= rename_info_bits[1].des_rob @[Decode.scala 148:22]
    io.rename_info.bits[1].des_addr <= rename_info_bits[1].des_addr @[Decode.scala 148:22]
    io.rename_info.bits[1].op2_addr <= rename_info_bits[1].op2_addr @[Decode.scala 148:22]
    io.rename_info.bits[1].op1_addr <= rename_info_bits[1].op1_addr @[Decode.scala 148:22]
    io.rename_info.bits[1].is_valid <= rename_info_bits[1].is_valid @[Decode.scala 148:22]
    io.rename_info.valid <= rename_info_valid @[Decode.scala 149:23]
    io.fb_resp.deq_valid[0] <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] @[Decode.scala 151:23]
    io.fb_resp.deq_valid[1] <= io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] @[Decode.scala 151:23]
    when io.need_flush : @[Decode.scala 153:22]
      rename_info_bits[0].is_valid <= UInt<1>("h00") @[Decode.scala 82:14]
      rename_info_bits[0].op1_addr <= UInt<5>("h00") @[Decode.scala 83:14]
      rename_info_bits[0].op2_addr <= UInt<5>("h00") @[Decode.scala 84:14]
      rename_info_bits[0].des_addr <= UInt<5>("h00") @[Decode.scala 85:14]
      rename_info_bits[0].des_rob <= UInt<3>("h00") @[Decode.scala 86:14]
      rename_info_bits[1].is_valid <= UInt<1>("h00") @[Decode.scala 82:14]
      rename_info_bits[1].op1_addr <= UInt<5>("h00") @[Decode.scala 83:14]
      rename_info_bits[1].op2_addr <= UInt<5>("h00") @[Decode.scala 84:14]
      rename_info_bits[1].des_addr <= UInt<5>("h00") @[Decode.scala 85:14]
      rename_info_bits[1].des_rob <= UInt<3>("h00") @[Decode.scala 86:14]
      rename_info_valid <= UInt<1>("h00") @[Decode.scala 155:22]
      rob_allocate_info_bits[0].rob_idx <= UInt<3>("h00") @[Rob.scala 88:21]
      rob_allocate_info_bits[0].inst_valid <= UInt<1>("h00") @[Rob.scala 89:21]
      rob_allocate_info_bits[0].inst_addr <= UInt<32>("h00") @[Rob.scala 90:21]
      rob_allocate_info_bits[0].uop <= UInt<1>("h00") @[Rob.scala 91:21]
      rob_allocate_info_bits[0].unit_sel <= UInt<1>("h00") @[Rob.scala 92:21]
      rob_allocate_info_bits[0].need_imm <= UInt<1>("h00") @[Rob.scala 93:21]
      rob_allocate_info_bits[0].commit_addr <= UInt<32>("h00") @[Rob.scala 94:21]
      rob_allocate_info_bits[0].commit_target <= UInt<1>("h00") @[Rob.scala 95:21]
      rob_allocate_info_bits[0].except_type <= UInt<1>("h00") @[Rob.scala 96:21]
      rob_allocate_info_bits[0].is_branch <= UInt<1>("h00") @[Rob.scala 97:21]
      rob_allocate_info_bits[0].is_delay <= UInt<1>("h00") @[Rob.scala 98:21]
      rob_allocate_info_bits[0].gh_info <= UInt<4>("h00") @[Rob.scala 99:21]
      rob_allocate_info_bits[0].imm_data <= UInt<32>("h00") @[Rob.scala 100:21]
      rob_allocate_info_bits[0].flush_on_commit <= UInt<1>("h00") @[Rob.scala 101:21]
      rob_allocate_info_bits[0].predict_taken <= UInt<1>("h00") @[Rob.scala 102:21]
      rob_allocate_info_bits[1].rob_idx <= UInt<3>("h00") @[Rob.scala 88:21]
      rob_allocate_info_bits[1].inst_valid <= UInt<1>("h00") @[Rob.scala 89:21]
      rob_allocate_info_bits[1].inst_addr <= UInt<32>("h00") @[Rob.scala 90:21]
      rob_allocate_info_bits[1].uop <= UInt<1>("h00") @[Rob.scala 91:21]
      rob_allocate_info_bits[1].unit_sel <= UInt<1>("h00") @[Rob.scala 92:21]
      rob_allocate_info_bits[1].need_imm <= UInt<1>("h00") @[Rob.scala 93:21]
      rob_allocate_info_bits[1].commit_addr <= UInt<32>("h00") @[Rob.scala 94:21]
      rob_allocate_info_bits[1].commit_target <= UInt<1>("h00") @[Rob.scala 95:21]
      rob_allocate_info_bits[1].except_type <= UInt<1>("h00") @[Rob.scala 96:21]
      rob_allocate_info_bits[1].is_branch <= UInt<1>("h00") @[Rob.scala 97:21]
      rob_allocate_info_bits[1].is_delay <= UInt<1>("h00") @[Rob.scala 98:21]
      rob_allocate_info_bits[1].gh_info <= UInt<4>("h00") @[Rob.scala 99:21]
      rob_allocate_info_bits[1].imm_data <= UInt<32>("h00") @[Rob.scala 100:21]
      rob_allocate_info_bits[1].flush_on_commit <= UInt<1>("h00") @[Rob.scala 101:21]
      rob_allocate_info_bits[1].predict_taken <= UInt<1>("h00") @[Rob.scala 102:21]
      rob_allocate_info_valid <= UInt<1>("h00") @[Decode.scala 157:28]
      skip @[Decode.scala 153:22]
    node _T = asUInt(reset) @[Decode.scala 160:20]
    when _T : @[Decode.scala 160:23]
      rename_info_bits[0].is_valid <= UInt<1>("h00") @[Decode.scala 82:14]
      rename_info_bits[0].op1_addr <= UInt<5>("h00") @[Decode.scala 83:14]
      rename_info_bits[0].op2_addr <= UInt<5>("h00") @[Decode.scala 84:14]
      rename_info_bits[0].des_addr <= UInt<5>("h00") @[Decode.scala 85:14]
      rename_info_bits[0].des_rob <= UInt<3>("h00") @[Decode.scala 86:14]
      rename_info_bits[1].is_valid <= UInt<1>("h00") @[Decode.scala 82:14]
      rename_info_bits[1].op1_addr <= UInt<5>("h00") @[Decode.scala 83:14]
      rename_info_bits[1].op2_addr <= UInt<5>("h00") @[Decode.scala 84:14]
      rename_info_bits[1].des_addr <= UInt<5>("h00") @[Decode.scala 85:14]
      rename_info_bits[1].des_rob <= UInt<3>("h00") @[Decode.scala 86:14]
      rob_allocate_info_bits[0].rob_idx <= UInt<3>("h00") @[Rob.scala 88:21]
      rob_allocate_info_bits[0].inst_valid <= UInt<1>("h00") @[Rob.scala 89:21]
      rob_allocate_info_bits[0].inst_addr <= UInt<32>("h00") @[Rob.scala 90:21]
      rob_allocate_info_bits[0].uop <= UInt<1>("h00") @[Rob.scala 91:21]
      rob_allocate_info_bits[0].unit_sel <= UInt<1>("h00") @[Rob.scala 92:21]
      rob_allocate_info_bits[0].need_imm <= UInt<1>("h00") @[Rob.scala 93:21]
      rob_allocate_info_bits[0].commit_addr <= UInt<32>("h00") @[Rob.scala 94:21]
      rob_allocate_info_bits[0].commit_target <= UInt<1>("h00") @[Rob.scala 95:21]
      rob_allocate_info_bits[0].except_type <= UInt<1>("h00") @[Rob.scala 96:21]
      rob_allocate_info_bits[0].is_branch <= UInt<1>("h00") @[Rob.scala 97:21]
      rob_allocate_info_bits[0].is_delay <= UInt<1>("h00") @[Rob.scala 98:21]
      rob_allocate_info_bits[0].gh_info <= UInt<4>("h00") @[Rob.scala 99:21]
      rob_allocate_info_bits[0].imm_data <= UInt<32>("h00") @[Rob.scala 100:21]
      rob_allocate_info_bits[0].flush_on_commit <= UInt<1>("h00") @[Rob.scala 101:21]
      rob_allocate_info_bits[0].predict_taken <= UInt<1>("h00") @[Rob.scala 102:21]
      rob_allocate_info_bits[1].rob_idx <= UInt<3>("h00") @[Rob.scala 88:21]
      rob_allocate_info_bits[1].inst_valid <= UInt<1>("h00") @[Rob.scala 89:21]
      rob_allocate_info_bits[1].inst_addr <= UInt<32>("h00") @[Rob.scala 90:21]
      rob_allocate_info_bits[1].uop <= UInt<1>("h00") @[Rob.scala 91:21]
      rob_allocate_info_bits[1].unit_sel <= UInt<1>("h00") @[Rob.scala 92:21]
      rob_allocate_info_bits[1].need_imm <= UInt<1>("h00") @[Rob.scala 93:21]
      rob_allocate_info_bits[1].commit_addr <= UInt<32>("h00") @[Rob.scala 94:21]
      rob_allocate_info_bits[1].commit_target <= UInt<1>("h00") @[Rob.scala 95:21]
      rob_allocate_info_bits[1].except_type <= UInt<1>("h00") @[Rob.scala 96:21]
      rob_allocate_info_bits[1].is_branch <= UInt<1>("h00") @[Rob.scala 97:21]
      rob_allocate_info_bits[1].is_delay <= UInt<1>("h00") @[Rob.scala 98:21]
      rob_allocate_info_bits[1].gh_info <= UInt<4>("h00") @[Rob.scala 99:21]
      rob_allocate_info_bits[1].imm_data <= UInt<32>("h00") @[Rob.scala 100:21]
      rob_allocate_info_bits[1].flush_on_commit <= UInt<1>("h00") @[Rob.scala 101:21]
      rob_allocate_info_bits[1].predict_taken <= UInt<1>("h00") @[Rob.scala 102:21]
      skip @[Decode.scala 160:23]
    
  module Rename : 
    input clock : Clock
    input reset : Reset
    output io : {flip rename_info : {valid : UInt<1>, bits : {is_valid : UInt<1>, op1_addr : UInt<5>, op2_addr : UInt<5>, des_addr : UInt<5>, des_rob : UInt<3>}[2]}, flip rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2], reg_read : {op1_addr : UInt<5>, op2_addr : UInt<5>, flip op1_data : UInt<32>, flip op2_data : UInt<32>}[2], rob_init_info : {valid : UInt<1>, bits : {is_valid : UInt<1>, des_rob : UInt<3>, op1_rob : UInt<3>, op2_rob : UInt<3>, op1_regData : UInt<32>, op2_regData : UInt<32>, op1_in_rob : UInt<1>, op2_in_rob : UInt<1>}[2]}, flip need_flush : UInt<1>}
    
    reg busy_table : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Rename.scala 60:27]
    wire _map_table_WIRE : UInt<3>[32] @[Rename.scala 61:34]
    _map_table_WIRE[0] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[1] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[2] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[3] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[4] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[5] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[6] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[7] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[8] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[9] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[10] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[11] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[12] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[13] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[14] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[15] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[16] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[17] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[18] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[19] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[20] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[21] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[22] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[23] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[24] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[25] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[26] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[27] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[28] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[29] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[30] <= UInt<3>("h00") @[Rename.scala 61:34]
    _map_table_WIRE[31] <= UInt<3>("h00") @[Rename.scala 61:34]
    reg map_table : UInt<3>[32], clock with : (reset => (reset, _map_table_WIRE)) @[Rename.scala 61:26]
    node _will_busy_T = dshl(UInt<1>("h01"), io.rename_info.bits[0].des_addr) @[OneHot.scala 58:35]
    node _will_busy_T_1 = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 63:95]
    node _will_busy_T_2 = bits(_will_busy_T_1, 0, 0) @[Bitwise.scala 72:15]
    node _will_busy_T_3 = mux(_will_busy_T_2, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _will_busy_T_4 = and(_will_busy_T, _will_busy_T_3) @[Rename.scala 63:66]
    node _will_busy_T_5 = dshl(UInt<1>("h01"), io.rename_info.bits[1].des_addr) @[OneHot.scala 58:35]
    node _will_busy_T_6 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 63:95]
    node _will_busy_T_7 = bits(_will_busy_T_6, 0, 0) @[Bitwise.scala 72:15]
    node _will_busy_T_8 = mux(_will_busy_T_7, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _will_busy_T_9 = and(_will_busy_T_5, _will_busy_T_8) @[Rename.scala 63:66]
    node _will_busy_T_10 = or(_will_busy_T_4, _will_busy_T_9) @[Rename.scala 63:118]
    node will_busy_hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
    node _will_busy_T_11 = cat(will_busy_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node will_busy = and(_will_busy_T_10, _will_busy_T_11) @[Rename.scala 63:121]
    node _busy_table_wb_T = dshl(UInt<1>("h01"), io.rob_commit[0].bits.commit_addr) @[OneHot.scala 58:35]
    node _busy_table_wb_T_1 = eq(io.rob_commit[0].bits.des_rob, map_table[io.rob_commit[0].bits.commit_addr]) @[Rename.scala 64:117]
    node _busy_table_wb_T_2 = and(io.rob_commit[0].valid, _busy_table_wb_T_1) @[Rename.scala 64:101]
    node _busy_table_wb_T_3 = bits(_busy_table_wb_T_2, 0, 0) @[Bitwise.scala 72:15]
    node _busy_table_wb_T_4 = mux(_busy_table_wb_T_3, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _busy_table_wb_T_5 = and(_busy_table_wb_T, _busy_table_wb_T_4) @[Rename.scala 64:85]
    node _busy_table_wb_T_6 = dshl(UInt<1>("h01"), io.rob_commit[1].bits.commit_addr) @[OneHot.scala 58:35]
    node _busy_table_wb_T_7 = eq(io.rob_commit[1].bits.des_rob, map_table[io.rob_commit[1].bits.commit_addr]) @[Rename.scala 64:117]
    node _busy_table_wb_T_8 = and(io.rob_commit[1].valid, _busy_table_wb_T_7) @[Rename.scala 64:101]
    node _busy_table_wb_T_9 = bits(_busy_table_wb_T_8, 0, 0) @[Bitwise.scala 72:15]
    node _busy_table_wb_T_10 = mux(_busy_table_wb_T_9, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _busy_table_wb_T_11 = and(_busy_table_wb_T_6, _busy_table_wb_T_10) @[Rename.scala 64:85]
    node _busy_table_wb_T_12 = or(_busy_table_wb_T_5, _busy_table_wb_T_11) @[Rename.scala 64:160]
    node _busy_table_wb_T_13 = not(_busy_table_wb_T_12) @[Rename.scala 64:164]
    node _busy_table_wb_T_14 = and(busy_table, _busy_table_wb_T_13) @[Rename.scala 64:34]
    node busy_table_wb_hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
    node _busy_table_wb_T_15 = cat(busy_table_wb_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node busy_table_wb = and(_busy_table_wb_T_14, _busy_table_wb_T_15) @[Rename.scala 64:176]
    node busy_table_next = or(will_busy, busy_table_wb) @[Rename.scala 65:35]
    node _busy_table_T = mux(io.need_flush, UInt<32>("h00"), busy_table_next) @[Rename.scala 66:18]
    busy_table <= _busy_table_T @[Rename.scala 66:13]
    node remap_idx_0 = dshl(UInt<1>("h01"), io.rename_info.bits[0].des_addr) @[OneHot.scala 58:35]
    node remap_idx_1 = dshl(UInt<1>("h01"), io.rename_info.bits[1].des_addr) @[OneHot.scala 58:35]
    node _map_table_1_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_1_T_1 = bits(remap_idx_0, 1, 1) @[Rename.scala 70:153]
    node _map_table_1_T_2 = and(_map_table_1_T, _map_table_1_T_1) @[Rename.scala 70:138]
    node _map_table_1_T_3 = mux(_map_table_1_T_2, io.rename_info.bits[0].des_rob, map_table[1]) @[Rename.scala 70:101]
    node _map_table_1_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_1_T_5 = bits(remap_idx_1, 1, 1) @[Rename.scala 70:153]
    node _map_table_1_T_6 = and(_map_table_1_T_4, _map_table_1_T_5) @[Rename.scala 70:138]
    node _map_table_1_T_7 = mux(_map_table_1_T_6, io.rename_info.bits[1].des_rob, _map_table_1_T_3) @[Rename.scala 70:101]
    map_table[1] <= _map_table_1_T_7 @[Rename.scala 70:18]
    node _map_table_2_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_2_T_1 = bits(remap_idx_0, 2, 2) @[Rename.scala 70:153]
    node _map_table_2_T_2 = and(_map_table_2_T, _map_table_2_T_1) @[Rename.scala 70:138]
    node _map_table_2_T_3 = mux(_map_table_2_T_2, io.rename_info.bits[0].des_rob, map_table[2]) @[Rename.scala 70:101]
    node _map_table_2_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_2_T_5 = bits(remap_idx_1, 2, 2) @[Rename.scala 70:153]
    node _map_table_2_T_6 = and(_map_table_2_T_4, _map_table_2_T_5) @[Rename.scala 70:138]
    node _map_table_2_T_7 = mux(_map_table_2_T_6, io.rename_info.bits[1].des_rob, _map_table_2_T_3) @[Rename.scala 70:101]
    map_table[2] <= _map_table_2_T_7 @[Rename.scala 70:18]
    node _map_table_3_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_3_T_1 = bits(remap_idx_0, 3, 3) @[Rename.scala 70:153]
    node _map_table_3_T_2 = and(_map_table_3_T, _map_table_3_T_1) @[Rename.scala 70:138]
    node _map_table_3_T_3 = mux(_map_table_3_T_2, io.rename_info.bits[0].des_rob, map_table[3]) @[Rename.scala 70:101]
    node _map_table_3_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_3_T_5 = bits(remap_idx_1, 3, 3) @[Rename.scala 70:153]
    node _map_table_3_T_6 = and(_map_table_3_T_4, _map_table_3_T_5) @[Rename.scala 70:138]
    node _map_table_3_T_7 = mux(_map_table_3_T_6, io.rename_info.bits[1].des_rob, _map_table_3_T_3) @[Rename.scala 70:101]
    map_table[3] <= _map_table_3_T_7 @[Rename.scala 70:18]
    node _map_table_4_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_4_T_1 = bits(remap_idx_0, 4, 4) @[Rename.scala 70:153]
    node _map_table_4_T_2 = and(_map_table_4_T, _map_table_4_T_1) @[Rename.scala 70:138]
    node _map_table_4_T_3 = mux(_map_table_4_T_2, io.rename_info.bits[0].des_rob, map_table[4]) @[Rename.scala 70:101]
    node _map_table_4_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_4_T_5 = bits(remap_idx_1, 4, 4) @[Rename.scala 70:153]
    node _map_table_4_T_6 = and(_map_table_4_T_4, _map_table_4_T_5) @[Rename.scala 70:138]
    node _map_table_4_T_7 = mux(_map_table_4_T_6, io.rename_info.bits[1].des_rob, _map_table_4_T_3) @[Rename.scala 70:101]
    map_table[4] <= _map_table_4_T_7 @[Rename.scala 70:18]
    node _map_table_5_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_5_T_1 = bits(remap_idx_0, 5, 5) @[Rename.scala 70:153]
    node _map_table_5_T_2 = and(_map_table_5_T, _map_table_5_T_1) @[Rename.scala 70:138]
    node _map_table_5_T_3 = mux(_map_table_5_T_2, io.rename_info.bits[0].des_rob, map_table[5]) @[Rename.scala 70:101]
    node _map_table_5_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_5_T_5 = bits(remap_idx_1, 5, 5) @[Rename.scala 70:153]
    node _map_table_5_T_6 = and(_map_table_5_T_4, _map_table_5_T_5) @[Rename.scala 70:138]
    node _map_table_5_T_7 = mux(_map_table_5_T_6, io.rename_info.bits[1].des_rob, _map_table_5_T_3) @[Rename.scala 70:101]
    map_table[5] <= _map_table_5_T_7 @[Rename.scala 70:18]
    node _map_table_6_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_6_T_1 = bits(remap_idx_0, 6, 6) @[Rename.scala 70:153]
    node _map_table_6_T_2 = and(_map_table_6_T, _map_table_6_T_1) @[Rename.scala 70:138]
    node _map_table_6_T_3 = mux(_map_table_6_T_2, io.rename_info.bits[0].des_rob, map_table[6]) @[Rename.scala 70:101]
    node _map_table_6_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_6_T_5 = bits(remap_idx_1, 6, 6) @[Rename.scala 70:153]
    node _map_table_6_T_6 = and(_map_table_6_T_4, _map_table_6_T_5) @[Rename.scala 70:138]
    node _map_table_6_T_7 = mux(_map_table_6_T_6, io.rename_info.bits[1].des_rob, _map_table_6_T_3) @[Rename.scala 70:101]
    map_table[6] <= _map_table_6_T_7 @[Rename.scala 70:18]
    node _map_table_7_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_7_T_1 = bits(remap_idx_0, 7, 7) @[Rename.scala 70:153]
    node _map_table_7_T_2 = and(_map_table_7_T, _map_table_7_T_1) @[Rename.scala 70:138]
    node _map_table_7_T_3 = mux(_map_table_7_T_2, io.rename_info.bits[0].des_rob, map_table[7]) @[Rename.scala 70:101]
    node _map_table_7_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_7_T_5 = bits(remap_idx_1, 7, 7) @[Rename.scala 70:153]
    node _map_table_7_T_6 = and(_map_table_7_T_4, _map_table_7_T_5) @[Rename.scala 70:138]
    node _map_table_7_T_7 = mux(_map_table_7_T_6, io.rename_info.bits[1].des_rob, _map_table_7_T_3) @[Rename.scala 70:101]
    map_table[7] <= _map_table_7_T_7 @[Rename.scala 70:18]
    node _map_table_8_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_8_T_1 = bits(remap_idx_0, 8, 8) @[Rename.scala 70:153]
    node _map_table_8_T_2 = and(_map_table_8_T, _map_table_8_T_1) @[Rename.scala 70:138]
    node _map_table_8_T_3 = mux(_map_table_8_T_2, io.rename_info.bits[0].des_rob, map_table[8]) @[Rename.scala 70:101]
    node _map_table_8_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_8_T_5 = bits(remap_idx_1, 8, 8) @[Rename.scala 70:153]
    node _map_table_8_T_6 = and(_map_table_8_T_4, _map_table_8_T_5) @[Rename.scala 70:138]
    node _map_table_8_T_7 = mux(_map_table_8_T_6, io.rename_info.bits[1].des_rob, _map_table_8_T_3) @[Rename.scala 70:101]
    map_table[8] <= _map_table_8_T_7 @[Rename.scala 70:18]
    node _map_table_9_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_9_T_1 = bits(remap_idx_0, 9, 9) @[Rename.scala 70:153]
    node _map_table_9_T_2 = and(_map_table_9_T, _map_table_9_T_1) @[Rename.scala 70:138]
    node _map_table_9_T_3 = mux(_map_table_9_T_2, io.rename_info.bits[0].des_rob, map_table[9]) @[Rename.scala 70:101]
    node _map_table_9_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_9_T_5 = bits(remap_idx_1, 9, 9) @[Rename.scala 70:153]
    node _map_table_9_T_6 = and(_map_table_9_T_4, _map_table_9_T_5) @[Rename.scala 70:138]
    node _map_table_9_T_7 = mux(_map_table_9_T_6, io.rename_info.bits[1].des_rob, _map_table_9_T_3) @[Rename.scala 70:101]
    map_table[9] <= _map_table_9_T_7 @[Rename.scala 70:18]
    node _map_table_10_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_10_T_1 = bits(remap_idx_0, 10, 10) @[Rename.scala 70:153]
    node _map_table_10_T_2 = and(_map_table_10_T, _map_table_10_T_1) @[Rename.scala 70:138]
    node _map_table_10_T_3 = mux(_map_table_10_T_2, io.rename_info.bits[0].des_rob, map_table[10]) @[Rename.scala 70:101]
    node _map_table_10_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_10_T_5 = bits(remap_idx_1, 10, 10) @[Rename.scala 70:153]
    node _map_table_10_T_6 = and(_map_table_10_T_4, _map_table_10_T_5) @[Rename.scala 70:138]
    node _map_table_10_T_7 = mux(_map_table_10_T_6, io.rename_info.bits[1].des_rob, _map_table_10_T_3) @[Rename.scala 70:101]
    map_table[10] <= _map_table_10_T_7 @[Rename.scala 70:18]
    node _map_table_11_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_11_T_1 = bits(remap_idx_0, 11, 11) @[Rename.scala 70:153]
    node _map_table_11_T_2 = and(_map_table_11_T, _map_table_11_T_1) @[Rename.scala 70:138]
    node _map_table_11_T_3 = mux(_map_table_11_T_2, io.rename_info.bits[0].des_rob, map_table[11]) @[Rename.scala 70:101]
    node _map_table_11_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_11_T_5 = bits(remap_idx_1, 11, 11) @[Rename.scala 70:153]
    node _map_table_11_T_6 = and(_map_table_11_T_4, _map_table_11_T_5) @[Rename.scala 70:138]
    node _map_table_11_T_7 = mux(_map_table_11_T_6, io.rename_info.bits[1].des_rob, _map_table_11_T_3) @[Rename.scala 70:101]
    map_table[11] <= _map_table_11_T_7 @[Rename.scala 70:18]
    node _map_table_12_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_12_T_1 = bits(remap_idx_0, 12, 12) @[Rename.scala 70:153]
    node _map_table_12_T_2 = and(_map_table_12_T, _map_table_12_T_1) @[Rename.scala 70:138]
    node _map_table_12_T_3 = mux(_map_table_12_T_2, io.rename_info.bits[0].des_rob, map_table[12]) @[Rename.scala 70:101]
    node _map_table_12_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_12_T_5 = bits(remap_idx_1, 12, 12) @[Rename.scala 70:153]
    node _map_table_12_T_6 = and(_map_table_12_T_4, _map_table_12_T_5) @[Rename.scala 70:138]
    node _map_table_12_T_7 = mux(_map_table_12_T_6, io.rename_info.bits[1].des_rob, _map_table_12_T_3) @[Rename.scala 70:101]
    map_table[12] <= _map_table_12_T_7 @[Rename.scala 70:18]
    node _map_table_13_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_13_T_1 = bits(remap_idx_0, 13, 13) @[Rename.scala 70:153]
    node _map_table_13_T_2 = and(_map_table_13_T, _map_table_13_T_1) @[Rename.scala 70:138]
    node _map_table_13_T_3 = mux(_map_table_13_T_2, io.rename_info.bits[0].des_rob, map_table[13]) @[Rename.scala 70:101]
    node _map_table_13_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_13_T_5 = bits(remap_idx_1, 13, 13) @[Rename.scala 70:153]
    node _map_table_13_T_6 = and(_map_table_13_T_4, _map_table_13_T_5) @[Rename.scala 70:138]
    node _map_table_13_T_7 = mux(_map_table_13_T_6, io.rename_info.bits[1].des_rob, _map_table_13_T_3) @[Rename.scala 70:101]
    map_table[13] <= _map_table_13_T_7 @[Rename.scala 70:18]
    node _map_table_14_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_14_T_1 = bits(remap_idx_0, 14, 14) @[Rename.scala 70:153]
    node _map_table_14_T_2 = and(_map_table_14_T, _map_table_14_T_1) @[Rename.scala 70:138]
    node _map_table_14_T_3 = mux(_map_table_14_T_2, io.rename_info.bits[0].des_rob, map_table[14]) @[Rename.scala 70:101]
    node _map_table_14_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_14_T_5 = bits(remap_idx_1, 14, 14) @[Rename.scala 70:153]
    node _map_table_14_T_6 = and(_map_table_14_T_4, _map_table_14_T_5) @[Rename.scala 70:138]
    node _map_table_14_T_7 = mux(_map_table_14_T_6, io.rename_info.bits[1].des_rob, _map_table_14_T_3) @[Rename.scala 70:101]
    map_table[14] <= _map_table_14_T_7 @[Rename.scala 70:18]
    node _map_table_15_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_15_T_1 = bits(remap_idx_0, 15, 15) @[Rename.scala 70:153]
    node _map_table_15_T_2 = and(_map_table_15_T, _map_table_15_T_1) @[Rename.scala 70:138]
    node _map_table_15_T_3 = mux(_map_table_15_T_2, io.rename_info.bits[0].des_rob, map_table[15]) @[Rename.scala 70:101]
    node _map_table_15_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_15_T_5 = bits(remap_idx_1, 15, 15) @[Rename.scala 70:153]
    node _map_table_15_T_6 = and(_map_table_15_T_4, _map_table_15_T_5) @[Rename.scala 70:138]
    node _map_table_15_T_7 = mux(_map_table_15_T_6, io.rename_info.bits[1].des_rob, _map_table_15_T_3) @[Rename.scala 70:101]
    map_table[15] <= _map_table_15_T_7 @[Rename.scala 70:18]
    node _map_table_16_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_16_T_1 = bits(remap_idx_0, 16, 16) @[Rename.scala 70:153]
    node _map_table_16_T_2 = and(_map_table_16_T, _map_table_16_T_1) @[Rename.scala 70:138]
    node _map_table_16_T_3 = mux(_map_table_16_T_2, io.rename_info.bits[0].des_rob, map_table[16]) @[Rename.scala 70:101]
    node _map_table_16_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_16_T_5 = bits(remap_idx_1, 16, 16) @[Rename.scala 70:153]
    node _map_table_16_T_6 = and(_map_table_16_T_4, _map_table_16_T_5) @[Rename.scala 70:138]
    node _map_table_16_T_7 = mux(_map_table_16_T_6, io.rename_info.bits[1].des_rob, _map_table_16_T_3) @[Rename.scala 70:101]
    map_table[16] <= _map_table_16_T_7 @[Rename.scala 70:18]
    node _map_table_17_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_17_T_1 = bits(remap_idx_0, 17, 17) @[Rename.scala 70:153]
    node _map_table_17_T_2 = and(_map_table_17_T, _map_table_17_T_1) @[Rename.scala 70:138]
    node _map_table_17_T_3 = mux(_map_table_17_T_2, io.rename_info.bits[0].des_rob, map_table[17]) @[Rename.scala 70:101]
    node _map_table_17_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_17_T_5 = bits(remap_idx_1, 17, 17) @[Rename.scala 70:153]
    node _map_table_17_T_6 = and(_map_table_17_T_4, _map_table_17_T_5) @[Rename.scala 70:138]
    node _map_table_17_T_7 = mux(_map_table_17_T_6, io.rename_info.bits[1].des_rob, _map_table_17_T_3) @[Rename.scala 70:101]
    map_table[17] <= _map_table_17_T_7 @[Rename.scala 70:18]
    node _map_table_18_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_18_T_1 = bits(remap_idx_0, 18, 18) @[Rename.scala 70:153]
    node _map_table_18_T_2 = and(_map_table_18_T, _map_table_18_T_1) @[Rename.scala 70:138]
    node _map_table_18_T_3 = mux(_map_table_18_T_2, io.rename_info.bits[0].des_rob, map_table[18]) @[Rename.scala 70:101]
    node _map_table_18_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_18_T_5 = bits(remap_idx_1, 18, 18) @[Rename.scala 70:153]
    node _map_table_18_T_6 = and(_map_table_18_T_4, _map_table_18_T_5) @[Rename.scala 70:138]
    node _map_table_18_T_7 = mux(_map_table_18_T_6, io.rename_info.bits[1].des_rob, _map_table_18_T_3) @[Rename.scala 70:101]
    map_table[18] <= _map_table_18_T_7 @[Rename.scala 70:18]
    node _map_table_19_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_19_T_1 = bits(remap_idx_0, 19, 19) @[Rename.scala 70:153]
    node _map_table_19_T_2 = and(_map_table_19_T, _map_table_19_T_1) @[Rename.scala 70:138]
    node _map_table_19_T_3 = mux(_map_table_19_T_2, io.rename_info.bits[0].des_rob, map_table[19]) @[Rename.scala 70:101]
    node _map_table_19_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_19_T_5 = bits(remap_idx_1, 19, 19) @[Rename.scala 70:153]
    node _map_table_19_T_6 = and(_map_table_19_T_4, _map_table_19_T_5) @[Rename.scala 70:138]
    node _map_table_19_T_7 = mux(_map_table_19_T_6, io.rename_info.bits[1].des_rob, _map_table_19_T_3) @[Rename.scala 70:101]
    map_table[19] <= _map_table_19_T_7 @[Rename.scala 70:18]
    node _map_table_20_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_20_T_1 = bits(remap_idx_0, 20, 20) @[Rename.scala 70:153]
    node _map_table_20_T_2 = and(_map_table_20_T, _map_table_20_T_1) @[Rename.scala 70:138]
    node _map_table_20_T_3 = mux(_map_table_20_T_2, io.rename_info.bits[0].des_rob, map_table[20]) @[Rename.scala 70:101]
    node _map_table_20_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_20_T_5 = bits(remap_idx_1, 20, 20) @[Rename.scala 70:153]
    node _map_table_20_T_6 = and(_map_table_20_T_4, _map_table_20_T_5) @[Rename.scala 70:138]
    node _map_table_20_T_7 = mux(_map_table_20_T_6, io.rename_info.bits[1].des_rob, _map_table_20_T_3) @[Rename.scala 70:101]
    map_table[20] <= _map_table_20_T_7 @[Rename.scala 70:18]
    node _map_table_21_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_21_T_1 = bits(remap_idx_0, 21, 21) @[Rename.scala 70:153]
    node _map_table_21_T_2 = and(_map_table_21_T, _map_table_21_T_1) @[Rename.scala 70:138]
    node _map_table_21_T_3 = mux(_map_table_21_T_2, io.rename_info.bits[0].des_rob, map_table[21]) @[Rename.scala 70:101]
    node _map_table_21_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_21_T_5 = bits(remap_idx_1, 21, 21) @[Rename.scala 70:153]
    node _map_table_21_T_6 = and(_map_table_21_T_4, _map_table_21_T_5) @[Rename.scala 70:138]
    node _map_table_21_T_7 = mux(_map_table_21_T_6, io.rename_info.bits[1].des_rob, _map_table_21_T_3) @[Rename.scala 70:101]
    map_table[21] <= _map_table_21_T_7 @[Rename.scala 70:18]
    node _map_table_22_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_22_T_1 = bits(remap_idx_0, 22, 22) @[Rename.scala 70:153]
    node _map_table_22_T_2 = and(_map_table_22_T, _map_table_22_T_1) @[Rename.scala 70:138]
    node _map_table_22_T_3 = mux(_map_table_22_T_2, io.rename_info.bits[0].des_rob, map_table[22]) @[Rename.scala 70:101]
    node _map_table_22_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_22_T_5 = bits(remap_idx_1, 22, 22) @[Rename.scala 70:153]
    node _map_table_22_T_6 = and(_map_table_22_T_4, _map_table_22_T_5) @[Rename.scala 70:138]
    node _map_table_22_T_7 = mux(_map_table_22_T_6, io.rename_info.bits[1].des_rob, _map_table_22_T_3) @[Rename.scala 70:101]
    map_table[22] <= _map_table_22_T_7 @[Rename.scala 70:18]
    node _map_table_23_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_23_T_1 = bits(remap_idx_0, 23, 23) @[Rename.scala 70:153]
    node _map_table_23_T_2 = and(_map_table_23_T, _map_table_23_T_1) @[Rename.scala 70:138]
    node _map_table_23_T_3 = mux(_map_table_23_T_2, io.rename_info.bits[0].des_rob, map_table[23]) @[Rename.scala 70:101]
    node _map_table_23_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_23_T_5 = bits(remap_idx_1, 23, 23) @[Rename.scala 70:153]
    node _map_table_23_T_6 = and(_map_table_23_T_4, _map_table_23_T_5) @[Rename.scala 70:138]
    node _map_table_23_T_7 = mux(_map_table_23_T_6, io.rename_info.bits[1].des_rob, _map_table_23_T_3) @[Rename.scala 70:101]
    map_table[23] <= _map_table_23_T_7 @[Rename.scala 70:18]
    node _map_table_24_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_24_T_1 = bits(remap_idx_0, 24, 24) @[Rename.scala 70:153]
    node _map_table_24_T_2 = and(_map_table_24_T, _map_table_24_T_1) @[Rename.scala 70:138]
    node _map_table_24_T_3 = mux(_map_table_24_T_2, io.rename_info.bits[0].des_rob, map_table[24]) @[Rename.scala 70:101]
    node _map_table_24_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_24_T_5 = bits(remap_idx_1, 24, 24) @[Rename.scala 70:153]
    node _map_table_24_T_6 = and(_map_table_24_T_4, _map_table_24_T_5) @[Rename.scala 70:138]
    node _map_table_24_T_7 = mux(_map_table_24_T_6, io.rename_info.bits[1].des_rob, _map_table_24_T_3) @[Rename.scala 70:101]
    map_table[24] <= _map_table_24_T_7 @[Rename.scala 70:18]
    node _map_table_25_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_25_T_1 = bits(remap_idx_0, 25, 25) @[Rename.scala 70:153]
    node _map_table_25_T_2 = and(_map_table_25_T, _map_table_25_T_1) @[Rename.scala 70:138]
    node _map_table_25_T_3 = mux(_map_table_25_T_2, io.rename_info.bits[0].des_rob, map_table[25]) @[Rename.scala 70:101]
    node _map_table_25_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_25_T_5 = bits(remap_idx_1, 25, 25) @[Rename.scala 70:153]
    node _map_table_25_T_6 = and(_map_table_25_T_4, _map_table_25_T_5) @[Rename.scala 70:138]
    node _map_table_25_T_7 = mux(_map_table_25_T_6, io.rename_info.bits[1].des_rob, _map_table_25_T_3) @[Rename.scala 70:101]
    map_table[25] <= _map_table_25_T_7 @[Rename.scala 70:18]
    node _map_table_26_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_26_T_1 = bits(remap_idx_0, 26, 26) @[Rename.scala 70:153]
    node _map_table_26_T_2 = and(_map_table_26_T, _map_table_26_T_1) @[Rename.scala 70:138]
    node _map_table_26_T_3 = mux(_map_table_26_T_2, io.rename_info.bits[0].des_rob, map_table[26]) @[Rename.scala 70:101]
    node _map_table_26_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_26_T_5 = bits(remap_idx_1, 26, 26) @[Rename.scala 70:153]
    node _map_table_26_T_6 = and(_map_table_26_T_4, _map_table_26_T_5) @[Rename.scala 70:138]
    node _map_table_26_T_7 = mux(_map_table_26_T_6, io.rename_info.bits[1].des_rob, _map_table_26_T_3) @[Rename.scala 70:101]
    map_table[26] <= _map_table_26_T_7 @[Rename.scala 70:18]
    node _map_table_27_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_27_T_1 = bits(remap_idx_0, 27, 27) @[Rename.scala 70:153]
    node _map_table_27_T_2 = and(_map_table_27_T, _map_table_27_T_1) @[Rename.scala 70:138]
    node _map_table_27_T_3 = mux(_map_table_27_T_2, io.rename_info.bits[0].des_rob, map_table[27]) @[Rename.scala 70:101]
    node _map_table_27_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_27_T_5 = bits(remap_idx_1, 27, 27) @[Rename.scala 70:153]
    node _map_table_27_T_6 = and(_map_table_27_T_4, _map_table_27_T_5) @[Rename.scala 70:138]
    node _map_table_27_T_7 = mux(_map_table_27_T_6, io.rename_info.bits[1].des_rob, _map_table_27_T_3) @[Rename.scala 70:101]
    map_table[27] <= _map_table_27_T_7 @[Rename.scala 70:18]
    node _map_table_28_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_28_T_1 = bits(remap_idx_0, 28, 28) @[Rename.scala 70:153]
    node _map_table_28_T_2 = and(_map_table_28_T, _map_table_28_T_1) @[Rename.scala 70:138]
    node _map_table_28_T_3 = mux(_map_table_28_T_2, io.rename_info.bits[0].des_rob, map_table[28]) @[Rename.scala 70:101]
    node _map_table_28_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_28_T_5 = bits(remap_idx_1, 28, 28) @[Rename.scala 70:153]
    node _map_table_28_T_6 = and(_map_table_28_T_4, _map_table_28_T_5) @[Rename.scala 70:138]
    node _map_table_28_T_7 = mux(_map_table_28_T_6, io.rename_info.bits[1].des_rob, _map_table_28_T_3) @[Rename.scala 70:101]
    map_table[28] <= _map_table_28_T_7 @[Rename.scala 70:18]
    node _map_table_29_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_29_T_1 = bits(remap_idx_0, 29, 29) @[Rename.scala 70:153]
    node _map_table_29_T_2 = and(_map_table_29_T, _map_table_29_T_1) @[Rename.scala 70:138]
    node _map_table_29_T_3 = mux(_map_table_29_T_2, io.rename_info.bits[0].des_rob, map_table[29]) @[Rename.scala 70:101]
    node _map_table_29_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_29_T_5 = bits(remap_idx_1, 29, 29) @[Rename.scala 70:153]
    node _map_table_29_T_6 = and(_map_table_29_T_4, _map_table_29_T_5) @[Rename.scala 70:138]
    node _map_table_29_T_7 = mux(_map_table_29_T_6, io.rename_info.bits[1].des_rob, _map_table_29_T_3) @[Rename.scala 70:101]
    map_table[29] <= _map_table_29_T_7 @[Rename.scala 70:18]
    node _map_table_30_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_30_T_1 = bits(remap_idx_0, 30, 30) @[Rename.scala 70:153]
    node _map_table_30_T_2 = and(_map_table_30_T, _map_table_30_T_1) @[Rename.scala 70:138]
    node _map_table_30_T_3 = mux(_map_table_30_T_2, io.rename_info.bits[0].des_rob, map_table[30]) @[Rename.scala 70:101]
    node _map_table_30_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_30_T_5 = bits(remap_idx_1, 30, 30) @[Rename.scala 70:153]
    node _map_table_30_T_6 = and(_map_table_30_T_4, _map_table_30_T_5) @[Rename.scala 70:138]
    node _map_table_30_T_7 = mux(_map_table_30_T_6, io.rename_info.bits[1].des_rob, _map_table_30_T_3) @[Rename.scala 70:101]
    map_table[30] <= _map_table_30_T_7 @[Rename.scala 70:18]
    node _map_table_31_T = and(io.rename_info.valid, io.rename_info.bits[0].is_valid) @[Rename.scala 70:122]
    node _map_table_31_T_1 = bits(remap_idx_0, 31, 31) @[Rename.scala 70:153]
    node _map_table_31_T_2 = and(_map_table_31_T, _map_table_31_T_1) @[Rename.scala 70:138]
    node _map_table_31_T_3 = mux(_map_table_31_T_2, io.rename_info.bits[0].des_rob, map_table[31]) @[Rename.scala 70:101]
    node _map_table_31_T_4 = and(io.rename_info.valid, io.rename_info.bits[1].is_valid) @[Rename.scala 70:122]
    node _map_table_31_T_5 = bits(remap_idx_1, 31, 31) @[Rename.scala 70:153]
    node _map_table_31_T_6 = and(_map_table_31_T_4, _map_table_31_T_5) @[Rename.scala 70:138]
    node _map_table_31_T_7 = mux(_map_table_31_T_6, io.rename_info.bits[1].des_rob, _map_table_31_T_3) @[Rename.scala 70:101]
    map_table[31] <= _map_table_31_T_7 @[Rename.scala 70:18]
    reg rob_init_info : {is_valid : UInt<1>, des_rob : UInt<3>, op1_rob : UInt<3>, op2_rob : UInt<3>, op1_regData : UInt<32>, op2_regData : UInt<32>, op1_in_rob : UInt<1>, op2_in_rob : UInt<1>}[2], clock @[Rename.scala 73:26]
    reg rob_init_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Rename.scala 74:36]
    io.rob_init_info.bits[0].op2_in_rob <= rob_init_info[0].op2_in_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[0].op1_in_rob <= rob_init_info[0].op1_in_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[0].op2_regData <= rob_init_info[0].op2_regData @[Rename.scala 75:25]
    io.rob_init_info.bits[0].op1_regData <= rob_init_info[0].op1_regData @[Rename.scala 75:25]
    io.rob_init_info.bits[0].op2_rob <= rob_init_info[0].op2_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[0].op1_rob <= rob_init_info[0].op1_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[0].des_rob <= rob_init_info[0].des_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[0].is_valid <= rob_init_info[0].is_valid @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op2_in_rob <= rob_init_info[1].op2_in_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op1_in_rob <= rob_init_info[1].op1_in_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op2_regData <= rob_init_info[1].op2_regData @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op1_regData <= rob_init_info[1].op1_regData @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op2_rob <= rob_init_info[1].op2_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[1].op1_rob <= rob_init_info[1].op1_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[1].des_rob <= rob_init_info[1].des_rob @[Rename.scala 75:25]
    io.rob_init_info.bits[1].is_valid <= rob_init_info[1].is_valid @[Rename.scala 75:25]
    io.rob_init_info.valid <= rob_init_info_valid @[Rename.scala 76:26]
    rob_init_info[0].op1_rob <= map_table[io.rename_info.bits[0].op1_addr] @[Rename.scala 79:30]
    rob_init_info[0].op2_rob <= map_table[io.rename_info.bits[0].op2_addr] @[Rename.scala 82:30]
    node _rob_init_info_0_op1_in_rob_T = dshr(busy_table_wb, io.rename_info.bits[0].op1_addr) @[Rename.scala 85:221]
    node _rob_init_info_0_op1_in_rob_T_1 = bits(_rob_init_info_0_op1_in_rob_T, 0, 0) @[Rename.scala 85:221]
    rob_init_info[0].op1_in_rob <= _rob_init_info_0_op1_in_rob_T_1 @[Rename.scala 85:32]
    node _rob_init_info_0_op2_in_rob_T = dshr(busy_table_wb, io.rename_info.bits[0].op2_addr) @[Rename.scala 86:221]
    node _rob_init_info_0_op2_in_rob_T_1 = bits(_rob_init_info_0_op2_in_rob_T, 0, 0) @[Rename.scala 86:221]
    rob_init_info[0].op2_in_rob <= _rob_init_info_0_op2_in_rob_T_1 @[Rename.scala 86:32]
    io.reg_read[0].op1_addr <= io.rename_info.bits[0].op1_addr @[Rename.scala 87:29]
    io.reg_read[0].op2_addr <= io.rename_info.bits[0].op2_addr @[Rename.scala 88:29]
    rob_init_info[0].op1_regData <= io.reg_read[0].op1_data @[Rename.scala 89:34]
    rob_init_info[0].op2_regData <= io.reg_read[0].op2_data @[Rename.scala 90:34]
    rob_init_info[0].des_rob <= io.rename_info.bits[0].des_rob @[Rename.scala 91:29]
    rob_init_info[0].is_valid <= io.rename_info.bits[0].is_valid @[Rename.scala 92:30]
    node _rob_init_info_1_op1_rob_T = eq(io.rename_info.bits[0].des_addr, io.rename_info.bits[1].op1_addr) @[Rename.scala 80:88]
    node _rob_init_info_1_op1_rob_T_1 = and(io.rename_info.bits[0].is_valid, _rob_init_info_1_op1_rob_T) @[Rename.scala 80:53]
    node _rob_init_info_1_op1_rob_T_2 = mux(_rob_init_info_1_op1_rob_T_1, io.rename_info.bits[0].des_rob, map_table[io.rename_info.bits[1].op1_addr]) @[Rename.scala 80:20]
    rob_init_info[1].op1_rob <= _rob_init_info_1_op1_rob_T_2 @[Rename.scala 79:30]
    node _rob_init_info_1_op2_rob_T = eq(io.rename_info.bits[0].des_addr, io.rename_info.bits[1].op2_addr) @[Rename.scala 83:88]
    node _rob_init_info_1_op2_rob_T_1 = and(io.rename_info.bits[0].is_valid, _rob_init_info_1_op2_rob_T) @[Rename.scala 83:53]
    node _rob_init_info_1_op2_rob_T_2 = mux(_rob_init_info_1_op2_rob_T_1, io.rename_info.bits[0].des_rob, map_table[io.rename_info.bits[1].op2_addr]) @[Rename.scala 83:20]
    rob_init_info[1].op2_rob <= _rob_init_info_1_op2_rob_T_2 @[Rename.scala 82:30]
    node _rob_init_info_1_op1_in_rob_T = eq(io.rename_info.bits[0].des_addr, io.rename_info.bits[1].op1_addr) @[Rename.scala 85:120]
    node _rob_init_info_1_op1_in_rob_T_1 = and(io.rename_info.bits[0].is_valid, _rob_init_info_1_op1_in_rob_T) @[Rename.scala 85:85]
    node _rob_init_info_1_op1_in_rob_T_2 = neq(io.rename_info.bits[0].des_addr, UInt<1>("h00")) @[Rename.scala 85:190]
    node _rob_init_info_1_op1_in_rob_T_3 = and(_rob_init_info_1_op1_in_rob_T_1, _rob_init_info_1_op1_in_rob_T_2) @[Rename.scala 85:155]
    node _rob_init_info_1_op1_in_rob_T_4 = dshr(busy_table_wb, io.rename_info.bits[1].op1_addr) @[Rename.scala 85:221]
    node _rob_init_info_1_op1_in_rob_T_5 = bits(_rob_init_info_1_op1_in_rob_T_4, 0, 0) @[Rename.scala 85:221]
    node _rob_init_info_1_op1_in_rob_T_6 = or(_rob_init_info_1_op1_in_rob_T_5, _rob_init_info_1_op1_in_rob_T_3) @[Rename.scala 85:257]
    rob_init_info[1].op1_in_rob <= _rob_init_info_1_op1_in_rob_T_6 @[Rename.scala 85:32]
    node _rob_init_info_1_op2_in_rob_T = eq(io.rename_info.bits[0].des_addr, io.rename_info.bits[1].op2_addr) @[Rename.scala 86:120]
    node _rob_init_info_1_op2_in_rob_T_1 = and(io.rename_info.bits[0].is_valid, _rob_init_info_1_op2_in_rob_T) @[Rename.scala 86:85]
    node _rob_init_info_1_op2_in_rob_T_2 = neq(io.rename_info.bits[0].des_addr, UInt<1>("h00")) @[Rename.scala 86:190]
    node _rob_init_info_1_op2_in_rob_T_3 = and(_rob_init_info_1_op2_in_rob_T_1, _rob_init_info_1_op2_in_rob_T_2) @[Rename.scala 86:155]
    node _rob_init_info_1_op2_in_rob_T_4 = dshr(busy_table_wb, io.rename_info.bits[1].op2_addr) @[Rename.scala 86:221]
    node _rob_init_info_1_op2_in_rob_T_5 = bits(_rob_init_info_1_op2_in_rob_T_4, 0, 0) @[Rename.scala 86:221]
    node _rob_init_info_1_op2_in_rob_T_6 = or(_rob_init_info_1_op2_in_rob_T_5, _rob_init_info_1_op2_in_rob_T_3) @[Rename.scala 86:257]
    rob_init_info[1].op2_in_rob <= _rob_init_info_1_op2_in_rob_T_6 @[Rename.scala 86:32]
    io.reg_read[1].op1_addr <= io.rename_info.bits[1].op1_addr @[Rename.scala 87:29]
    io.reg_read[1].op2_addr <= io.rename_info.bits[1].op2_addr @[Rename.scala 88:29]
    rob_init_info[1].op1_regData <= io.reg_read[1].op1_data @[Rename.scala 89:34]
    rob_init_info[1].op2_regData <= io.reg_read[1].op2_data @[Rename.scala 90:34]
    rob_init_info[1].des_rob <= io.rename_info.bits[1].des_rob @[Rename.scala 91:29]
    rob_init_info[1].is_valid <= io.rename_info.bits[1].is_valid @[Rename.scala 92:30]
    rob_init_info_valid <= io.rename_info.valid @[Rename.scala 94:22]
    when io.need_flush : @[Rename.scala 96:22]
      rob_init_info[0].is_valid <= UInt<1>("h00") @[Rename.scala 31:14]
      rob_init_info[0].des_rob <= UInt<3>("h00") @[Rename.scala 32:13]
      rob_init_info[0].op1_rob <= UInt<3>("h00") @[Rename.scala 33:13]
      rob_init_info[0].op2_rob <= UInt<3>("h00") @[Rename.scala 34:13]
      rob_init_info[0].op1_regData <= UInt<32>("h00") @[Rename.scala 35:17]
      rob_init_info[0].op2_regData <= UInt<32>("h00") @[Rename.scala 36:17]
      rob_init_info[0].op1_in_rob <= UInt<1>("h00") @[Rename.scala 37:16]
      rob_init_info[0].op2_in_rob <= UInt<1>("h00") @[Rename.scala 38:16]
      rob_init_info[1].is_valid <= UInt<1>("h00") @[Rename.scala 31:14]
      rob_init_info[1].des_rob <= UInt<3>("h00") @[Rename.scala 32:13]
      rob_init_info[1].op1_rob <= UInt<3>("h00") @[Rename.scala 33:13]
      rob_init_info[1].op2_rob <= UInt<3>("h00") @[Rename.scala 34:13]
      rob_init_info[1].op1_regData <= UInt<32>("h00") @[Rename.scala 35:17]
      rob_init_info[1].op2_regData <= UInt<32>("h00") @[Rename.scala 36:17]
      rob_init_info[1].op1_in_rob <= UInt<1>("h00") @[Rename.scala 37:16]
      rob_init_info[1].op2_in_rob <= UInt<1>("h00") @[Rename.scala 38:16]
      rob_init_info_valid <= UInt<1>("h00") @[Rename.scala 98:24]
      skip @[Rename.scala 96:22]
    node _T = asUInt(reset) @[Rename.scala 101:20]
    when _T : @[Rename.scala 101:23]
      rob_init_info[0].is_valid <= UInt<1>("h00") @[Rename.scala 31:14]
      rob_init_info[0].des_rob <= UInt<3>("h00") @[Rename.scala 32:13]
      rob_init_info[0].op1_rob <= UInt<3>("h00") @[Rename.scala 33:13]
      rob_init_info[0].op2_rob <= UInt<3>("h00") @[Rename.scala 34:13]
      rob_init_info[0].op1_regData <= UInt<32>("h00") @[Rename.scala 35:17]
      rob_init_info[0].op2_regData <= UInt<32>("h00") @[Rename.scala 36:17]
      rob_init_info[0].op1_in_rob <= UInt<1>("h00") @[Rename.scala 37:16]
      rob_init_info[0].op2_in_rob <= UInt<1>("h00") @[Rename.scala 38:16]
      rob_init_info[1].is_valid <= UInt<1>("h00") @[Rename.scala 31:14]
      rob_init_info[1].des_rob <= UInt<3>("h00") @[Rename.scala 32:13]
      rob_init_info[1].op1_rob <= UInt<3>("h00") @[Rename.scala 33:13]
      rob_init_info[1].op2_rob <= UInt<3>("h00") @[Rename.scala 34:13]
      rob_init_info[1].op1_regData <= UInt<32>("h00") @[Rename.scala 35:17]
      rob_init_info[1].op2_regData <= UInt<32>("h00") @[Rename.scala 36:17]
      rob_init_info[1].op1_in_rob <= UInt<1>("h00") @[Rename.scala 37:16]
      rob_init_info[1].op2_in_rob <= UInt<1>("h00") @[Rename.scala 38:16]
      skip @[Rename.scala 101:23]
    
  module Regfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip reg_read : {op1_addr : UInt<5>, op2_addr : UInt<5>, flip op1_data : UInt<32>, flip op2_data : UInt<32>}[2], flip rob_commit_i : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2]}
    
    wire _regfile_WIRE : UInt<32>[32] @[Regfile.scala 18:32]
    _regfile_WIRE[0] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[1] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[2] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[3] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[4] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[5] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[6] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[7] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[8] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[9] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[10] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[11] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[12] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[13] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[14] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[15] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[16] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[17] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[18] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[19] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[20] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[21] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[22] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[23] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[24] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[25] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[26] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[27] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[28] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[29] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[30] <= UInt<32>("h00") @[Regfile.scala 18:32]
    _regfile_WIRE[31] <= UInt<32>("h00") @[Regfile.scala 18:32]
    reg regfile : UInt<32>[32], clock with : (reset => (reset, _regfile_WIRE)) @[Regfile.scala 18:24]
    wire next_data : UInt<32>[32] @[Regfile.scala 20:23]
    node commit_idx_0 = dshl(UInt<1>("h01"), io.rob_commit_i[0].bits.commit_addr) @[OneHot.scala 58:35]
    node commit_idx_1 = dshl(UInt<1>("h01"), io.rob_commit_i[1].bits.commit_addr) @[OneHot.scala 58:35]
    next_data[0] <= UInt<32>("h00") @[Regfile.scala 23:15]
    node _next_data_1_T = bits(commit_idx_0, 1, 1) @[Regfile.scala 25:119]
    node _next_data_1_T_1 = and(io.rob_commit_i[0].valid, _next_data_1_T) @[Regfile.scala 25:104]
    node _next_data_1_T_2 = mux(_next_data_1_T_1, io.rob_commit_i[0].bits.commit_data, regfile[1]) @[Regfile.scala 25:93]
    node _next_data_1_T_3 = bits(commit_idx_1, 1, 1) @[Regfile.scala 25:119]
    node _next_data_1_T_4 = and(io.rob_commit_i[1].valid, _next_data_1_T_3) @[Regfile.scala 25:104]
    node _next_data_1_T_5 = mux(_next_data_1_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_1_T_2) @[Regfile.scala 25:93]
    next_data[1] <= _next_data_1_T_5 @[Regfile.scala 25:18]
    node _next_data_2_T = bits(commit_idx_0, 2, 2) @[Regfile.scala 25:119]
    node _next_data_2_T_1 = and(io.rob_commit_i[0].valid, _next_data_2_T) @[Regfile.scala 25:104]
    node _next_data_2_T_2 = mux(_next_data_2_T_1, io.rob_commit_i[0].bits.commit_data, regfile[2]) @[Regfile.scala 25:93]
    node _next_data_2_T_3 = bits(commit_idx_1, 2, 2) @[Regfile.scala 25:119]
    node _next_data_2_T_4 = and(io.rob_commit_i[1].valid, _next_data_2_T_3) @[Regfile.scala 25:104]
    node _next_data_2_T_5 = mux(_next_data_2_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_2_T_2) @[Regfile.scala 25:93]
    next_data[2] <= _next_data_2_T_5 @[Regfile.scala 25:18]
    node _next_data_3_T = bits(commit_idx_0, 3, 3) @[Regfile.scala 25:119]
    node _next_data_3_T_1 = and(io.rob_commit_i[0].valid, _next_data_3_T) @[Regfile.scala 25:104]
    node _next_data_3_T_2 = mux(_next_data_3_T_1, io.rob_commit_i[0].bits.commit_data, regfile[3]) @[Regfile.scala 25:93]
    node _next_data_3_T_3 = bits(commit_idx_1, 3, 3) @[Regfile.scala 25:119]
    node _next_data_3_T_4 = and(io.rob_commit_i[1].valid, _next_data_3_T_3) @[Regfile.scala 25:104]
    node _next_data_3_T_5 = mux(_next_data_3_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_3_T_2) @[Regfile.scala 25:93]
    next_data[3] <= _next_data_3_T_5 @[Regfile.scala 25:18]
    node _next_data_4_T = bits(commit_idx_0, 4, 4) @[Regfile.scala 25:119]
    node _next_data_4_T_1 = and(io.rob_commit_i[0].valid, _next_data_4_T) @[Regfile.scala 25:104]
    node _next_data_4_T_2 = mux(_next_data_4_T_1, io.rob_commit_i[0].bits.commit_data, regfile[4]) @[Regfile.scala 25:93]
    node _next_data_4_T_3 = bits(commit_idx_1, 4, 4) @[Regfile.scala 25:119]
    node _next_data_4_T_4 = and(io.rob_commit_i[1].valid, _next_data_4_T_3) @[Regfile.scala 25:104]
    node _next_data_4_T_5 = mux(_next_data_4_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_4_T_2) @[Regfile.scala 25:93]
    next_data[4] <= _next_data_4_T_5 @[Regfile.scala 25:18]
    node _next_data_5_T = bits(commit_idx_0, 5, 5) @[Regfile.scala 25:119]
    node _next_data_5_T_1 = and(io.rob_commit_i[0].valid, _next_data_5_T) @[Regfile.scala 25:104]
    node _next_data_5_T_2 = mux(_next_data_5_T_1, io.rob_commit_i[0].bits.commit_data, regfile[5]) @[Regfile.scala 25:93]
    node _next_data_5_T_3 = bits(commit_idx_1, 5, 5) @[Regfile.scala 25:119]
    node _next_data_5_T_4 = and(io.rob_commit_i[1].valid, _next_data_5_T_3) @[Regfile.scala 25:104]
    node _next_data_5_T_5 = mux(_next_data_5_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_5_T_2) @[Regfile.scala 25:93]
    next_data[5] <= _next_data_5_T_5 @[Regfile.scala 25:18]
    node _next_data_6_T = bits(commit_idx_0, 6, 6) @[Regfile.scala 25:119]
    node _next_data_6_T_1 = and(io.rob_commit_i[0].valid, _next_data_6_T) @[Regfile.scala 25:104]
    node _next_data_6_T_2 = mux(_next_data_6_T_1, io.rob_commit_i[0].bits.commit_data, regfile[6]) @[Regfile.scala 25:93]
    node _next_data_6_T_3 = bits(commit_idx_1, 6, 6) @[Regfile.scala 25:119]
    node _next_data_6_T_4 = and(io.rob_commit_i[1].valid, _next_data_6_T_3) @[Regfile.scala 25:104]
    node _next_data_6_T_5 = mux(_next_data_6_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_6_T_2) @[Regfile.scala 25:93]
    next_data[6] <= _next_data_6_T_5 @[Regfile.scala 25:18]
    node _next_data_7_T = bits(commit_idx_0, 7, 7) @[Regfile.scala 25:119]
    node _next_data_7_T_1 = and(io.rob_commit_i[0].valid, _next_data_7_T) @[Regfile.scala 25:104]
    node _next_data_7_T_2 = mux(_next_data_7_T_1, io.rob_commit_i[0].bits.commit_data, regfile[7]) @[Regfile.scala 25:93]
    node _next_data_7_T_3 = bits(commit_idx_1, 7, 7) @[Regfile.scala 25:119]
    node _next_data_7_T_4 = and(io.rob_commit_i[1].valid, _next_data_7_T_3) @[Regfile.scala 25:104]
    node _next_data_7_T_5 = mux(_next_data_7_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_7_T_2) @[Regfile.scala 25:93]
    next_data[7] <= _next_data_7_T_5 @[Regfile.scala 25:18]
    node _next_data_8_T = bits(commit_idx_0, 8, 8) @[Regfile.scala 25:119]
    node _next_data_8_T_1 = and(io.rob_commit_i[0].valid, _next_data_8_T) @[Regfile.scala 25:104]
    node _next_data_8_T_2 = mux(_next_data_8_T_1, io.rob_commit_i[0].bits.commit_data, regfile[8]) @[Regfile.scala 25:93]
    node _next_data_8_T_3 = bits(commit_idx_1, 8, 8) @[Regfile.scala 25:119]
    node _next_data_8_T_4 = and(io.rob_commit_i[1].valid, _next_data_8_T_3) @[Regfile.scala 25:104]
    node _next_data_8_T_5 = mux(_next_data_8_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_8_T_2) @[Regfile.scala 25:93]
    next_data[8] <= _next_data_8_T_5 @[Regfile.scala 25:18]
    node _next_data_9_T = bits(commit_idx_0, 9, 9) @[Regfile.scala 25:119]
    node _next_data_9_T_1 = and(io.rob_commit_i[0].valid, _next_data_9_T) @[Regfile.scala 25:104]
    node _next_data_9_T_2 = mux(_next_data_9_T_1, io.rob_commit_i[0].bits.commit_data, regfile[9]) @[Regfile.scala 25:93]
    node _next_data_9_T_3 = bits(commit_idx_1, 9, 9) @[Regfile.scala 25:119]
    node _next_data_9_T_4 = and(io.rob_commit_i[1].valid, _next_data_9_T_3) @[Regfile.scala 25:104]
    node _next_data_9_T_5 = mux(_next_data_9_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_9_T_2) @[Regfile.scala 25:93]
    next_data[9] <= _next_data_9_T_5 @[Regfile.scala 25:18]
    node _next_data_10_T = bits(commit_idx_0, 10, 10) @[Regfile.scala 25:119]
    node _next_data_10_T_1 = and(io.rob_commit_i[0].valid, _next_data_10_T) @[Regfile.scala 25:104]
    node _next_data_10_T_2 = mux(_next_data_10_T_1, io.rob_commit_i[0].bits.commit_data, regfile[10]) @[Regfile.scala 25:93]
    node _next_data_10_T_3 = bits(commit_idx_1, 10, 10) @[Regfile.scala 25:119]
    node _next_data_10_T_4 = and(io.rob_commit_i[1].valid, _next_data_10_T_3) @[Regfile.scala 25:104]
    node _next_data_10_T_5 = mux(_next_data_10_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_10_T_2) @[Regfile.scala 25:93]
    next_data[10] <= _next_data_10_T_5 @[Regfile.scala 25:18]
    node _next_data_11_T = bits(commit_idx_0, 11, 11) @[Regfile.scala 25:119]
    node _next_data_11_T_1 = and(io.rob_commit_i[0].valid, _next_data_11_T) @[Regfile.scala 25:104]
    node _next_data_11_T_2 = mux(_next_data_11_T_1, io.rob_commit_i[0].bits.commit_data, regfile[11]) @[Regfile.scala 25:93]
    node _next_data_11_T_3 = bits(commit_idx_1, 11, 11) @[Regfile.scala 25:119]
    node _next_data_11_T_4 = and(io.rob_commit_i[1].valid, _next_data_11_T_3) @[Regfile.scala 25:104]
    node _next_data_11_T_5 = mux(_next_data_11_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_11_T_2) @[Regfile.scala 25:93]
    next_data[11] <= _next_data_11_T_5 @[Regfile.scala 25:18]
    node _next_data_12_T = bits(commit_idx_0, 12, 12) @[Regfile.scala 25:119]
    node _next_data_12_T_1 = and(io.rob_commit_i[0].valid, _next_data_12_T) @[Regfile.scala 25:104]
    node _next_data_12_T_2 = mux(_next_data_12_T_1, io.rob_commit_i[0].bits.commit_data, regfile[12]) @[Regfile.scala 25:93]
    node _next_data_12_T_3 = bits(commit_idx_1, 12, 12) @[Regfile.scala 25:119]
    node _next_data_12_T_4 = and(io.rob_commit_i[1].valid, _next_data_12_T_3) @[Regfile.scala 25:104]
    node _next_data_12_T_5 = mux(_next_data_12_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_12_T_2) @[Regfile.scala 25:93]
    next_data[12] <= _next_data_12_T_5 @[Regfile.scala 25:18]
    node _next_data_13_T = bits(commit_idx_0, 13, 13) @[Regfile.scala 25:119]
    node _next_data_13_T_1 = and(io.rob_commit_i[0].valid, _next_data_13_T) @[Regfile.scala 25:104]
    node _next_data_13_T_2 = mux(_next_data_13_T_1, io.rob_commit_i[0].bits.commit_data, regfile[13]) @[Regfile.scala 25:93]
    node _next_data_13_T_3 = bits(commit_idx_1, 13, 13) @[Regfile.scala 25:119]
    node _next_data_13_T_4 = and(io.rob_commit_i[1].valid, _next_data_13_T_3) @[Regfile.scala 25:104]
    node _next_data_13_T_5 = mux(_next_data_13_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_13_T_2) @[Regfile.scala 25:93]
    next_data[13] <= _next_data_13_T_5 @[Regfile.scala 25:18]
    node _next_data_14_T = bits(commit_idx_0, 14, 14) @[Regfile.scala 25:119]
    node _next_data_14_T_1 = and(io.rob_commit_i[0].valid, _next_data_14_T) @[Regfile.scala 25:104]
    node _next_data_14_T_2 = mux(_next_data_14_T_1, io.rob_commit_i[0].bits.commit_data, regfile[14]) @[Regfile.scala 25:93]
    node _next_data_14_T_3 = bits(commit_idx_1, 14, 14) @[Regfile.scala 25:119]
    node _next_data_14_T_4 = and(io.rob_commit_i[1].valid, _next_data_14_T_3) @[Regfile.scala 25:104]
    node _next_data_14_T_5 = mux(_next_data_14_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_14_T_2) @[Regfile.scala 25:93]
    next_data[14] <= _next_data_14_T_5 @[Regfile.scala 25:18]
    node _next_data_15_T = bits(commit_idx_0, 15, 15) @[Regfile.scala 25:119]
    node _next_data_15_T_1 = and(io.rob_commit_i[0].valid, _next_data_15_T) @[Regfile.scala 25:104]
    node _next_data_15_T_2 = mux(_next_data_15_T_1, io.rob_commit_i[0].bits.commit_data, regfile[15]) @[Regfile.scala 25:93]
    node _next_data_15_T_3 = bits(commit_idx_1, 15, 15) @[Regfile.scala 25:119]
    node _next_data_15_T_4 = and(io.rob_commit_i[1].valid, _next_data_15_T_3) @[Regfile.scala 25:104]
    node _next_data_15_T_5 = mux(_next_data_15_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_15_T_2) @[Regfile.scala 25:93]
    next_data[15] <= _next_data_15_T_5 @[Regfile.scala 25:18]
    node _next_data_16_T = bits(commit_idx_0, 16, 16) @[Regfile.scala 25:119]
    node _next_data_16_T_1 = and(io.rob_commit_i[0].valid, _next_data_16_T) @[Regfile.scala 25:104]
    node _next_data_16_T_2 = mux(_next_data_16_T_1, io.rob_commit_i[0].bits.commit_data, regfile[16]) @[Regfile.scala 25:93]
    node _next_data_16_T_3 = bits(commit_idx_1, 16, 16) @[Regfile.scala 25:119]
    node _next_data_16_T_4 = and(io.rob_commit_i[1].valid, _next_data_16_T_3) @[Regfile.scala 25:104]
    node _next_data_16_T_5 = mux(_next_data_16_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_16_T_2) @[Regfile.scala 25:93]
    next_data[16] <= _next_data_16_T_5 @[Regfile.scala 25:18]
    node _next_data_17_T = bits(commit_idx_0, 17, 17) @[Regfile.scala 25:119]
    node _next_data_17_T_1 = and(io.rob_commit_i[0].valid, _next_data_17_T) @[Regfile.scala 25:104]
    node _next_data_17_T_2 = mux(_next_data_17_T_1, io.rob_commit_i[0].bits.commit_data, regfile[17]) @[Regfile.scala 25:93]
    node _next_data_17_T_3 = bits(commit_idx_1, 17, 17) @[Regfile.scala 25:119]
    node _next_data_17_T_4 = and(io.rob_commit_i[1].valid, _next_data_17_T_3) @[Regfile.scala 25:104]
    node _next_data_17_T_5 = mux(_next_data_17_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_17_T_2) @[Regfile.scala 25:93]
    next_data[17] <= _next_data_17_T_5 @[Regfile.scala 25:18]
    node _next_data_18_T = bits(commit_idx_0, 18, 18) @[Regfile.scala 25:119]
    node _next_data_18_T_1 = and(io.rob_commit_i[0].valid, _next_data_18_T) @[Regfile.scala 25:104]
    node _next_data_18_T_2 = mux(_next_data_18_T_1, io.rob_commit_i[0].bits.commit_data, regfile[18]) @[Regfile.scala 25:93]
    node _next_data_18_T_3 = bits(commit_idx_1, 18, 18) @[Regfile.scala 25:119]
    node _next_data_18_T_4 = and(io.rob_commit_i[1].valid, _next_data_18_T_3) @[Regfile.scala 25:104]
    node _next_data_18_T_5 = mux(_next_data_18_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_18_T_2) @[Regfile.scala 25:93]
    next_data[18] <= _next_data_18_T_5 @[Regfile.scala 25:18]
    node _next_data_19_T = bits(commit_idx_0, 19, 19) @[Regfile.scala 25:119]
    node _next_data_19_T_1 = and(io.rob_commit_i[0].valid, _next_data_19_T) @[Regfile.scala 25:104]
    node _next_data_19_T_2 = mux(_next_data_19_T_1, io.rob_commit_i[0].bits.commit_data, regfile[19]) @[Regfile.scala 25:93]
    node _next_data_19_T_3 = bits(commit_idx_1, 19, 19) @[Regfile.scala 25:119]
    node _next_data_19_T_4 = and(io.rob_commit_i[1].valid, _next_data_19_T_3) @[Regfile.scala 25:104]
    node _next_data_19_T_5 = mux(_next_data_19_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_19_T_2) @[Regfile.scala 25:93]
    next_data[19] <= _next_data_19_T_5 @[Regfile.scala 25:18]
    node _next_data_20_T = bits(commit_idx_0, 20, 20) @[Regfile.scala 25:119]
    node _next_data_20_T_1 = and(io.rob_commit_i[0].valid, _next_data_20_T) @[Regfile.scala 25:104]
    node _next_data_20_T_2 = mux(_next_data_20_T_1, io.rob_commit_i[0].bits.commit_data, regfile[20]) @[Regfile.scala 25:93]
    node _next_data_20_T_3 = bits(commit_idx_1, 20, 20) @[Regfile.scala 25:119]
    node _next_data_20_T_4 = and(io.rob_commit_i[1].valid, _next_data_20_T_3) @[Regfile.scala 25:104]
    node _next_data_20_T_5 = mux(_next_data_20_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_20_T_2) @[Regfile.scala 25:93]
    next_data[20] <= _next_data_20_T_5 @[Regfile.scala 25:18]
    node _next_data_21_T = bits(commit_idx_0, 21, 21) @[Regfile.scala 25:119]
    node _next_data_21_T_1 = and(io.rob_commit_i[0].valid, _next_data_21_T) @[Regfile.scala 25:104]
    node _next_data_21_T_2 = mux(_next_data_21_T_1, io.rob_commit_i[0].bits.commit_data, regfile[21]) @[Regfile.scala 25:93]
    node _next_data_21_T_3 = bits(commit_idx_1, 21, 21) @[Regfile.scala 25:119]
    node _next_data_21_T_4 = and(io.rob_commit_i[1].valid, _next_data_21_T_3) @[Regfile.scala 25:104]
    node _next_data_21_T_5 = mux(_next_data_21_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_21_T_2) @[Regfile.scala 25:93]
    next_data[21] <= _next_data_21_T_5 @[Regfile.scala 25:18]
    node _next_data_22_T = bits(commit_idx_0, 22, 22) @[Regfile.scala 25:119]
    node _next_data_22_T_1 = and(io.rob_commit_i[0].valid, _next_data_22_T) @[Regfile.scala 25:104]
    node _next_data_22_T_2 = mux(_next_data_22_T_1, io.rob_commit_i[0].bits.commit_data, regfile[22]) @[Regfile.scala 25:93]
    node _next_data_22_T_3 = bits(commit_idx_1, 22, 22) @[Regfile.scala 25:119]
    node _next_data_22_T_4 = and(io.rob_commit_i[1].valid, _next_data_22_T_3) @[Regfile.scala 25:104]
    node _next_data_22_T_5 = mux(_next_data_22_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_22_T_2) @[Regfile.scala 25:93]
    next_data[22] <= _next_data_22_T_5 @[Regfile.scala 25:18]
    node _next_data_23_T = bits(commit_idx_0, 23, 23) @[Regfile.scala 25:119]
    node _next_data_23_T_1 = and(io.rob_commit_i[0].valid, _next_data_23_T) @[Regfile.scala 25:104]
    node _next_data_23_T_2 = mux(_next_data_23_T_1, io.rob_commit_i[0].bits.commit_data, regfile[23]) @[Regfile.scala 25:93]
    node _next_data_23_T_3 = bits(commit_idx_1, 23, 23) @[Regfile.scala 25:119]
    node _next_data_23_T_4 = and(io.rob_commit_i[1].valid, _next_data_23_T_3) @[Regfile.scala 25:104]
    node _next_data_23_T_5 = mux(_next_data_23_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_23_T_2) @[Regfile.scala 25:93]
    next_data[23] <= _next_data_23_T_5 @[Regfile.scala 25:18]
    node _next_data_24_T = bits(commit_idx_0, 24, 24) @[Regfile.scala 25:119]
    node _next_data_24_T_1 = and(io.rob_commit_i[0].valid, _next_data_24_T) @[Regfile.scala 25:104]
    node _next_data_24_T_2 = mux(_next_data_24_T_1, io.rob_commit_i[0].bits.commit_data, regfile[24]) @[Regfile.scala 25:93]
    node _next_data_24_T_3 = bits(commit_idx_1, 24, 24) @[Regfile.scala 25:119]
    node _next_data_24_T_4 = and(io.rob_commit_i[1].valid, _next_data_24_T_3) @[Regfile.scala 25:104]
    node _next_data_24_T_5 = mux(_next_data_24_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_24_T_2) @[Regfile.scala 25:93]
    next_data[24] <= _next_data_24_T_5 @[Regfile.scala 25:18]
    node _next_data_25_T = bits(commit_idx_0, 25, 25) @[Regfile.scala 25:119]
    node _next_data_25_T_1 = and(io.rob_commit_i[0].valid, _next_data_25_T) @[Regfile.scala 25:104]
    node _next_data_25_T_2 = mux(_next_data_25_T_1, io.rob_commit_i[0].bits.commit_data, regfile[25]) @[Regfile.scala 25:93]
    node _next_data_25_T_3 = bits(commit_idx_1, 25, 25) @[Regfile.scala 25:119]
    node _next_data_25_T_4 = and(io.rob_commit_i[1].valid, _next_data_25_T_3) @[Regfile.scala 25:104]
    node _next_data_25_T_5 = mux(_next_data_25_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_25_T_2) @[Regfile.scala 25:93]
    next_data[25] <= _next_data_25_T_5 @[Regfile.scala 25:18]
    node _next_data_26_T = bits(commit_idx_0, 26, 26) @[Regfile.scala 25:119]
    node _next_data_26_T_1 = and(io.rob_commit_i[0].valid, _next_data_26_T) @[Regfile.scala 25:104]
    node _next_data_26_T_2 = mux(_next_data_26_T_1, io.rob_commit_i[0].bits.commit_data, regfile[26]) @[Regfile.scala 25:93]
    node _next_data_26_T_3 = bits(commit_idx_1, 26, 26) @[Regfile.scala 25:119]
    node _next_data_26_T_4 = and(io.rob_commit_i[1].valid, _next_data_26_T_3) @[Regfile.scala 25:104]
    node _next_data_26_T_5 = mux(_next_data_26_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_26_T_2) @[Regfile.scala 25:93]
    next_data[26] <= _next_data_26_T_5 @[Regfile.scala 25:18]
    node _next_data_27_T = bits(commit_idx_0, 27, 27) @[Regfile.scala 25:119]
    node _next_data_27_T_1 = and(io.rob_commit_i[0].valid, _next_data_27_T) @[Regfile.scala 25:104]
    node _next_data_27_T_2 = mux(_next_data_27_T_1, io.rob_commit_i[0].bits.commit_data, regfile[27]) @[Regfile.scala 25:93]
    node _next_data_27_T_3 = bits(commit_idx_1, 27, 27) @[Regfile.scala 25:119]
    node _next_data_27_T_4 = and(io.rob_commit_i[1].valid, _next_data_27_T_3) @[Regfile.scala 25:104]
    node _next_data_27_T_5 = mux(_next_data_27_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_27_T_2) @[Regfile.scala 25:93]
    next_data[27] <= _next_data_27_T_5 @[Regfile.scala 25:18]
    node _next_data_28_T = bits(commit_idx_0, 28, 28) @[Regfile.scala 25:119]
    node _next_data_28_T_1 = and(io.rob_commit_i[0].valid, _next_data_28_T) @[Regfile.scala 25:104]
    node _next_data_28_T_2 = mux(_next_data_28_T_1, io.rob_commit_i[0].bits.commit_data, regfile[28]) @[Regfile.scala 25:93]
    node _next_data_28_T_3 = bits(commit_idx_1, 28, 28) @[Regfile.scala 25:119]
    node _next_data_28_T_4 = and(io.rob_commit_i[1].valid, _next_data_28_T_3) @[Regfile.scala 25:104]
    node _next_data_28_T_5 = mux(_next_data_28_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_28_T_2) @[Regfile.scala 25:93]
    next_data[28] <= _next_data_28_T_5 @[Regfile.scala 25:18]
    node _next_data_29_T = bits(commit_idx_0, 29, 29) @[Regfile.scala 25:119]
    node _next_data_29_T_1 = and(io.rob_commit_i[0].valid, _next_data_29_T) @[Regfile.scala 25:104]
    node _next_data_29_T_2 = mux(_next_data_29_T_1, io.rob_commit_i[0].bits.commit_data, regfile[29]) @[Regfile.scala 25:93]
    node _next_data_29_T_3 = bits(commit_idx_1, 29, 29) @[Regfile.scala 25:119]
    node _next_data_29_T_4 = and(io.rob_commit_i[1].valid, _next_data_29_T_3) @[Regfile.scala 25:104]
    node _next_data_29_T_5 = mux(_next_data_29_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_29_T_2) @[Regfile.scala 25:93]
    next_data[29] <= _next_data_29_T_5 @[Regfile.scala 25:18]
    node _next_data_30_T = bits(commit_idx_0, 30, 30) @[Regfile.scala 25:119]
    node _next_data_30_T_1 = and(io.rob_commit_i[0].valid, _next_data_30_T) @[Regfile.scala 25:104]
    node _next_data_30_T_2 = mux(_next_data_30_T_1, io.rob_commit_i[0].bits.commit_data, regfile[30]) @[Regfile.scala 25:93]
    node _next_data_30_T_3 = bits(commit_idx_1, 30, 30) @[Regfile.scala 25:119]
    node _next_data_30_T_4 = and(io.rob_commit_i[1].valid, _next_data_30_T_3) @[Regfile.scala 25:104]
    node _next_data_30_T_5 = mux(_next_data_30_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_30_T_2) @[Regfile.scala 25:93]
    next_data[30] <= _next_data_30_T_5 @[Regfile.scala 25:18]
    node _next_data_31_T = bits(commit_idx_0, 31, 31) @[Regfile.scala 25:119]
    node _next_data_31_T_1 = and(io.rob_commit_i[0].valid, _next_data_31_T) @[Regfile.scala 25:104]
    node _next_data_31_T_2 = mux(_next_data_31_T_1, io.rob_commit_i[0].bits.commit_data, regfile[31]) @[Regfile.scala 25:93]
    node _next_data_31_T_3 = bits(commit_idx_1, 31, 31) @[Regfile.scala 25:119]
    node _next_data_31_T_4 = and(io.rob_commit_i[1].valid, _next_data_31_T_3) @[Regfile.scala 25:104]
    node _next_data_31_T_5 = mux(_next_data_31_T_4, io.rob_commit_i[1].bits.commit_data, _next_data_31_T_2) @[Regfile.scala 25:93]
    next_data[31] <= _next_data_31_T_5 @[Regfile.scala 25:18]
    regfile[0] <= next_data[0] @[Regfile.scala 27:10]
    regfile[1] <= next_data[1] @[Regfile.scala 27:10]
    regfile[2] <= next_data[2] @[Regfile.scala 27:10]
    regfile[3] <= next_data[3] @[Regfile.scala 27:10]
    regfile[4] <= next_data[4] @[Regfile.scala 27:10]
    regfile[5] <= next_data[5] @[Regfile.scala 27:10]
    regfile[6] <= next_data[6] @[Regfile.scala 27:10]
    regfile[7] <= next_data[7] @[Regfile.scala 27:10]
    regfile[8] <= next_data[8] @[Regfile.scala 27:10]
    regfile[9] <= next_data[9] @[Regfile.scala 27:10]
    regfile[10] <= next_data[10] @[Regfile.scala 27:10]
    regfile[11] <= next_data[11] @[Regfile.scala 27:10]
    regfile[12] <= next_data[12] @[Regfile.scala 27:10]
    regfile[13] <= next_data[13] @[Regfile.scala 27:10]
    regfile[14] <= next_data[14] @[Regfile.scala 27:10]
    regfile[15] <= next_data[15] @[Regfile.scala 27:10]
    regfile[16] <= next_data[16] @[Regfile.scala 27:10]
    regfile[17] <= next_data[17] @[Regfile.scala 27:10]
    regfile[18] <= next_data[18] @[Regfile.scala 27:10]
    regfile[19] <= next_data[19] @[Regfile.scala 27:10]
    regfile[20] <= next_data[20] @[Regfile.scala 27:10]
    regfile[21] <= next_data[21] @[Regfile.scala 27:10]
    regfile[22] <= next_data[22] @[Regfile.scala 27:10]
    regfile[23] <= next_data[23] @[Regfile.scala 27:10]
    regfile[24] <= next_data[24] @[Regfile.scala 27:10]
    regfile[25] <= next_data[25] @[Regfile.scala 27:10]
    regfile[26] <= next_data[26] @[Regfile.scala 27:10]
    regfile[27] <= next_data[27] @[Regfile.scala 27:10]
    regfile[28] <= next_data[28] @[Regfile.scala 27:10]
    regfile[29] <= next_data[29] @[Regfile.scala 27:10]
    regfile[30] <= next_data[30] @[Regfile.scala 27:10]
    regfile[31] <= next_data[31] @[Regfile.scala 27:10]
    io.reg_read[0].op1_data <= next_data[io.reg_read[0].op1_addr] @[Regfile.scala 29:28]
    io.reg_read[0].op2_data <= next_data[io.reg_read[0].op2_addr] @[Regfile.scala 30:28]
    io.reg_read[1].op1_data <= next_data[io.reg_read[1].op1_addr] @[Regfile.scala 29:28]
    io.reg_read[1].op2_data <= next_data[io.reg_read[1].op2_addr] @[Regfile.scala 30:28]
    
  module Rob : 
    input clock : Clock
    input reset : Reset
    output io : {rob_allocate : {flip allocate_req : {valid : UInt<1>, bits : UInt<1>[2]}, flip allocate_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, inst_valid : UInt<1>, inst_addr : UInt<32>, uop : UInt<6>, unit_sel : UInt<3>, need_imm : UInt<1>, commit_addr : UInt<32>, commit_target : UInt<3>, except_type : UInt<2>, is_branch : UInt<1>, is_delay : UInt<1>, gh_info : UInt<4>, imm_data : UInt<32>, flush_on_commit : UInt<1>, predict_taken : UInt<1>}[2]}, allocate_resp : {valid : UInt<1>, bits : {rob_idx : UInt<3>[2], enq_valid_mask : UInt<1>[2]}}}, flip rob_init_info : {valid : UInt<1>, bits : {is_valid : UInt<1>, des_rob : UInt<3>, op1_rob : UInt<3>, op2_rob : UInt<3>, op1_regData : UInt<32>, op2_regData : UInt<32>, op1_in_rob : UInt<1>, op2_in_rob : UInt<1>}[2]}, flip wb_info_i : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}[5], dispatch_info_o : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}[5], rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2], branch_info : {valid : UInt<1>, bits : {target_addr : UInt<32>, inst_addr : UInt<32>, gh_update : UInt<4>, is_branch : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>}}, need_flush : UInt<1>}
    
    reg rob_info : {is_valid : UInt<1>, busy : UInt<1>, uop : UInt<6>, unit_sel : UInt<3>, need_imm : UInt<1>, inst_addr : UInt<32>, commit_addr : UInt<5>, commit_data : UInt<32>, commit_target : UInt<3>, commit_ready : UInt<1>, except_type : UInt<2>, is_branch : UInt<1>, is_delay : UInt<1>, predict_taken : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>, gh_info : UInt<4>, op1_ready : UInt<1>, op1_tag : UInt<3>, op1_data : UInt<32>, op2_ready : UInt<1>, op2_tag : UInt<3>, op2_data : UInt<32>, imm_data : UInt<32>, is_init : UInt<1>, flush_on_commit : UInt<1>}[8], clock @[Rob.scala 175:27]
    reg head : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[Rob.scala 176:31]
    wire head_next : UInt<8> @[Rob.scala 177:23]
    reg tail : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[Rob.scala 178:31]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Rob.scala 179:31]
    node hit_head = eq(head, tail) @[Rob.scala 180:29]
    node is_full = and(hit_head, maybe_full) @[Rob.scala 181:33]
    node _is_empty_T = eq(maybe_full, UInt<1>("h00")) @[Rob.scala 182:36]
    node is_empty = and(hit_head, _is_empty_T) @[Rob.scala 182:33]
    wire enq_idxs : UInt<8>[2] @[Rob.scala 183:28]
    wire might_hit_head_mask : UInt<1>[2] @[Rob.scala 184:33]
    node might_hit_head = or(might_hit_head_mask[0], might_hit_head_mask[1]) @[Rob.scala 185:54]
    node inst_valid_mask_0 = and(io.rob_allocate.allocate_req.bits[0], io.rob_allocate.allocate_req.valid) @[Rob.scala 186:64]
    node inst_valid_mask_1 = and(io.rob_allocate.allocate_req.bits[1], io.rob_allocate.allocate_req.valid) @[Rob.scala 186:64]
    reg waiting_delay : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Rob.scala 187:30]
    reg need_flush : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Rob.scala 188:27]
    wire might_hit : UInt<1>
    might_hit <= UInt<1>("h00")
    enq_idxs[0] <= tail @[Rob.scala 192:17]
    node _T = eq(tail, head) @[Rob.scala 193:40]
    node _T_1 = eq(is_empty, UInt<1>("h00")) @[Rob.scala 193:52]
    node _T_2 = and(_T, _T_1) @[Rob.scala 193:48]
    node _T_3 = or(might_hit, _T_2) @[Rob.scala 193:27]
    might_hit_head_mask[0] <= _T_3 @[Rob.scala 194:27]
    node _T_4 = eq(_T_3, UInt<1>("h00")) @[Rob.scala 195:42]
    node _T_5 = and(inst_valid_mask_0, _T_4) @[Rob.scala 195:39]
    node hi = bits(tail, 6, 0) @[Rob.scala 167:12]
    node lo = bits(tail, 7, 7) @[Rob.scala 167:29]
    node _T_6 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_7 = mux(_T_5, _T_6, tail) @[Rob.scala 195:20]
    enq_idxs[1] <= _T_7 @[Rob.scala 192:17]
    node _T_8 = eq(_T_7, head) @[Rob.scala 193:40]
    node _T_9 = eq(is_empty, UInt<1>("h00")) @[Rob.scala 193:52]
    node _T_10 = and(_T_8, _T_9) @[Rob.scala 193:48]
    node might_hit_1 = or(_T_3, _T_10) @[Rob.scala 193:27]
    might_hit_head_mask[1] <= might_hit_1 @[Rob.scala 194:27]
    node _T_11 = eq(might_hit_1, UInt<1>("h00")) @[Rob.scala 195:42]
    node _T_12 = and(inst_valid_mask_1, _T_11) @[Rob.scala 195:39]
    node hi_1 = bits(_T_7, 6, 0) @[Rob.scala 167:12]
    node lo_1 = bits(_T_7, 7, 7) @[Rob.scala 167:29]
    node _T_13 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node next_tail = mux(_T_12, _T_13, _T_7) @[Rob.scala 195:20]
    node _enq_valid_mask_T = eq(might_hit_head_mask[0], UInt<1>("h00")) @[Rob.scala 197:73]
    node enq_valid_mask_0 = and(_enq_valid_mask_T, inst_valid_mask_0) @[Rob.scala 197:79]
    node _enq_valid_mask_T_1 = eq(might_hit_head_mask[1], UInt<1>("h00")) @[Rob.scala 197:73]
    node enq_valid_mask_1 = and(_enq_valid_mask_T_1, inst_valid_mask_1) @[Rob.scala 197:79]
    node do_enq = or(enq_valid_mask_0, enq_valid_mask_1) @[Rob.scala 198:43]
    tail <= next_tail @[Rob.scala 201:8]
    node hi_2 = bits(enq_idxs[0], 7, 4) @[OneHot.scala 30:18]
    node lo_2 = bits(enq_idxs[0], 3, 0) @[OneHot.scala 31:18]
    node hi_3 = orr(hi_2) @[OneHot.scala 32:14]
    node _T_14 = or(hi_2, lo_2) @[OneHot.scala 32:28]
    node hi_4 = bits(_T_14, 3, 2) @[OneHot.scala 30:18]
    node lo_3 = bits(_T_14, 1, 0) @[OneHot.scala 31:18]
    node hi_5 = orr(hi_4) @[OneHot.scala 32:14]
    node _T_15 = or(hi_4, lo_3) @[OneHot.scala 32:28]
    node lo_4 = bits(_T_15, 1, 1) @[CircuitMath.scala 30:8]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_16 = cat(hi_3, lo_5) @[Cat.scala 30:58]
    node hi_6 = bits(enq_idxs[1], 7, 4) @[OneHot.scala 30:18]
    node lo_6 = bits(enq_idxs[1], 3, 0) @[OneHot.scala 31:18]
    node hi_7 = orr(hi_6) @[OneHot.scala 32:14]
    node _T_17 = or(hi_6, lo_6) @[OneHot.scala 32:28]
    node hi_8 = bits(_T_17, 3, 2) @[OneHot.scala 30:18]
    node lo_7 = bits(_T_17, 1, 0) @[OneHot.scala 31:18]
    node hi_9 = orr(hi_8) @[OneHot.scala 32:14]
    node _T_18 = or(hi_8, lo_7) @[OneHot.scala 32:28]
    node lo_8 = bits(_T_18, 1, 1) @[CircuitMath.scala 30:8]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_19 = cat(hi_7, lo_9) @[Cat.scala 30:58]
    io.rob_allocate.allocate_resp.bits.rob_idx[0] <= _T_16 @[Rob.scala 203:46]
    io.rob_allocate.allocate_resp.bits.rob_idx[1] <= _T_19 @[Rob.scala 203:46]
    wire _WIRE : UInt<1>[2] @[Rob.scala 204:63]
    _WIRE[0] <= enq_valid_mask_0 @[Rob.scala 204:63]
    _WIRE[1] <= enq_valid_mask_1 @[Rob.scala 204:63]
    io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] <= _WIRE[0] @[Rob.scala 204:53]
    io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] <= _WIRE[1] @[Rob.scala 204:53]
    io.rob_allocate.allocate_resp.valid <= do_enq @[Rob.scala 205:39]
    node dispatch_idxs_hi = bits(head, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo = bits(head, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_1 = orr(dispatch_idxs_hi) @[OneHot.scala 32:14]
    node _dispatch_idxs_T = or(dispatch_idxs_hi, dispatch_idxs_lo) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_2 = bits(_dispatch_idxs_T, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_1 = bits(_dispatch_idxs_T, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_3 = orr(dispatch_idxs_hi_2) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_1 = or(dispatch_idxs_hi_2, dispatch_idxs_lo_1) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_2 = bits(_dispatch_idxs_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_3 = cat(dispatch_idxs_hi_3, dispatch_idxs_lo_2) @[Cat.scala 30:58]
    node _dispatch_idxs_T_2 = cat(dispatch_idxs_hi_1, dispatch_idxs_lo_3) @[Cat.scala 30:58]
    node dispatch_idxs_hi_4 = bits(head, 6, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_4 = bits(head, 7, 7) @[Rob.scala 167:29]
    node _dispatch_idxs_T_3 = cat(dispatch_idxs_hi_4, dispatch_idxs_lo_4) @[Cat.scala 30:58]
    node dispatch_idxs_hi_5 = bits(_dispatch_idxs_T_3, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_5 = bits(_dispatch_idxs_T_3, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_6 = orr(dispatch_idxs_hi_5) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_4 = or(dispatch_idxs_hi_5, dispatch_idxs_lo_5) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_7 = bits(_dispatch_idxs_T_4, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_6 = bits(_dispatch_idxs_T_4, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_8 = orr(dispatch_idxs_hi_7) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_5 = or(dispatch_idxs_hi_7, dispatch_idxs_lo_6) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_7 = bits(_dispatch_idxs_T_5, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_8 = cat(dispatch_idxs_hi_8, dispatch_idxs_lo_7) @[Cat.scala 30:58]
    node _dispatch_idxs_T_6 = cat(dispatch_idxs_hi_6, dispatch_idxs_lo_8) @[Cat.scala 30:58]
    node dispatch_idxs_hi_9 = bits(head, 5, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_9 = bits(head, 7, 6) @[Rob.scala 167:29]
    node _dispatch_idxs_T_7 = cat(dispatch_idxs_hi_9, dispatch_idxs_lo_9) @[Cat.scala 30:58]
    node dispatch_idxs_hi_10 = bits(_dispatch_idxs_T_7, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_10 = bits(_dispatch_idxs_T_7, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_11 = orr(dispatch_idxs_hi_10) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_8 = or(dispatch_idxs_hi_10, dispatch_idxs_lo_10) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_12 = bits(_dispatch_idxs_T_8, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_11 = bits(_dispatch_idxs_T_8, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_13 = orr(dispatch_idxs_hi_12) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_9 = or(dispatch_idxs_hi_12, dispatch_idxs_lo_11) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_12 = bits(_dispatch_idxs_T_9, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_13 = cat(dispatch_idxs_hi_13, dispatch_idxs_lo_12) @[Cat.scala 30:58]
    node _dispatch_idxs_T_10 = cat(dispatch_idxs_hi_11, dispatch_idxs_lo_13) @[Cat.scala 30:58]
    node dispatch_idxs_hi_14 = bits(head, 4, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_14 = bits(head, 7, 5) @[Rob.scala 167:29]
    node _dispatch_idxs_T_11 = cat(dispatch_idxs_hi_14, dispatch_idxs_lo_14) @[Cat.scala 30:58]
    node dispatch_idxs_hi_15 = bits(_dispatch_idxs_T_11, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_15 = bits(_dispatch_idxs_T_11, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_16 = orr(dispatch_idxs_hi_15) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_12 = or(dispatch_idxs_hi_15, dispatch_idxs_lo_15) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_17 = bits(_dispatch_idxs_T_12, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_16 = bits(_dispatch_idxs_T_12, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_18 = orr(dispatch_idxs_hi_17) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_13 = or(dispatch_idxs_hi_17, dispatch_idxs_lo_16) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_17 = bits(_dispatch_idxs_T_13, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_18 = cat(dispatch_idxs_hi_18, dispatch_idxs_lo_17) @[Cat.scala 30:58]
    node _dispatch_idxs_T_14 = cat(dispatch_idxs_hi_16, dispatch_idxs_lo_18) @[Cat.scala 30:58]
    node dispatch_idxs_hi_19 = bits(head, 3, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_19 = bits(head, 7, 4) @[Rob.scala 167:29]
    node _dispatch_idxs_T_15 = cat(dispatch_idxs_hi_19, dispatch_idxs_lo_19) @[Cat.scala 30:58]
    node dispatch_idxs_hi_20 = bits(_dispatch_idxs_T_15, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_20 = bits(_dispatch_idxs_T_15, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_21 = orr(dispatch_idxs_hi_20) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_16 = or(dispatch_idxs_hi_20, dispatch_idxs_lo_20) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_22 = bits(_dispatch_idxs_T_16, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_21 = bits(_dispatch_idxs_T_16, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_23 = orr(dispatch_idxs_hi_22) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_17 = or(dispatch_idxs_hi_22, dispatch_idxs_lo_21) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_22 = bits(_dispatch_idxs_T_17, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_23 = cat(dispatch_idxs_hi_23, dispatch_idxs_lo_22) @[Cat.scala 30:58]
    node _dispatch_idxs_T_18 = cat(dispatch_idxs_hi_21, dispatch_idxs_lo_23) @[Cat.scala 30:58]
    node dispatch_idxs_hi_24 = bits(head, 2, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_24 = bits(head, 7, 3) @[Rob.scala 167:29]
    node _dispatch_idxs_T_19 = cat(dispatch_idxs_hi_24, dispatch_idxs_lo_24) @[Cat.scala 30:58]
    node dispatch_idxs_hi_25 = bits(_dispatch_idxs_T_19, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_25 = bits(_dispatch_idxs_T_19, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_26 = orr(dispatch_idxs_hi_25) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_20 = or(dispatch_idxs_hi_25, dispatch_idxs_lo_25) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_27 = bits(_dispatch_idxs_T_20, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_26 = bits(_dispatch_idxs_T_20, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_28 = orr(dispatch_idxs_hi_27) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_21 = or(dispatch_idxs_hi_27, dispatch_idxs_lo_26) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_27 = bits(_dispatch_idxs_T_21, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_28 = cat(dispatch_idxs_hi_28, dispatch_idxs_lo_27) @[Cat.scala 30:58]
    node _dispatch_idxs_T_22 = cat(dispatch_idxs_hi_26, dispatch_idxs_lo_28) @[Cat.scala 30:58]
    node dispatch_idxs_hi_29 = bits(head, 1, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_29 = bits(head, 7, 2) @[Rob.scala 167:29]
    node _dispatch_idxs_T_23 = cat(dispatch_idxs_hi_29, dispatch_idxs_lo_29) @[Cat.scala 30:58]
    node dispatch_idxs_hi_30 = bits(_dispatch_idxs_T_23, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_30 = bits(_dispatch_idxs_T_23, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_31 = orr(dispatch_idxs_hi_30) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_24 = or(dispatch_idxs_hi_30, dispatch_idxs_lo_30) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_32 = bits(_dispatch_idxs_T_24, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_31 = bits(_dispatch_idxs_T_24, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_33 = orr(dispatch_idxs_hi_32) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_25 = or(dispatch_idxs_hi_32, dispatch_idxs_lo_31) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_32 = bits(_dispatch_idxs_T_25, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_33 = cat(dispatch_idxs_hi_33, dispatch_idxs_lo_32) @[Cat.scala 30:58]
    node _dispatch_idxs_T_26 = cat(dispatch_idxs_hi_31, dispatch_idxs_lo_33) @[Cat.scala 30:58]
    node dispatch_idxs_hi_34 = bits(head, 0, 0) @[Rob.scala 167:12]
    node dispatch_idxs_lo_34 = bits(head, 7, 1) @[Rob.scala 167:29]
    node _dispatch_idxs_T_27 = cat(dispatch_idxs_hi_34, dispatch_idxs_lo_34) @[Cat.scala 30:58]
    node dispatch_idxs_hi_35 = bits(_dispatch_idxs_T_27, 7, 4) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_35 = bits(_dispatch_idxs_T_27, 3, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_36 = orr(dispatch_idxs_hi_35) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_28 = or(dispatch_idxs_hi_35, dispatch_idxs_lo_35) @[OneHot.scala 32:28]
    node dispatch_idxs_hi_37 = bits(_dispatch_idxs_T_28, 3, 2) @[OneHot.scala 30:18]
    node dispatch_idxs_lo_36 = bits(_dispatch_idxs_T_28, 1, 0) @[OneHot.scala 31:18]
    node dispatch_idxs_hi_38 = orr(dispatch_idxs_hi_37) @[OneHot.scala 32:14]
    node _dispatch_idxs_T_29 = or(dispatch_idxs_hi_37, dispatch_idxs_lo_36) @[OneHot.scala 32:28]
    node dispatch_idxs_lo_37 = bits(_dispatch_idxs_T_29, 1, 1) @[CircuitMath.scala 30:8]
    node dispatch_idxs_lo_38 = cat(dispatch_idxs_hi_38, dispatch_idxs_lo_37) @[Cat.scala 30:58]
    node _dispatch_idxs_T_30 = cat(dispatch_idxs_hi_36, dispatch_idxs_lo_38) @[Cat.scala 30:58]
    wire dispatch_idxs : UInt<3>[8] @[Rob.scala 210:30]
    dispatch_idxs[0] <= _dispatch_idxs_T_2 @[Rob.scala 210:30]
    dispatch_idxs[1] <= _dispatch_idxs_T_6 @[Rob.scala 210:30]
    dispatch_idxs[2] <= _dispatch_idxs_T_10 @[Rob.scala 210:30]
    dispatch_idxs[3] <= _dispatch_idxs_T_14 @[Rob.scala 210:30]
    dispatch_idxs[4] <= _dispatch_idxs_T_18 @[Rob.scala 210:30]
    dispatch_idxs[5] <= _dispatch_idxs_T_22 @[Rob.scala 210:30]
    dispatch_idxs[6] <= _dispatch_idxs_T_26 @[Rob.scala 210:30]
    dispatch_idxs[7] <= _dispatch_idxs_T_30 @[Rob.scala 210:30]
    node _ready_mask_T = eq(rob_info[dispatch_idxs[0]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_1 = eq(rob_info[dispatch_idxs[0]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_2 = and(_ready_mask_T, _ready_mask_T_1) @[Rob.scala 211:80]
    node _ready_mask_T_3 = and(_ready_mask_T_2, rob_info[dispatch_idxs[0]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_4 = and(_ready_mask_T_3, rob_info[dispatch_idxs[0]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_5 = and(_ready_mask_T_4, rob_info[dispatch_idxs[0]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_6 = eq(rob_info[dispatch_idxs[1]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_7 = eq(rob_info[dispatch_idxs[1]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_8 = and(_ready_mask_T_6, _ready_mask_T_7) @[Rob.scala 211:80]
    node _ready_mask_T_9 = and(_ready_mask_T_8, rob_info[dispatch_idxs[1]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_10 = and(_ready_mask_T_9, rob_info[dispatch_idxs[1]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_11 = and(_ready_mask_T_10, rob_info[dispatch_idxs[1]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_12 = eq(rob_info[dispatch_idxs[2]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_13 = eq(rob_info[dispatch_idxs[2]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_14 = and(_ready_mask_T_12, _ready_mask_T_13) @[Rob.scala 211:80]
    node _ready_mask_T_15 = and(_ready_mask_T_14, rob_info[dispatch_idxs[2]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_16 = and(_ready_mask_T_15, rob_info[dispatch_idxs[2]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_17 = and(_ready_mask_T_16, rob_info[dispatch_idxs[2]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_18 = eq(rob_info[dispatch_idxs[3]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_19 = eq(rob_info[dispatch_idxs[3]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_20 = and(_ready_mask_T_18, _ready_mask_T_19) @[Rob.scala 211:80]
    node _ready_mask_T_21 = and(_ready_mask_T_20, rob_info[dispatch_idxs[3]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_22 = and(_ready_mask_T_21, rob_info[dispatch_idxs[3]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_23 = and(_ready_mask_T_22, rob_info[dispatch_idxs[3]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_24 = eq(rob_info[dispatch_idxs[4]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_25 = eq(rob_info[dispatch_idxs[4]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_26 = and(_ready_mask_T_24, _ready_mask_T_25) @[Rob.scala 211:80]
    node _ready_mask_T_27 = and(_ready_mask_T_26, rob_info[dispatch_idxs[4]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_28 = and(_ready_mask_T_27, rob_info[dispatch_idxs[4]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_29 = and(_ready_mask_T_28, rob_info[dispatch_idxs[4]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_30 = eq(rob_info[dispatch_idxs[5]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_31 = eq(rob_info[dispatch_idxs[5]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_32 = and(_ready_mask_T_30, _ready_mask_T_31) @[Rob.scala 211:80]
    node _ready_mask_T_33 = and(_ready_mask_T_32, rob_info[dispatch_idxs[5]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_34 = and(_ready_mask_T_33, rob_info[dispatch_idxs[5]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_35 = and(_ready_mask_T_34, rob_info[dispatch_idxs[5]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_36 = eq(rob_info[dispatch_idxs[6]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_37 = eq(rob_info[dispatch_idxs[6]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_38 = and(_ready_mask_T_36, _ready_mask_T_37) @[Rob.scala 211:80]
    node _ready_mask_T_39 = and(_ready_mask_T_38, rob_info[dispatch_idxs[6]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_40 = and(_ready_mask_T_39, rob_info[dispatch_idxs[6]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_41 = and(_ready_mask_T_40, rob_info[dispatch_idxs[6]].op2_ready) @[Rob.scala 211:150]
    node _ready_mask_T_42 = eq(rob_info[dispatch_idxs[7]].commit_ready, UInt<1>("h00")) @[Rob.scala 211:54]
    node _ready_mask_T_43 = eq(rob_info[dispatch_idxs[7]].busy, UInt<1>("h00")) @[Rob.scala 211:83]
    node _ready_mask_T_44 = and(_ready_mask_T_42, _ready_mask_T_43) @[Rob.scala 211:80]
    node _ready_mask_T_45 = and(_ready_mask_T_44, rob_info[dispatch_idxs[7]].is_valid) @[Rob.scala 211:101]
    node _ready_mask_T_46 = and(_ready_mask_T_45, rob_info[dispatch_idxs[7]].op1_ready) @[Rob.scala 211:125]
    node _ready_mask_T_47 = and(_ready_mask_T_46, rob_info[dispatch_idxs[7]].op2_ready) @[Rob.scala 211:150]
    wire ready_mask : UInt<1>[8] @[Rob.scala 211:30]
    ready_mask[0] <= _ready_mask_T_5 @[Rob.scala 211:30]
    ready_mask[1] <= _ready_mask_T_11 @[Rob.scala 211:30]
    ready_mask[2] <= _ready_mask_T_17 @[Rob.scala 211:30]
    ready_mask[3] <= _ready_mask_T_23 @[Rob.scala 211:30]
    ready_mask[4] <= _ready_mask_T_29 @[Rob.scala 211:30]
    ready_mask[5] <= _ready_mask_T_35 @[Rob.scala 211:30]
    ready_mask[6] <= _ready_mask_T_41 @[Rob.scala 211:30]
    ready_mask[7] <= _ready_mask_T_47 @[Rob.scala 211:30]
    node _alu0_mask_T = eq(rob_info[dispatch_idxs[0]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_1 = and(_alu0_mask_T, ready_mask[0]) @[Rob.scala 212:126]
    node _alu0_mask_T_2 = eq(rob_info[dispatch_idxs[1]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_3 = and(_alu0_mask_T_2, ready_mask[1]) @[Rob.scala 212:126]
    node _alu0_mask_T_4 = eq(rob_info[dispatch_idxs[2]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_5 = and(_alu0_mask_T_4, ready_mask[2]) @[Rob.scala 212:126]
    node _alu0_mask_T_6 = eq(rob_info[dispatch_idxs[3]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_7 = and(_alu0_mask_T_6, ready_mask[3]) @[Rob.scala 212:126]
    node _alu0_mask_T_8 = eq(rob_info[dispatch_idxs[4]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_9 = and(_alu0_mask_T_8, ready_mask[4]) @[Rob.scala 212:126]
    node _alu0_mask_T_10 = eq(rob_info[dispatch_idxs[5]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_11 = and(_alu0_mask_T_10, ready_mask[5]) @[Rob.scala 212:126]
    node _alu0_mask_T_12 = eq(rob_info[dispatch_idxs[6]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_13 = and(_alu0_mask_T_12, ready_mask[6]) @[Rob.scala 212:126]
    node _alu0_mask_T_14 = eq(rob_info[dispatch_idxs[7]].unit_sel, UInt<1>("h01")) @[Rob.scala 212:107]
    node _alu0_mask_T_15 = and(_alu0_mask_T_14, ready_mask[7]) @[Rob.scala 212:126]
    wire alu0_mask : UInt<1>[8] @[Rob.scala 212:30]
    alu0_mask[0] <= _alu0_mask_T_1 @[Rob.scala 212:30]
    alu0_mask[1] <= _alu0_mask_T_3 @[Rob.scala 212:30]
    alu0_mask[2] <= _alu0_mask_T_5 @[Rob.scala 212:30]
    alu0_mask[3] <= _alu0_mask_T_7 @[Rob.scala 212:30]
    alu0_mask[4] <= _alu0_mask_T_9 @[Rob.scala 212:30]
    alu0_mask[5] <= _alu0_mask_T_11 @[Rob.scala 212:30]
    alu0_mask[6] <= _alu0_mask_T_13 @[Rob.scala 212:30]
    alu0_mask[7] <= _alu0_mask_T_15 @[Rob.scala 212:30]
    node _bju0_mask_T = eq(rob_info[dispatch_idxs[0]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_1 = and(_bju0_mask_T, ready_mask[0]) @[Rob.scala 213:127]
    node _bju0_mask_T_2 = eq(rob_info[dispatch_idxs[1]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_3 = and(_bju0_mask_T_2, ready_mask[1]) @[Rob.scala 213:127]
    node _bju0_mask_T_4 = eq(rob_info[dispatch_idxs[2]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_5 = and(_bju0_mask_T_4, ready_mask[2]) @[Rob.scala 213:127]
    node _bju0_mask_T_6 = eq(rob_info[dispatch_idxs[3]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_7 = and(_bju0_mask_T_6, ready_mask[3]) @[Rob.scala 213:127]
    node _bju0_mask_T_8 = eq(rob_info[dispatch_idxs[4]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_9 = and(_bju0_mask_T_8, ready_mask[4]) @[Rob.scala 213:127]
    node _bju0_mask_T_10 = eq(rob_info[dispatch_idxs[5]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_11 = and(_bju0_mask_T_10, ready_mask[5]) @[Rob.scala 213:127]
    node _bju0_mask_T_12 = eq(rob_info[dispatch_idxs[6]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_13 = and(_bju0_mask_T_12, ready_mask[6]) @[Rob.scala 213:127]
    node _bju0_mask_T_14 = eq(rob_info[dispatch_idxs[7]].unit_sel, UInt<3>("h05")) @[Rob.scala 213:108]
    node _bju0_mask_T_15 = and(_bju0_mask_T_14, ready_mask[7]) @[Rob.scala 213:127]
    wire bju0_mask : UInt<1>[8] @[Rob.scala 213:31]
    bju0_mask[0] <= _bju0_mask_T_1 @[Rob.scala 213:31]
    bju0_mask[1] <= _bju0_mask_T_3 @[Rob.scala 213:31]
    bju0_mask[2] <= _bju0_mask_T_5 @[Rob.scala 213:31]
    bju0_mask[3] <= _bju0_mask_T_7 @[Rob.scala 213:31]
    bju0_mask[4] <= _bju0_mask_T_9 @[Rob.scala 213:31]
    bju0_mask[5] <= _bju0_mask_T_11 @[Rob.scala 213:31]
    bju0_mask[6] <= _bju0_mask_T_13 @[Rob.scala 213:31]
    bju0_mask[7] <= _bju0_mask_T_15 @[Rob.scala 213:31]
    node _mdu_mask_T = eq(rob_info[dispatch_idxs[0]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_1 = and(_mdu_mask_T, ready_mask[0]) @[Rob.scala 214:126]
    node _mdu_mask_T_2 = eq(rob_info[dispatch_idxs[1]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_3 = and(_mdu_mask_T_2, ready_mask[1]) @[Rob.scala 214:126]
    node _mdu_mask_T_4 = eq(rob_info[dispatch_idxs[2]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_5 = and(_mdu_mask_T_4, ready_mask[2]) @[Rob.scala 214:126]
    node _mdu_mask_T_6 = eq(rob_info[dispatch_idxs[3]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_7 = and(_mdu_mask_T_6, ready_mask[3]) @[Rob.scala 214:126]
    node _mdu_mask_T_8 = eq(rob_info[dispatch_idxs[4]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_9 = and(_mdu_mask_T_8, ready_mask[4]) @[Rob.scala 214:126]
    node _mdu_mask_T_10 = eq(rob_info[dispatch_idxs[5]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_11 = and(_mdu_mask_T_10, ready_mask[5]) @[Rob.scala 214:126]
    node _mdu_mask_T_12 = eq(rob_info[dispatch_idxs[6]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_13 = and(_mdu_mask_T_12, ready_mask[6]) @[Rob.scala 214:126]
    node _mdu_mask_T_14 = eq(rob_info[dispatch_idxs[7]].unit_sel, UInt<3>("h04")) @[Rob.scala 214:107]
    node _mdu_mask_T_15 = and(_mdu_mask_T_14, ready_mask[7]) @[Rob.scala 214:126]
    wire dispatch_mask_3 : UInt<1>[8] @[Rob.scala 214:30]
    dispatch_mask_3[0] <= _mdu_mask_T_1 @[Rob.scala 214:30]
    dispatch_mask_3[1] <= _mdu_mask_T_3 @[Rob.scala 214:30]
    dispatch_mask_3[2] <= _mdu_mask_T_5 @[Rob.scala 214:30]
    dispatch_mask_3[3] <= _mdu_mask_T_7 @[Rob.scala 214:30]
    dispatch_mask_3[4] <= _mdu_mask_T_9 @[Rob.scala 214:30]
    dispatch_mask_3[5] <= _mdu_mask_T_11 @[Rob.scala 214:30]
    dispatch_mask_3[6] <= _mdu_mask_T_13 @[Rob.scala 214:30]
    dispatch_mask_3[7] <= _mdu_mask_T_15 @[Rob.scala 214:30]
    node _mem_mask_T = eq(rob_info[dispatch_idxs[0]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_1 = eq(rob_info[dispatch_idxs[0]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_2 = and(_mem_mask_T, _mem_mask_T_1) @[Rob.scala 215:122]
    node _mem_mask_T_3 = eq(rob_info[dispatch_idxs[0]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_4 = and(_mem_mask_T_2, _mem_mask_T_3) @[Rob.scala 215:151]
    node _mem_mask_T_5 = and(_mem_mask_T_4, rob_info[dispatch_idxs[0]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_6 = eq(rob_info[dispatch_idxs[1]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_7 = eq(rob_info[dispatch_idxs[1]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_8 = and(_mem_mask_T_6, _mem_mask_T_7) @[Rob.scala 215:122]
    node _mem_mask_T_9 = eq(rob_info[dispatch_idxs[1]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_10 = and(_mem_mask_T_8, _mem_mask_T_9) @[Rob.scala 215:151]
    node _mem_mask_T_11 = and(_mem_mask_T_10, rob_info[dispatch_idxs[1]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_12 = eq(rob_info[dispatch_idxs[2]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_13 = eq(rob_info[dispatch_idxs[2]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_14 = and(_mem_mask_T_12, _mem_mask_T_13) @[Rob.scala 215:122]
    node _mem_mask_T_15 = eq(rob_info[dispatch_idxs[2]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_16 = and(_mem_mask_T_14, _mem_mask_T_15) @[Rob.scala 215:151]
    node _mem_mask_T_17 = and(_mem_mask_T_16, rob_info[dispatch_idxs[2]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_18 = eq(rob_info[dispatch_idxs[3]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_19 = eq(rob_info[dispatch_idxs[3]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_20 = and(_mem_mask_T_18, _mem_mask_T_19) @[Rob.scala 215:122]
    node _mem_mask_T_21 = eq(rob_info[dispatch_idxs[3]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_22 = and(_mem_mask_T_20, _mem_mask_T_21) @[Rob.scala 215:151]
    node _mem_mask_T_23 = and(_mem_mask_T_22, rob_info[dispatch_idxs[3]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_24 = eq(rob_info[dispatch_idxs[4]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_25 = eq(rob_info[dispatch_idxs[4]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_26 = and(_mem_mask_T_24, _mem_mask_T_25) @[Rob.scala 215:122]
    node _mem_mask_T_27 = eq(rob_info[dispatch_idxs[4]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_28 = and(_mem_mask_T_26, _mem_mask_T_27) @[Rob.scala 215:151]
    node _mem_mask_T_29 = and(_mem_mask_T_28, rob_info[dispatch_idxs[4]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_30 = eq(rob_info[dispatch_idxs[5]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_31 = eq(rob_info[dispatch_idxs[5]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_32 = and(_mem_mask_T_30, _mem_mask_T_31) @[Rob.scala 215:122]
    node _mem_mask_T_33 = eq(rob_info[dispatch_idxs[5]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_34 = and(_mem_mask_T_32, _mem_mask_T_33) @[Rob.scala 215:151]
    node _mem_mask_T_35 = and(_mem_mask_T_34, rob_info[dispatch_idxs[5]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_36 = eq(rob_info[dispatch_idxs[6]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_37 = eq(rob_info[dispatch_idxs[6]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_38 = and(_mem_mask_T_36, _mem_mask_T_37) @[Rob.scala 215:122]
    node _mem_mask_T_39 = eq(rob_info[dispatch_idxs[6]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_40 = and(_mem_mask_T_38, _mem_mask_T_39) @[Rob.scala 215:151]
    node _mem_mask_T_41 = and(_mem_mask_T_40, rob_info[dispatch_idxs[6]].is_valid) @[Rob.scala 215:172]
    node _mem_mask_T_42 = eq(rob_info[dispatch_idxs[7]].unit_sel, UInt<2>("h03")) @[Rob.scala 215:103]
    node _mem_mask_T_43 = eq(rob_info[dispatch_idxs[7]].commit_ready, UInt<1>("h00")) @[Rob.scala 215:125]
    node _mem_mask_T_44 = and(_mem_mask_T_42, _mem_mask_T_43) @[Rob.scala 215:122]
    node _mem_mask_T_45 = eq(rob_info[dispatch_idxs[7]].busy, UInt<1>("h00")) @[Rob.scala 215:154]
    node _mem_mask_T_46 = and(_mem_mask_T_44, _mem_mask_T_45) @[Rob.scala 215:151]
    node _mem_mask_T_47 = and(_mem_mask_T_46, rob_info[dispatch_idxs[7]].is_valid) @[Rob.scala 215:172]
    wire dispatch_mask_4 : UInt<1>[8] @[Rob.scala 215:30]
    dispatch_mask_4[0] <= _mem_mask_T_5 @[Rob.scala 215:30]
    dispatch_mask_4[1] <= _mem_mask_T_11 @[Rob.scala 215:30]
    dispatch_mask_4[2] <= _mem_mask_T_17 @[Rob.scala 215:30]
    dispatch_mask_4[3] <= _mem_mask_T_23 @[Rob.scala 215:30]
    dispatch_mask_4[4] <= _mem_mask_T_29 @[Rob.scala 215:30]
    dispatch_mask_4[5] <= _mem_mask_T_35 @[Rob.scala 215:30]
    dispatch_mask_4[6] <= _mem_mask_T_41 @[Rob.scala 215:30]
    dispatch_mask_4[7] <= _mem_mask_T_47 @[Rob.scala 215:30]
    node _alu1_mask_enc_T = mux(alu0_mask[7], UInt<8>("h080"), UInt<8>("h00")) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_1 = mux(alu0_mask[6], UInt<8>("h040"), _alu1_mask_enc_T) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_2 = mux(alu0_mask[5], UInt<8>("h020"), _alu1_mask_enc_T_1) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_3 = mux(alu0_mask[4], UInt<8>("h010"), _alu1_mask_enc_T_2) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_4 = mux(alu0_mask[3], UInt<8>("h08"), _alu1_mask_enc_T_3) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_5 = mux(alu0_mask[2], UInt<8>("h04"), _alu1_mask_enc_T_4) @[Mux.scala 47:69]
    node _alu1_mask_enc_T_6 = mux(alu0_mask[1], UInt<8>("h02"), _alu1_mask_enc_T_5) @[Mux.scala 47:69]
    node alu1_mask_enc = mux(alu0_mask[0], UInt<8>("h01"), _alu1_mask_enc_T_6) @[Mux.scala 47:69]
    node _alu1_mask_T = bits(alu1_mask_enc, 0, 0) @[OneHot.scala 83:30]
    node _alu1_mask_T_1 = bits(alu1_mask_enc, 1, 1) @[OneHot.scala 83:30]
    node _alu1_mask_T_2 = bits(alu1_mask_enc, 2, 2) @[OneHot.scala 83:30]
    node _alu1_mask_T_3 = bits(alu1_mask_enc, 3, 3) @[OneHot.scala 83:30]
    node _alu1_mask_T_4 = bits(alu1_mask_enc, 4, 4) @[OneHot.scala 83:30]
    node _alu1_mask_T_5 = bits(alu1_mask_enc, 5, 5) @[OneHot.scala 83:30]
    node _alu1_mask_T_6 = bits(alu1_mask_enc, 6, 6) @[OneHot.scala 83:30]
    node _alu1_mask_T_7 = bits(alu1_mask_enc, 7, 7) @[OneHot.scala 83:30]
    node _alu1_mask_T_8 = eq(_alu1_mask_T, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_9 = and(_alu1_mask_T_8, alu0_mask[0]) @[Rob.scala 217:92]
    node _alu1_mask_T_10 = eq(_alu1_mask_T_1, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_11 = and(_alu1_mask_T_10, alu0_mask[1]) @[Rob.scala 217:92]
    node _alu1_mask_T_12 = eq(_alu1_mask_T_2, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_13 = and(_alu1_mask_T_12, alu0_mask[2]) @[Rob.scala 217:92]
    node _alu1_mask_T_14 = eq(_alu1_mask_T_3, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_15 = and(_alu1_mask_T_14, alu0_mask[3]) @[Rob.scala 217:92]
    node _alu1_mask_T_16 = eq(_alu1_mask_T_4, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_17 = and(_alu1_mask_T_16, alu0_mask[4]) @[Rob.scala 217:92]
    node _alu1_mask_T_18 = eq(_alu1_mask_T_5, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_19 = and(_alu1_mask_T_18, alu0_mask[5]) @[Rob.scala 217:92]
    node _alu1_mask_T_20 = eq(_alu1_mask_T_6, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_21 = and(_alu1_mask_T_20, alu0_mask[6]) @[Rob.scala 217:92]
    node _alu1_mask_T_22 = eq(_alu1_mask_T_7, UInt<1>("h00")) @[Rob.scala 217:85]
    node _alu1_mask_T_23 = and(_alu1_mask_T_22, alu0_mask[7]) @[Rob.scala 217:92]
    wire alu1_mask : UInt<1>[8] @[Rob.scala 217:30]
    alu1_mask[0] <= _alu1_mask_T_9 @[Rob.scala 217:30]
    alu1_mask[1] <= _alu1_mask_T_11 @[Rob.scala 217:30]
    alu1_mask[2] <= _alu1_mask_T_13 @[Rob.scala 217:30]
    alu1_mask[3] <= _alu1_mask_T_15 @[Rob.scala 217:30]
    alu1_mask[4] <= _alu1_mask_T_17 @[Rob.scala 217:30]
    alu1_mask[5] <= _alu1_mask_T_19 @[Rob.scala 217:30]
    alu1_mask[6] <= _alu1_mask_T_21 @[Rob.scala 217:30]
    alu1_mask[7] <= _alu1_mask_T_23 @[Rob.scala 217:30]
    node _dispatch_idx_T = mux(alu0_mask[6], UInt<3>("h06"), UInt<3>("h07")) @[Mux.scala 47:69]
    node _dispatch_idx_T_1 = mux(alu0_mask[5], UInt<3>("h05"), _dispatch_idx_T) @[Mux.scala 47:69]
    node _dispatch_idx_T_2 = mux(alu0_mask[4], UInt<3>("h04"), _dispatch_idx_T_1) @[Mux.scala 47:69]
    node _dispatch_idx_T_3 = mux(alu0_mask[3], UInt<2>("h03"), _dispatch_idx_T_2) @[Mux.scala 47:69]
    node _dispatch_idx_T_4 = mux(alu0_mask[2], UInt<2>("h02"), _dispatch_idx_T_3) @[Mux.scala 47:69]
    node _dispatch_idx_T_5 = mux(alu0_mask[1], UInt<1>("h01"), _dispatch_idx_T_4) @[Mux.scala 47:69]
    node dispatch_idx = mux(alu0_mask[0], UInt<1>("h00"), _dispatch_idx_T_5) @[Mux.scala 47:69]
    node dispatch_valid = and(ready_mask[dispatch_idx], alu0_mask[dispatch_idx]) @[Rob.scala 224:50]
    io.dispatch_info_o[0].valid <= dispatch_valid @[Rob.scala 225:33]
    io.dispatch_info_o[0].bits.rob_idx <= dispatch_idxs[dispatch_idx] @[Rob.scala 226:40]
    io.dispatch_info_o[0].bits.uop <= rob_info[dispatch_idxs[dispatch_idx]].uop @[Rob.scala 227:36]
    io.dispatch_info_o[0].bits.need_imm <= rob_info[dispatch_idxs[dispatch_idx]].need_imm @[Rob.scala 228:41]
    io.dispatch_info_o[0].bits.inst_addr <= rob_info[dispatch_idxs[dispatch_idx]].inst_addr @[Rob.scala 229:42]
    io.dispatch_info_o[0].bits.op1_data <= rob_info[dispatch_idxs[dispatch_idx]].op1_data @[Rob.scala 230:41]
    io.dispatch_info_o[0].bits.op2_data <= rob_info[dispatch_idxs[dispatch_idx]].op2_data @[Rob.scala 231:41]
    io.dispatch_info_o[0].bits.imm_data <= rob_info[dispatch_idxs[dispatch_idx]].imm_data @[Rob.scala 232:41]
    io.dispatch_info_o[0].bits.predict_taken <= rob_info[dispatch_idxs[dispatch_idx]].predict_taken @[Rob.scala 233:46]
    node _T_20 = and(dispatch_valid, io.dispatch_info_o[0].ready) @[Rob.scala 234:25]
    node _T_21 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 234:58]
    node _T_22 = and(_T_20, _T_21) @[Rob.scala 234:55]
    when _T_22 : @[Rob.scala 234:71]
      rob_info[dispatch_idxs[dispatch_idx]].busy <= UInt<1>("h01") @[Rob.scala 235:30]
      skip @[Rob.scala 234:71]
    node _dispatch_idx_T_6 = mux(alu1_mask[6], UInt<3>("h06"), UInt<3>("h07")) @[Mux.scala 47:69]
    node _dispatch_idx_T_7 = mux(alu1_mask[5], UInt<3>("h05"), _dispatch_idx_T_6) @[Mux.scala 47:69]
    node _dispatch_idx_T_8 = mux(alu1_mask[4], UInt<3>("h04"), _dispatch_idx_T_7) @[Mux.scala 47:69]
    node _dispatch_idx_T_9 = mux(alu1_mask[3], UInt<2>("h03"), _dispatch_idx_T_8) @[Mux.scala 47:69]
    node _dispatch_idx_T_10 = mux(alu1_mask[2], UInt<2>("h02"), _dispatch_idx_T_9) @[Mux.scala 47:69]
    node _dispatch_idx_T_11 = mux(alu1_mask[1], UInt<1>("h01"), _dispatch_idx_T_10) @[Mux.scala 47:69]
    node dispatch_idx_1 = mux(alu1_mask[0], UInt<1>("h00"), _dispatch_idx_T_11) @[Mux.scala 47:69]
    node dispatch_valid_1 = and(ready_mask[dispatch_idx_1], alu1_mask[dispatch_idx_1]) @[Rob.scala 224:50]
    io.dispatch_info_o[1].valid <= dispatch_valid_1 @[Rob.scala 225:33]
    io.dispatch_info_o[1].bits.rob_idx <= dispatch_idxs[dispatch_idx_1] @[Rob.scala 226:40]
    io.dispatch_info_o[1].bits.uop <= rob_info[dispatch_idxs[dispatch_idx_1]].uop @[Rob.scala 227:36]
    io.dispatch_info_o[1].bits.need_imm <= rob_info[dispatch_idxs[dispatch_idx_1]].need_imm @[Rob.scala 228:41]
    io.dispatch_info_o[1].bits.inst_addr <= rob_info[dispatch_idxs[dispatch_idx_1]].inst_addr @[Rob.scala 229:42]
    io.dispatch_info_o[1].bits.op1_data <= rob_info[dispatch_idxs[dispatch_idx_1]].op1_data @[Rob.scala 230:41]
    io.dispatch_info_o[1].bits.op2_data <= rob_info[dispatch_idxs[dispatch_idx_1]].op2_data @[Rob.scala 231:41]
    io.dispatch_info_o[1].bits.imm_data <= rob_info[dispatch_idxs[dispatch_idx_1]].imm_data @[Rob.scala 232:41]
    io.dispatch_info_o[1].bits.predict_taken <= rob_info[dispatch_idxs[dispatch_idx_1]].predict_taken @[Rob.scala 233:46]
    node _T_23 = and(dispatch_valid_1, io.dispatch_info_o[1].ready) @[Rob.scala 234:25]
    node _T_24 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 234:58]
    node _T_25 = and(_T_23, _T_24) @[Rob.scala 234:55]
    when _T_25 : @[Rob.scala 234:71]
      rob_info[dispatch_idxs[dispatch_idx_1]].busy <= UInt<1>("h01") @[Rob.scala 235:30]
      skip @[Rob.scala 234:71]
    node _dispatch_idx_T_12 = mux(bju0_mask[6], UInt<3>("h06"), UInt<3>("h07")) @[Mux.scala 47:69]
    node _dispatch_idx_T_13 = mux(bju0_mask[5], UInt<3>("h05"), _dispatch_idx_T_12) @[Mux.scala 47:69]
    node _dispatch_idx_T_14 = mux(bju0_mask[4], UInt<3>("h04"), _dispatch_idx_T_13) @[Mux.scala 47:69]
    node _dispatch_idx_T_15 = mux(bju0_mask[3], UInt<2>("h03"), _dispatch_idx_T_14) @[Mux.scala 47:69]
    node _dispatch_idx_T_16 = mux(bju0_mask[2], UInt<2>("h02"), _dispatch_idx_T_15) @[Mux.scala 47:69]
    node _dispatch_idx_T_17 = mux(bju0_mask[1], UInt<1>("h01"), _dispatch_idx_T_16) @[Mux.scala 47:69]
    node dispatch_idx_2 = mux(bju0_mask[0], UInt<1>("h00"), _dispatch_idx_T_17) @[Mux.scala 47:69]
    node dispatch_valid_2 = and(ready_mask[dispatch_idx_2], bju0_mask[dispatch_idx_2]) @[Rob.scala 224:50]
    io.dispatch_info_o[2].valid <= dispatch_valid_2 @[Rob.scala 225:33]
    io.dispatch_info_o[2].bits.rob_idx <= dispatch_idxs[dispatch_idx_2] @[Rob.scala 226:40]
    io.dispatch_info_o[2].bits.uop <= rob_info[dispatch_idxs[dispatch_idx_2]].uop @[Rob.scala 227:36]
    io.dispatch_info_o[2].bits.need_imm <= rob_info[dispatch_idxs[dispatch_idx_2]].need_imm @[Rob.scala 228:41]
    io.dispatch_info_o[2].bits.inst_addr <= rob_info[dispatch_idxs[dispatch_idx_2]].inst_addr @[Rob.scala 229:42]
    io.dispatch_info_o[2].bits.op1_data <= rob_info[dispatch_idxs[dispatch_idx_2]].op1_data @[Rob.scala 230:41]
    io.dispatch_info_o[2].bits.op2_data <= rob_info[dispatch_idxs[dispatch_idx_2]].op2_data @[Rob.scala 231:41]
    io.dispatch_info_o[2].bits.imm_data <= rob_info[dispatch_idxs[dispatch_idx_2]].imm_data @[Rob.scala 232:41]
    io.dispatch_info_o[2].bits.predict_taken <= rob_info[dispatch_idxs[dispatch_idx_2]].predict_taken @[Rob.scala 233:46]
    node _T_26 = and(dispatch_valid_2, io.dispatch_info_o[2].ready) @[Rob.scala 234:25]
    node _T_27 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 234:58]
    node _T_28 = and(_T_26, _T_27) @[Rob.scala 234:55]
    when _T_28 : @[Rob.scala 234:71]
      rob_info[dispatch_idxs[dispatch_idx_2]].busy <= UInt<1>("h01") @[Rob.scala 235:30]
      skip @[Rob.scala 234:71]
    node _dispatch_idx_T_18 = mux(dispatch_mask_3[6], UInt<3>("h06"), UInt<3>("h07")) @[Mux.scala 47:69]
    node _dispatch_idx_T_19 = mux(dispatch_mask_3[5], UInt<3>("h05"), _dispatch_idx_T_18) @[Mux.scala 47:69]
    node _dispatch_idx_T_20 = mux(dispatch_mask_3[4], UInt<3>("h04"), _dispatch_idx_T_19) @[Mux.scala 47:69]
    node _dispatch_idx_T_21 = mux(dispatch_mask_3[3], UInt<2>("h03"), _dispatch_idx_T_20) @[Mux.scala 47:69]
    node _dispatch_idx_T_22 = mux(dispatch_mask_3[2], UInt<2>("h02"), _dispatch_idx_T_21) @[Mux.scala 47:69]
    node _dispatch_idx_T_23 = mux(dispatch_mask_3[1], UInt<1>("h01"), _dispatch_idx_T_22) @[Mux.scala 47:69]
    node dispatch_idx_3 = mux(dispatch_mask_3[0], UInt<1>("h00"), _dispatch_idx_T_23) @[Mux.scala 47:69]
    node dispatch_valid_3 = and(ready_mask[dispatch_idx_3], dispatch_mask_3[dispatch_idx_3]) @[Rob.scala 224:50]
    io.dispatch_info_o[3].valid <= dispatch_valid_3 @[Rob.scala 225:33]
    io.dispatch_info_o[3].bits.rob_idx <= dispatch_idxs[dispatch_idx_3] @[Rob.scala 226:40]
    io.dispatch_info_o[3].bits.uop <= rob_info[dispatch_idxs[dispatch_idx_3]].uop @[Rob.scala 227:36]
    io.dispatch_info_o[3].bits.need_imm <= rob_info[dispatch_idxs[dispatch_idx_3]].need_imm @[Rob.scala 228:41]
    io.dispatch_info_o[3].bits.inst_addr <= rob_info[dispatch_idxs[dispatch_idx_3]].inst_addr @[Rob.scala 229:42]
    io.dispatch_info_o[3].bits.op1_data <= rob_info[dispatch_idxs[dispatch_idx_3]].op1_data @[Rob.scala 230:41]
    io.dispatch_info_o[3].bits.op2_data <= rob_info[dispatch_idxs[dispatch_idx_3]].op2_data @[Rob.scala 231:41]
    io.dispatch_info_o[3].bits.imm_data <= rob_info[dispatch_idxs[dispatch_idx_3]].imm_data @[Rob.scala 232:41]
    io.dispatch_info_o[3].bits.predict_taken <= rob_info[dispatch_idxs[dispatch_idx_3]].predict_taken @[Rob.scala 233:46]
    node _T_29 = and(dispatch_valid_3, io.dispatch_info_o[3].ready) @[Rob.scala 234:25]
    node _T_30 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 234:58]
    node _T_31 = and(_T_29, _T_30) @[Rob.scala 234:55]
    when _T_31 : @[Rob.scala 234:71]
      rob_info[dispatch_idxs[dispatch_idx_3]].busy <= UInt<1>("h01") @[Rob.scala 235:30]
      skip @[Rob.scala 234:71]
    node _dispatch_idx_T_24 = mux(dispatch_mask_4[6], UInt<3>("h06"), UInt<3>("h07")) @[Mux.scala 47:69]
    node _dispatch_idx_T_25 = mux(dispatch_mask_4[5], UInt<3>("h05"), _dispatch_idx_T_24) @[Mux.scala 47:69]
    node _dispatch_idx_T_26 = mux(dispatch_mask_4[4], UInt<3>("h04"), _dispatch_idx_T_25) @[Mux.scala 47:69]
    node _dispatch_idx_T_27 = mux(dispatch_mask_4[3], UInt<2>("h03"), _dispatch_idx_T_26) @[Mux.scala 47:69]
    node _dispatch_idx_T_28 = mux(dispatch_mask_4[2], UInt<2>("h02"), _dispatch_idx_T_27) @[Mux.scala 47:69]
    node _dispatch_idx_T_29 = mux(dispatch_mask_4[1], UInt<1>("h01"), _dispatch_idx_T_28) @[Mux.scala 47:69]
    node dispatch_idx_4 = mux(dispatch_mask_4[0], UInt<1>("h00"), _dispatch_idx_T_29) @[Mux.scala 47:69]
    node dispatch_valid_4 = and(ready_mask[dispatch_idx_4], dispatch_mask_4[dispatch_idx_4]) @[Rob.scala 224:50]
    io.dispatch_info_o[4].valid <= dispatch_valid_4 @[Rob.scala 225:33]
    io.dispatch_info_o[4].bits.rob_idx <= dispatch_idxs[dispatch_idx_4] @[Rob.scala 226:40]
    io.dispatch_info_o[4].bits.uop <= rob_info[dispatch_idxs[dispatch_idx_4]].uop @[Rob.scala 227:36]
    io.dispatch_info_o[4].bits.need_imm <= rob_info[dispatch_idxs[dispatch_idx_4]].need_imm @[Rob.scala 228:41]
    io.dispatch_info_o[4].bits.inst_addr <= rob_info[dispatch_idxs[dispatch_idx_4]].inst_addr @[Rob.scala 229:42]
    io.dispatch_info_o[4].bits.op1_data <= rob_info[dispatch_idxs[dispatch_idx_4]].op1_data @[Rob.scala 230:41]
    io.dispatch_info_o[4].bits.op2_data <= rob_info[dispatch_idxs[dispatch_idx_4]].op2_data @[Rob.scala 231:41]
    io.dispatch_info_o[4].bits.imm_data <= rob_info[dispatch_idxs[dispatch_idx_4]].imm_data @[Rob.scala 232:41]
    io.dispatch_info_o[4].bits.predict_taken <= rob_info[dispatch_idxs[dispatch_idx_4]].predict_taken @[Rob.scala 233:46]
    node _T_32 = and(dispatch_valid_4, io.dispatch_info_o[4].ready) @[Rob.scala 234:25]
    node _T_33 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 234:58]
    node _T_34 = and(_T_32, _T_33) @[Rob.scala 234:55]
    when _T_34 : @[Rob.scala 234:71]
      rob_info[dispatch_idxs[dispatch_idx_4]].busy <= UInt<1>("h01") @[Rob.scala 235:30]
      skip @[Rob.scala 234:71]
    node _T_35 = and(io.rob_allocate.allocate_info.valid, io.rob_allocate.allocate_info.bits[0].inst_valid) @[Rob.scala 242:45]
    node _T_36 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 242:99]
    node _T_37 = and(_T_35, _T_36) @[Rob.scala 242:96]
    when _T_37 : @[Rob.scala 242:112]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].commit_ready <= UInt<1>("h00") @[Rob.scala 243:38]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].busy <= UInt<1>("h00") @[Rob.scala 244:30]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].is_valid <= UInt<1>("h01") @[Rob.scala 245:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].op1_ready <= UInt<1>("h00") @[Rob.scala 246:35]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].op2_ready <= UInt<1>("h00") @[Rob.scala 247:35]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].predict_miss <= UInt<1>("h00") @[Rob.scala 248:38]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].is_taken <= UInt<1>("h00") @[Rob.scala 249:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].is_init <= UInt<1>("h00") @[Rob.scala 250:33]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].inst_addr <= io.rob_allocate.allocate_info.bits[0].inst_addr @[Rob.scala 251:35]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].commit_addr <= io.rob_allocate.allocate_info.bits[0].commit_addr @[Rob.scala 252:37]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].commit_target <= io.rob_allocate.allocate_info.bits[0].commit_target @[Rob.scala 253:39]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].except_type <= io.rob_allocate.allocate_info.bits[0].except_type @[Rob.scala 254:37]
      node _rob_info_is_branch_T = eq(io.rob_allocate.allocate_info.bits[0].unit_sel, UInt<3>("h05")) @[Rob.scala 255:85]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].is_branch <= _rob_info_is_branch_T @[Rob.scala 255:35]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].is_delay <= io.rob_allocate.allocate_info.bits[0].is_delay @[Rob.scala 256:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].gh_info <= io.rob_allocate.allocate_info.bits[0].gh_info @[Rob.scala 257:33]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].uop <= io.rob_allocate.allocate_info.bits[0].uop @[Rob.scala 258:29]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].unit_sel <= io.rob_allocate.allocate_info.bits[0].unit_sel @[Rob.scala 259:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].need_imm <= io.rob_allocate.allocate_info.bits[0].need_imm @[Rob.scala 260:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].imm_data <= io.rob_allocate.allocate_info.bits[0].imm_data @[Rob.scala 261:34]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].flush_on_commit <= io.rob_allocate.allocate_info.bits[0].flush_on_commit @[Rob.scala 262:41]
      rob_info[io.rob_allocate.allocate_info.bits[0].rob_idx].predict_taken <= io.rob_allocate.allocate_info.bits[0].predict_taken @[Rob.scala 263:39]
      skip @[Rob.scala 242:112]
    node _T_38 = and(io.rob_allocate.allocate_info.valid, io.rob_allocate.allocate_info.bits[1].inst_valid) @[Rob.scala 242:45]
    node _T_39 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 242:99]
    node _T_40 = and(_T_38, _T_39) @[Rob.scala 242:96]
    when _T_40 : @[Rob.scala 242:112]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].commit_ready <= UInt<1>("h00") @[Rob.scala 243:38]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].busy <= UInt<1>("h00") @[Rob.scala 244:30]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].is_valid <= UInt<1>("h01") @[Rob.scala 245:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].op1_ready <= UInt<1>("h00") @[Rob.scala 246:35]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].op2_ready <= UInt<1>("h00") @[Rob.scala 247:35]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].predict_miss <= UInt<1>("h00") @[Rob.scala 248:38]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].is_taken <= UInt<1>("h00") @[Rob.scala 249:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].is_init <= UInt<1>("h00") @[Rob.scala 250:33]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].inst_addr <= io.rob_allocate.allocate_info.bits[1].inst_addr @[Rob.scala 251:35]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].commit_addr <= io.rob_allocate.allocate_info.bits[1].commit_addr @[Rob.scala 252:37]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].commit_target <= io.rob_allocate.allocate_info.bits[1].commit_target @[Rob.scala 253:39]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].except_type <= io.rob_allocate.allocate_info.bits[1].except_type @[Rob.scala 254:37]
      node _rob_info_is_branch_T_1 = eq(io.rob_allocate.allocate_info.bits[1].unit_sel, UInt<3>("h05")) @[Rob.scala 255:85]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].is_branch <= _rob_info_is_branch_T_1 @[Rob.scala 255:35]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].is_delay <= io.rob_allocate.allocate_info.bits[1].is_delay @[Rob.scala 256:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].gh_info <= io.rob_allocate.allocate_info.bits[1].gh_info @[Rob.scala 257:33]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].uop <= io.rob_allocate.allocate_info.bits[1].uop @[Rob.scala 258:29]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].unit_sel <= io.rob_allocate.allocate_info.bits[1].unit_sel @[Rob.scala 259:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].need_imm <= io.rob_allocate.allocate_info.bits[1].need_imm @[Rob.scala 260:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].imm_data <= io.rob_allocate.allocate_info.bits[1].imm_data @[Rob.scala 261:34]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].flush_on_commit <= io.rob_allocate.allocate_info.bits[1].flush_on_commit @[Rob.scala 262:41]
      rob_info[io.rob_allocate.allocate_info.bits[1].rob_idx].predict_taken <= io.rob_allocate.allocate_info.bits[1].predict_taken @[Rob.scala 263:39]
      skip @[Rob.scala 242:112]
    node _T_41 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[0].op1_tag) @[Rob.scala 269:66]
    node _T_42 = and(io.wb_info_i[0].valid, _T_41) @[Rob.scala 269:34]
    node _T_43 = and(_T_42, rob_info[0].is_valid) @[Rob.scala 269:90]
    node _T_44 = eq(rob_info[0].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_45 = and(_T_43, _T_44) @[Rob.scala 269:113]
    node _T_46 = and(_T_45, rob_info[0].is_init) @[Rob.scala 269:139]
    node _T_47 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_48 = and(_T_46, _T_47) @[Rob.scala 269:161]
    when _T_48 : @[Rob.scala 269:177]
      rob_info[0].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[0].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_49 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[0].op2_tag) @[Rob.scala 273:66]
    node _T_50 = and(io.wb_info_i[0].valid, _T_49) @[Rob.scala 273:34]
    node _T_51 = and(_T_50, rob_info[0].is_valid) @[Rob.scala 273:90]
    node _T_52 = eq(rob_info[0].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_53 = and(_T_51, _T_52) @[Rob.scala 273:113]
    node _T_54 = and(_T_53, rob_info[0].is_init) @[Rob.scala 273:139]
    node _T_55 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_56 = and(_T_54, _T_55) @[Rob.scala 273:161]
    when _T_56 : @[Rob.scala 273:177]
      rob_info[0].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[0].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_57 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[0].op1_tag) @[Rob.scala 269:66]
    node _T_58 = and(io.wb_info_i[1].valid, _T_57) @[Rob.scala 269:34]
    node _T_59 = and(_T_58, rob_info[0].is_valid) @[Rob.scala 269:90]
    node _T_60 = eq(rob_info[0].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_61 = and(_T_59, _T_60) @[Rob.scala 269:113]
    node _T_62 = and(_T_61, rob_info[0].is_init) @[Rob.scala 269:139]
    node _T_63 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_64 = and(_T_62, _T_63) @[Rob.scala 269:161]
    when _T_64 : @[Rob.scala 269:177]
      rob_info[0].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[0].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_65 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[0].op2_tag) @[Rob.scala 273:66]
    node _T_66 = and(io.wb_info_i[1].valid, _T_65) @[Rob.scala 273:34]
    node _T_67 = and(_T_66, rob_info[0].is_valid) @[Rob.scala 273:90]
    node _T_68 = eq(rob_info[0].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_69 = and(_T_67, _T_68) @[Rob.scala 273:113]
    node _T_70 = and(_T_69, rob_info[0].is_init) @[Rob.scala 273:139]
    node _T_71 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_72 = and(_T_70, _T_71) @[Rob.scala 273:161]
    when _T_72 : @[Rob.scala 273:177]
      rob_info[0].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[0].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_73 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[0].op1_tag) @[Rob.scala 269:66]
    node _T_74 = and(io.wb_info_i[2].valid, _T_73) @[Rob.scala 269:34]
    node _T_75 = and(_T_74, rob_info[0].is_valid) @[Rob.scala 269:90]
    node _T_76 = eq(rob_info[0].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_77 = and(_T_75, _T_76) @[Rob.scala 269:113]
    node _T_78 = and(_T_77, rob_info[0].is_init) @[Rob.scala 269:139]
    node _T_79 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_80 = and(_T_78, _T_79) @[Rob.scala 269:161]
    when _T_80 : @[Rob.scala 269:177]
      rob_info[0].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[0].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_81 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[0].op2_tag) @[Rob.scala 273:66]
    node _T_82 = and(io.wb_info_i[2].valid, _T_81) @[Rob.scala 273:34]
    node _T_83 = and(_T_82, rob_info[0].is_valid) @[Rob.scala 273:90]
    node _T_84 = eq(rob_info[0].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_85 = and(_T_83, _T_84) @[Rob.scala 273:113]
    node _T_86 = and(_T_85, rob_info[0].is_init) @[Rob.scala 273:139]
    node _T_87 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_88 = and(_T_86, _T_87) @[Rob.scala 273:161]
    when _T_88 : @[Rob.scala 273:177]
      rob_info[0].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[0].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_89 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[0].op1_tag) @[Rob.scala 269:66]
    node _T_90 = and(io.wb_info_i[3].valid, _T_89) @[Rob.scala 269:34]
    node _T_91 = and(_T_90, rob_info[0].is_valid) @[Rob.scala 269:90]
    node _T_92 = eq(rob_info[0].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_93 = and(_T_91, _T_92) @[Rob.scala 269:113]
    node _T_94 = and(_T_93, rob_info[0].is_init) @[Rob.scala 269:139]
    node _T_95 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_96 = and(_T_94, _T_95) @[Rob.scala 269:161]
    when _T_96 : @[Rob.scala 269:177]
      rob_info[0].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[0].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_97 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[0].op2_tag) @[Rob.scala 273:66]
    node _T_98 = and(io.wb_info_i[3].valid, _T_97) @[Rob.scala 273:34]
    node _T_99 = and(_T_98, rob_info[0].is_valid) @[Rob.scala 273:90]
    node _T_100 = eq(rob_info[0].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_101 = and(_T_99, _T_100) @[Rob.scala 273:113]
    node _T_102 = and(_T_101, rob_info[0].is_init) @[Rob.scala 273:139]
    node _T_103 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_104 = and(_T_102, _T_103) @[Rob.scala 273:161]
    when _T_104 : @[Rob.scala 273:177]
      rob_info[0].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[0].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_105 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[0].op1_tag) @[Rob.scala 269:66]
    node _T_106 = and(io.wb_info_i[4].valid, _T_105) @[Rob.scala 269:34]
    node _T_107 = and(_T_106, rob_info[0].is_valid) @[Rob.scala 269:90]
    node _T_108 = eq(rob_info[0].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_109 = and(_T_107, _T_108) @[Rob.scala 269:113]
    node _T_110 = and(_T_109, rob_info[0].is_init) @[Rob.scala 269:139]
    node _T_111 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_112 = and(_T_110, _T_111) @[Rob.scala 269:161]
    when _T_112 : @[Rob.scala 269:177]
      rob_info[0].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[0].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_113 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[0].op2_tag) @[Rob.scala 273:66]
    node _T_114 = and(io.wb_info_i[4].valid, _T_113) @[Rob.scala 273:34]
    node _T_115 = and(_T_114, rob_info[0].is_valid) @[Rob.scala 273:90]
    node _T_116 = eq(rob_info[0].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_117 = and(_T_115, _T_116) @[Rob.scala 273:113]
    node _T_118 = and(_T_117, rob_info[0].is_init) @[Rob.scala 273:139]
    node _T_119 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_120 = and(_T_118, _T_119) @[Rob.scala 273:161]
    when _T_120 : @[Rob.scala 273:177]
      rob_info[0].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[0].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_121 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[1].op1_tag) @[Rob.scala 269:66]
    node _T_122 = and(io.wb_info_i[0].valid, _T_121) @[Rob.scala 269:34]
    node _T_123 = and(_T_122, rob_info[1].is_valid) @[Rob.scala 269:90]
    node _T_124 = eq(rob_info[1].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_125 = and(_T_123, _T_124) @[Rob.scala 269:113]
    node _T_126 = and(_T_125, rob_info[1].is_init) @[Rob.scala 269:139]
    node _T_127 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_128 = and(_T_126, _T_127) @[Rob.scala 269:161]
    when _T_128 : @[Rob.scala 269:177]
      rob_info[1].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[1].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_129 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[1].op2_tag) @[Rob.scala 273:66]
    node _T_130 = and(io.wb_info_i[0].valid, _T_129) @[Rob.scala 273:34]
    node _T_131 = and(_T_130, rob_info[1].is_valid) @[Rob.scala 273:90]
    node _T_132 = eq(rob_info[1].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_133 = and(_T_131, _T_132) @[Rob.scala 273:113]
    node _T_134 = and(_T_133, rob_info[1].is_init) @[Rob.scala 273:139]
    node _T_135 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_136 = and(_T_134, _T_135) @[Rob.scala 273:161]
    when _T_136 : @[Rob.scala 273:177]
      rob_info[1].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[1].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_137 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[1].op1_tag) @[Rob.scala 269:66]
    node _T_138 = and(io.wb_info_i[1].valid, _T_137) @[Rob.scala 269:34]
    node _T_139 = and(_T_138, rob_info[1].is_valid) @[Rob.scala 269:90]
    node _T_140 = eq(rob_info[1].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_141 = and(_T_139, _T_140) @[Rob.scala 269:113]
    node _T_142 = and(_T_141, rob_info[1].is_init) @[Rob.scala 269:139]
    node _T_143 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_144 = and(_T_142, _T_143) @[Rob.scala 269:161]
    when _T_144 : @[Rob.scala 269:177]
      rob_info[1].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[1].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_145 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[1].op2_tag) @[Rob.scala 273:66]
    node _T_146 = and(io.wb_info_i[1].valid, _T_145) @[Rob.scala 273:34]
    node _T_147 = and(_T_146, rob_info[1].is_valid) @[Rob.scala 273:90]
    node _T_148 = eq(rob_info[1].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_149 = and(_T_147, _T_148) @[Rob.scala 273:113]
    node _T_150 = and(_T_149, rob_info[1].is_init) @[Rob.scala 273:139]
    node _T_151 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_152 = and(_T_150, _T_151) @[Rob.scala 273:161]
    when _T_152 : @[Rob.scala 273:177]
      rob_info[1].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[1].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_153 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[1].op1_tag) @[Rob.scala 269:66]
    node _T_154 = and(io.wb_info_i[2].valid, _T_153) @[Rob.scala 269:34]
    node _T_155 = and(_T_154, rob_info[1].is_valid) @[Rob.scala 269:90]
    node _T_156 = eq(rob_info[1].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_157 = and(_T_155, _T_156) @[Rob.scala 269:113]
    node _T_158 = and(_T_157, rob_info[1].is_init) @[Rob.scala 269:139]
    node _T_159 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_160 = and(_T_158, _T_159) @[Rob.scala 269:161]
    when _T_160 : @[Rob.scala 269:177]
      rob_info[1].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[1].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_161 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[1].op2_tag) @[Rob.scala 273:66]
    node _T_162 = and(io.wb_info_i[2].valid, _T_161) @[Rob.scala 273:34]
    node _T_163 = and(_T_162, rob_info[1].is_valid) @[Rob.scala 273:90]
    node _T_164 = eq(rob_info[1].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_165 = and(_T_163, _T_164) @[Rob.scala 273:113]
    node _T_166 = and(_T_165, rob_info[1].is_init) @[Rob.scala 273:139]
    node _T_167 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_168 = and(_T_166, _T_167) @[Rob.scala 273:161]
    when _T_168 : @[Rob.scala 273:177]
      rob_info[1].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[1].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_169 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[1].op1_tag) @[Rob.scala 269:66]
    node _T_170 = and(io.wb_info_i[3].valid, _T_169) @[Rob.scala 269:34]
    node _T_171 = and(_T_170, rob_info[1].is_valid) @[Rob.scala 269:90]
    node _T_172 = eq(rob_info[1].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_173 = and(_T_171, _T_172) @[Rob.scala 269:113]
    node _T_174 = and(_T_173, rob_info[1].is_init) @[Rob.scala 269:139]
    node _T_175 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_176 = and(_T_174, _T_175) @[Rob.scala 269:161]
    when _T_176 : @[Rob.scala 269:177]
      rob_info[1].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[1].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_177 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[1].op2_tag) @[Rob.scala 273:66]
    node _T_178 = and(io.wb_info_i[3].valid, _T_177) @[Rob.scala 273:34]
    node _T_179 = and(_T_178, rob_info[1].is_valid) @[Rob.scala 273:90]
    node _T_180 = eq(rob_info[1].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_181 = and(_T_179, _T_180) @[Rob.scala 273:113]
    node _T_182 = and(_T_181, rob_info[1].is_init) @[Rob.scala 273:139]
    node _T_183 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_184 = and(_T_182, _T_183) @[Rob.scala 273:161]
    when _T_184 : @[Rob.scala 273:177]
      rob_info[1].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[1].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_185 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[1].op1_tag) @[Rob.scala 269:66]
    node _T_186 = and(io.wb_info_i[4].valid, _T_185) @[Rob.scala 269:34]
    node _T_187 = and(_T_186, rob_info[1].is_valid) @[Rob.scala 269:90]
    node _T_188 = eq(rob_info[1].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_189 = and(_T_187, _T_188) @[Rob.scala 269:113]
    node _T_190 = and(_T_189, rob_info[1].is_init) @[Rob.scala 269:139]
    node _T_191 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_192 = and(_T_190, _T_191) @[Rob.scala 269:161]
    when _T_192 : @[Rob.scala 269:177]
      rob_info[1].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[1].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_193 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[1].op2_tag) @[Rob.scala 273:66]
    node _T_194 = and(io.wb_info_i[4].valid, _T_193) @[Rob.scala 273:34]
    node _T_195 = and(_T_194, rob_info[1].is_valid) @[Rob.scala 273:90]
    node _T_196 = eq(rob_info[1].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_197 = and(_T_195, _T_196) @[Rob.scala 273:113]
    node _T_198 = and(_T_197, rob_info[1].is_init) @[Rob.scala 273:139]
    node _T_199 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_200 = and(_T_198, _T_199) @[Rob.scala 273:161]
    when _T_200 : @[Rob.scala 273:177]
      rob_info[1].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[1].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_201 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[2].op1_tag) @[Rob.scala 269:66]
    node _T_202 = and(io.wb_info_i[0].valid, _T_201) @[Rob.scala 269:34]
    node _T_203 = and(_T_202, rob_info[2].is_valid) @[Rob.scala 269:90]
    node _T_204 = eq(rob_info[2].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_205 = and(_T_203, _T_204) @[Rob.scala 269:113]
    node _T_206 = and(_T_205, rob_info[2].is_init) @[Rob.scala 269:139]
    node _T_207 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_208 = and(_T_206, _T_207) @[Rob.scala 269:161]
    when _T_208 : @[Rob.scala 269:177]
      rob_info[2].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[2].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_209 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[2].op2_tag) @[Rob.scala 273:66]
    node _T_210 = and(io.wb_info_i[0].valid, _T_209) @[Rob.scala 273:34]
    node _T_211 = and(_T_210, rob_info[2].is_valid) @[Rob.scala 273:90]
    node _T_212 = eq(rob_info[2].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_213 = and(_T_211, _T_212) @[Rob.scala 273:113]
    node _T_214 = and(_T_213, rob_info[2].is_init) @[Rob.scala 273:139]
    node _T_215 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_216 = and(_T_214, _T_215) @[Rob.scala 273:161]
    when _T_216 : @[Rob.scala 273:177]
      rob_info[2].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[2].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_217 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[2].op1_tag) @[Rob.scala 269:66]
    node _T_218 = and(io.wb_info_i[1].valid, _T_217) @[Rob.scala 269:34]
    node _T_219 = and(_T_218, rob_info[2].is_valid) @[Rob.scala 269:90]
    node _T_220 = eq(rob_info[2].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_221 = and(_T_219, _T_220) @[Rob.scala 269:113]
    node _T_222 = and(_T_221, rob_info[2].is_init) @[Rob.scala 269:139]
    node _T_223 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_224 = and(_T_222, _T_223) @[Rob.scala 269:161]
    when _T_224 : @[Rob.scala 269:177]
      rob_info[2].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[2].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_225 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[2].op2_tag) @[Rob.scala 273:66]
    node _T_226 = and(io.wb_info_i[1].valid, _T_225) @[Rob.scala 273:34]
    node _T_227 = and(_T_226, rob_info[2].is_valid) @[Rob.scala 273:90]
    node _T_228 = eq(rob_info[2].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_229 = and(_T_227, _T_228) @[Rob.scala 273:113]
    node _T_230 = and(_T_229, rob_info[2].is_init) @[Rob.scala 273:139]
    node _T_231 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_232 = and(_T_230, _T_231) @[Rob.scala 273:161]
    when _T_232 : @[Rob.scala 273:177]
      rob_info[2].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[2].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_233 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[2].op1_tag) @[Rob.scala 269:66]
    node _T_234 = and(io.wb_info_i[2].valid, _T_233) @[Rob.scala 269:34]
    node _T_235 = and(_T_234, rob_info[2].is_valid) @[Rob.scala 269:90]
    node _T_236 = eq(rob_info[2].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_237 = and(_T_235, _T_236) @[Rob.scala 269:113]
    node _T_238 = and(_T_237, rob_info[2].is_init) @[Rob.scala 269:139]
    node _T_239 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_240 = and(_T_238, _T_239) @[Rob.scala 269:161]
    when _T_240 : @[Rob.scala 269:177]
      rob_info[2].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[2].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_241 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[2].op2_tag) @[Rob.scala 273:66]
    node _T_242 = and(io.wb_info_i[2].valid, _T_241) @[Rob.scala 273:34]
    node _T_243 = and(_T_242, rob_info[2].is_valid) @[Rob.scala 273:90]
    node _T_244 = eq(rob_info[2].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_245 = and(_T_243, _T_244) @[Rob.scala 273:113]
    node _T_246 = and(_T_245, rob_info[2].is_init) @[Rob.scala 273:139]
    node _T_247 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_248 = and(_T_246, _T_247) @[Rob.scala 273:161]
    when _T_248 : @[Rob.scala 273:177]
      rob_info[2].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[2].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_249 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[2].op1_tag) @[Rob.scala 269:66]
    node _T_250 = and(io.wb_info_i[3].valid, _T_249) @[Rob.scala 269:34]
    node _T_251 = and(_T_250, rob_info[2].is_valid) @[Rob.scala 269:90]
    node _T_252 = eq(rob_info[2].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_253 = and(_T_251, _T_252) @[Rob.scala 269:113]
    node _T_254 = and(_T_253, rob_info[2].is_init) @[Rob.scala 269:139]
    node _T_255 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_256 = and(_T_254, _T_255) @[Rob.scala 269:161]
    when _T_256 : @[Rob.scala 269:177]
      rob_info[2].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[2].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_257 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[2].op2_tag) @[Rob.scala 273:66]
    node _T_258 = and(io.wb_info_i[3].valid, _T_257) @[Rob.scala 273:34]
    node _T_259 = and(_T_258, rob_info[2].is_valid) @[Rob.scala 273:90]
    node _T_260 = eq(rob_info[2].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_261 = and(_T_259, _T_260) @[Rob.scala 273:113]
    node _T_262 = and(_T_261, rob_info[2].is_init) @[Rob.scala 273:139]
    node _T_263 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_264 = and(_T_262, _T_263) @[Rob.scala 273:161]
    when _T_264 : @[Rob.scala 273:177]
      rob_info[2].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[2].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_265 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[2].op1_tag) @[Rob.scala 269:66]
    node _T_266 = and(io.wb_info_i[4].valid, _T_265) @[Rob.scala 269:34]
    node _T_267 = and(_T_266, rob_info[2].is_valid) @[Rob.scala 269:90]
    node _T_268 = eq(rob_info[2].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_269 = and(_T_267, _T_268) @[Rob.scala 269:113]
    node _T_270 = and(_T_269, rob_info[2].is_init) @[Rob.scala 269:139]
    node _T_271 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_272 = and(_T_270, _T_271) @[Rob.scala 269:161]
    when _T_272 : @[Rob.scala 269:177]
      rob_info[2].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[2].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_273 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[2].op2_tag) @[Rob.scala 273:66]
    node _T_274 = and(io.wb_info_i[4].valid, _T_273) @[Rob.scala 273:34]
    node _T_275 = and(_T_274, rob_info[2].is_valid) @[Rob.scala 273:90]
    node _T_276 = eq(rob_info[2].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_277 = and(_T_275, _T_276) @[Rob.scala 273:113]
    node _T_278 = and(_T_277, rob_info[2].is_init) @[Rob.scala 273:139]
    node _T_279 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_280 = and(_T_278, _T_279) @[Rob.scala 273:161]
    when _T_280 : @[Rob.scala 273:177]
      rob_info[2].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[2].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_281 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[3].op1_tag) @[Rob.scala 269:66]
    node _T_282 = and(io.wb_info_i[0].valid, _T_281) @[Rob.scala 269:34]
    node _T_283 = and(_T_282, rob_info[3].is_valid) @[Rob.scala 269:90]
    node _T_284 = eq(rob_info[3].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_285 = and(_T_283, _T_284) @[Rob.scala 269:113]
    node _T_286 = and(_T_285, rob_info[3].is_init) @[Rob.scala 269:139]
    node _T_287 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_288 = and(_T_286, _T_287) @[Rob.scala 269:161]
    when _T_288 : @[Rob.scala 269:177]
      rob_info[3].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[3].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_289 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[3].op2_tag) @[Rob.scala 273:66]
    node _T_290 = and(io.wb_info_i[0].valid, _T_289) @[Rob.scala 273:34]
    node _T_291 = and(_T_290, rob_info[3].is_valid) @[Rob.scala 273:90]
    node _T_292 = eq(rob_info[3].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_293 = and(_T_291, _T_292) @[Rob.scala 273:113]
    node _T_294 = and(_T_293, rob_info[3].is_init) @[Rob.scala 273:139]
    node _T_295 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_296 = and(_T_294, _T_295) @[Rob.scala 273:161]
    when _T_296 : @[Rob.scala 273:177]
      rob_info[3].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[3].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_297 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[3].op1_tag) @[Rob.scala 269:66]
    node _T_298 = and(io.wb_info_i[1].valid, _T_297) @[Rob.scala 269:34]
    node _T_299 = and(_T_298, rob_info[3].is_valid) @[Rob.scala 269:90]
    node _T_300 = eq(rob_info[3].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_301 = and(_T_299, _T_300) @[Rob.scala 269:113]
    node _T_302 = and(_T_301, rob_info[3].is_init) @[Rob.scala 269:139]
    node _T_303 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_304 = and(_T_302, _T_303) @[Rob.scala 269:161]
    when _T_304 : @[Rob.scala 269:177]
      rob_info[3].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[3].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_305 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[3].op2_tag) @[Rob.scala 273:66]
    node _T_306 = and(io.wb_info_i[1].valid, _T_305) @[Rob.scala 273:34]
    node _T_307 = and(_T_306, rob_info[3].is_valid) @[Rob.scala 273:90]
    node _T_308 = eq(rob_info[3].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_309 = and(_T_307, _T_308) @[Rob.scala 273:113]
    node _T_310 = and(_T_309, rob_info[3].is_init) @[Rob.scala 273:139]
    node _T_311 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_312 = and(_T_310, _T_311) @[Rob.scala 273:161]
    when _T_312 : @[Rob.scala 273:177]
      rob_info[3].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[3].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_313 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[3].op1_tag) @[Rob.scala 269:66]
    node _T_314 = and(io.wb_info_i[2].valid, _T_313) @[Rob.scala 269:34]
    node _T_315 = and(_T_314, rob_info[3].is_valid) @[Rob.scala 269:90]
    node _T_316 = eq(rob_info[3].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_317 = and(_T_315, _T_316) @[Rob.scala 269:113]
    node _T_318 = and(_T_317, rob_info[3].is_init) @[Rob.scala 269:139]
    node _T_319 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_320 = and(_T_318, _T_319) @[Rob.scala 269:161]
    when _T_320 : @[Rob.scala 269:177]
      rob_info[3].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[3].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_321 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[3].op2_tag) @[Rob.scala 273:66]
    node _T_322 = and(io.wb_info_i[2].valid, _T_321) @[Rob.scala 273:34]
    node _T_323 = and(_T_322, rob_info[3].is_valid) @[Rob.scala 273:90]
    node _T_324 = eq(rob_info[3].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_325 = and(_T_323, _T_324) @[Rob.scala 273:113]
    node _T_326 = and(_T_325, rob_info[3].is_init) @[Rob.scala 273:139]
    node _T_327 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_328 = and(_T_326, _T_327) @[Rob.scala 273:161]
    when _T_328 : @[Rob.scala 273:177]
      rob_info[3].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[3].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_329 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[3].op1_tag) @[Rob.scala 269:66]
    node _T_330 = and(io.wb_info_i[3].valid, _T_329) @[Rob.scala 269:34]
    node _T_331 = and(_T_330, rob_info[3].is_valid) @[Rob.scala 269:90]
    node _T_332 = eq(rob_info[3].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_333 = and(_T_331, _T_332) @[Rob.scala 269:113]
    node _T_334 = and(_T_333, rob_info[3].is_init) @[Rob.scala 269:139]
    node _T_335 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_336 = and(_T_334, _T_335) @[Rob.scala 269:161]
    when _T_336 : @[Rob.scala 269:177]
      rob_info[3].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[3].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_337 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[3].op2_tag) @[Rob.scala 273:66]
    node _T_338 = and(io.wb_info_i[3].valid, _T_337) @[Rob.scala 273:34]
    node _T_339 = and(_T_338, rob_info[3].is_valid) @[Rob.scala 273:90]
    node _T_340 = eq(rob_info[3].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_341 = and(_T_339, _T_340) @[Rob.scala 273:113]
    node _T_342 = and(_T_341, rob_info[3].is_init) @[Rob.scala 273:139]
    node _T_343 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_344 = and(_T_342, _T_343) @[Rob.scala 273:161]
    when _T_344 : @[Rob.scala 273:177]
      rob_info[3].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[3].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_345 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[3].op1_tag) @[Rob.scala 269:66]
    node _T_346 = and(io.wb_info_i[4].valid, _T_345) @[Rob.scala 269:34]
    node _T_347 = and(_T_346, rob_info[3].is_valid) @[Rob.scala 269:90]
    node _T_348 = eq(rob_info[3].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_349 = and(_T_347, _T_348) @[Rob.scala 269:113]
    node _T_350 = and(_T_349, rob_info[3].is_init) @[Rob.scala 269:139]
    node _T_351 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_352 = and(_T_350, _T_351) @[Rob.scala 269:161]
    when _T_352 : @[Rob.scala 269:177]
      rob_info[3].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[3].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_353 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[3].op2_tag) @[Rob.scala 273:66]
    node _T_354 = and(io.wb_info_i[4].valid, _T_353) @[Rob.scala 273:34]
    node _T_355 = and(_T_354, rob_info[3].is_valid) @[Rob.scala 273:90]
    node _T_356 = eq(rob_info[3].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_357 = and(_T_355, _T_356) @[Rob.scala 273:113]
    node _T_358 = and(_T_357, rob_info[3].is_init) @[Rob.scala 273:139]
    node _T_359 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_360 = and(_T_358, _T_359) @[Rob.scala 273:161]
    when _T_360 : @[Rob.scala 273:177]
      rob_info[3].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[3].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_361 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[4].op1_tag) @[Rob.scala 269:66]
    node _T_362 = and(io.wb_info_i[0].valid, _T_361) @[Rob.scala 269:34]
    node _T_363 = and(_T_362, rob_info[4].is_valid) @[Rob.scala 269:90]
    node _T_364 = eq(rob_info[4].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_365 = and(_T_363, _T_364) @[Rob.scala 269:113]
    node _T_366 = and(_T_365, rob_info[4].is_init) @[Rob.scala 269:139]
    node _T_367 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_368 = and(_T_366, _T_367) @[Rob.scala 269:161]
    when _T_368 : @[Rob.scala 269:177]
      rob_info[4].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[4].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_369 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[4].op2_tag) @[Rob.scala 273:66]
    node _T_370 = and(io.wb_info_i[0].valid, _T_369) @[Rob.scala 273:34]
    node _T_371 = and(_T_370, rob_info[4].is_valid) @[Rob.scala 273:90]
    node _T_372 = eq(rob_info[4].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_373 = and(_T_371, _T_372) @[Rob.scala 273:113]
    node _T_374 = and(_T_373, rob_info[4].is_init) @[Rob.scala 273:139]
    node _T_375 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_376 = and(_T_374, _T_375) @[Rob.scala 273:161]
    when _T_376 : @[Rob.scala 273:177]
      rob_info[4].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[4].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_377 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[4].op1_tag) @[Rob.scala 269:66]
    node _T_378 = and(io.wb_info_i[1].valid, _T_377) @[Rob.scala 269:34]
    node _T_379 = and(_T_378, rob_info[4].is_valid) @[Rob.scala 269:90]
    node _T_380 = eq(rob_info[4].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_381 = and(_T_379, _T_380) @[Rob.scala 269:113]
    node _T_382 = and(_T_381, rob_info[4].is_init) @[Rob.scala 269:139]
    node _T_383 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_384 = and(_T_382, _T_383) @[Rob.scala 269:161]
    when _T_384 : @[Rob.scala 269:177]
      rob_info[4].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[4].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_385 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[4].op2_tag) @[Rob.scala 273:66]
    node _T_386 = and(io.wb_info_i[1].valid, _T_385) @[Rob.scala 273:34]
    node _T_387 = and(_T_386, rob_info[4].is_valid) @[Rob.scala 273:90]
    node _T_388 = eq(rob_info[4].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_389 = and(_T_387, _T_388) @[Rob.scala 273:113]
    node _T_390 = and(_T_389, rob_info[4].is_init) @[Rob.scala 273:139]
    node _T_391 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_392 = and(_T_390, _T_391) @[Rob.scala 273:161]
    when _T_392 : @[Rob.scala 273:177]
      rob_info[4].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[4].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_393 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[4].op1_tag) @[Rob.scala 269:66]
    node _T_394 = and(io.wb_info_i[2].valid, _T_393) @[Rob.scala 269:34]
    node _T_395 = and(_T_394, rob_info[4].is_valid) @[Rob.scala 269:90]
    node _T_396 = eq(rob_info[4].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_397 = and(_T_395, _T_396) @[Rob.scala 269:113]
    node _T_398 = and(_T_397, rob_info[4].is_init) @[Rob.scala 269:139]
    node _T_399 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_400 = and(_T_398, _T_399) @[Rob.scala 269:161]
    when _T_400 : @[Rob.scala 269:177]
      rob_info[4].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[4].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_401 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[4].op2_tag) @[Rob.scala 273:66]
    node _T_402 = and(io.wb_info_i[2].valid, _T_401) @[Rob.scala 273:34]
    node _T_403 = and(_T_402, rob_info[4].is_valid) @[Rob.scala 273:90]
    node _T_404 = eq(rob_info[4].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_405 = and(_T_403, _T_404) @[Rob.scala 273:113]
    node _T_406 = and(_T_405, rob_info[4].is_init) @[Rob.scala 273:139]
    node _T_407 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_408 = and(_T_406, _T_407) @[Rob.scala 273:161]
    when _T_408 : @[Rob.scala 273:177]
      rob_info[4].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[4].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_409 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[4].op1_tag) @[Rob.scala 269:66]
    node _T_410 = and(io.wb_info_i[3].valid, _T_409) @[Rob.scala 269:34]
    node _T_411 = and(_T_410, rob_info[4].is_valid) @[Rob.scala 269:90]
    node _T_412 = eq(rob_info[4].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_413 = and(_T_411, _T_412) @[Rob.scala 269:113]
    node _T_414 = and(_T_413, rob_info[4].is_init) @[Rob.scala 269:139]
    node _T_415 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_416 = and(_T_414, _T_415) @[Rob.scala 269:161]
    when _T_416 : @[Rob.scala 269:177]
      rob_info[4].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[4].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_417 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[4].op2_tag) @[Rob.scala 273:66]
    node _T_418 = and(io.wb_info_i[3].valid, _T_417) @[Rob.scala 273:34]
    node _T_419 = and(_T_418, rob_info[4].is_valid) @[Rob.scala 273:90]
    node _T_420 = eq(rob_info[4].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_421 = and(_T_419, _T_420) @[Rob.scala 273:113]
    node _T_422 = and(_T_421, rob_info[4].is_init) @[Rob.scala 273:139]
    node _T_423 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_424 = and(_T_422, _T_423) @[Rob.scala 273:161]
    when _T_424 : @[Rob.scala 273:177]
      rob_info[4].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[4].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_425 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[4].op1_tag) @[Rob.scala 269:66]
    node _T_426 = and(io.wb_info_i[4].valid, _T_425) @[Rob.scala 269:34]
    node _T_427 = and(_T_426, rob_info[4].is_valid) @[Rob.scala 269:90]
    node _T_428 = eq(rob_info[4].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_429 = and(_T_427, _T_428) @[Rob.scala 269:113]
    node _T_430 = and(_T_429, rob_info[4].is_init) @[Rob.scala 269:139]
    node _T_431 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_432 = and(_T_430, _T_431) @[Rob.scala 269:161]
    when _T_432 : @[Rob.scala 269:177]
      rob_info[4].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[4].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_433 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[4].op2_tag) @[Rob.scala 273:66]
    node _T_434 = and(io.wb_info_i[4].valid, _T_433) @[Rob.scala 273:34]
    node _T_435 = and(_T_434, rob_info[4].is_valid) @[Rob.scala 273:90]
    node _T_436 = eq(rob_info[4].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_437 = and(_T_435, _T_436) @[Rob.scala 273:113]
    node _T_438 = and(_T_437, rob_info[4].is_init) @[Rob.scala 273:139]
    node _T_439 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_440 = and(_T_438, _T_439) @[Rob.scala 273:161]
    when _T_440 : @[Rob.scala 273:177]
      rob_info[4].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[4].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_441 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[5].op1_tag) @[Rob.scala 269:66]
    node _T_442 = and(io.wb_info_i[0].valid, _T_441) @[Rob.scala 269:34]
    node _T_443 = and(_T_442, rob_info[5].is_valid) @[Rob.scala 269:90]
    node _T_444 = eq(rob_info[5].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_445 = and(_T_443, _T_444) @[Rob.scala 269:113]
    node _T_446 = and(_T_445, rob_info[5].is_init) @[Rob.scala 269:139]
    node _T_447 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_448 = and(_T_446, _T_447) @[Rob.scala 269:161]
    when _T_448 : @[Rob.scala 269:177]
      rob_info[5].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[5].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_449 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[5].op2_tag) @[Rob.scala 273:66]
    node _T_450 = and(io.wb_info_i[0].valid, _T_449) @[Rob.scala 273:34]
    node _T_451 = and(_T_450, rob_info[5].is_valid) @[Rob.scala 273:90]
    node _T_452 = eq(rob_info[5].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_453 = and(_T_451, _T_452) @[Rob.scala 273:113]
    node _T_454 = and(_T_453, rob_info[5].is_init) @[Rob.scala 273:139]
    node _T_455 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_456 = and(_T_454, _T_455) @[Rob.scala 273:161]
    when _T_456 : @[Rob.scala 273:177]
      rob_info[5].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[5].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_457 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[5].op1_tag) @[Rob.scala 269:66]
    node _T_458 = and(io.wb_info_i[1].valid, _T_457) @[Rob.scala 269:34]
    node _T_459 = and(_T_458, rob_info[5].is_valid) @[Rob.scala 269:90]
    node _T_460 = eq(rob_info[5].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_461 = and(_T_459, _T_460) @[Rob.scala 269:113]
    node _T_462 = and(_T_461, rob_info[5].is_init) @[Rob.scala 269:139]
    node _T_463 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_464 = and(_T_462, _T_463) @[Rob.scala 269:161]
    when _T_464 : @[Rob.scala 269:177]
      rob_info[5].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[5].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_465 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[5].op2_tag) @[Rob.scala 273:66]
    node _T_466 = and(io.wb_info_i[1].valid, _T_465) @[Rob.scala 273:34]
    node _T_467 = and(_T_466, rob_info[5].is_valid) @[Rob.scala 273:90]
    node _T_468 = eq(rob_info[5].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_469 = and(_T_467, _T_468) @[Rob.scala 273:113]
    node _T_470 = and(_T_469, rob_info[5].is_init) @[Rob.scala 273:139]
    node _T_471 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_472 = and(_T_470, _T_471) @[Rob.scala 273:161]
    when _T_472 : @[Rob.scala 273:177]
      rob_info[5].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[5].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_473 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[5].op1_tag) @[Rob.scala 269:66]
    node _T_474 = and(io.wb_info_i[2].valid, _T_473) @[Rob.scala 269:34]
    node _T_475 = and(_T_474, rob_info[5].is_valid) @[Rob.scala 269:90]
    node _T_476 = eq(rob_info[5].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_477 = and(_T_475, _T_476) @[Rob.scala 269:113]
    node _T_478 = and(_T_477, rob_info[5].is_init) @[Rob.scala 269:139]
    node _T_479 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_480 = and(_T_478, _T_479) @[Rob.scala 269:161]
    when _T_480 : @[Rob.scala 269:177]
      rob_info[5].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[5].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_481 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[5].op2_tag) @[Rob.scala 273:66]
    node _T_482 = and(io.wb_info_i[2].valid, _T_481) @[Rob.scala 273:34]
    node _T_483 = and(_T_482, rob_info[5].is_valid) @[Rob.scala 273:90]
    node _T_484 = eq(rob_info[5].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_485 = and(_T_483, _T_484) @[Rob.scala 273:113]
    node _T_486 = and(_T_485, rob_info[5].is_init) @[Rob.scala 273:139]
    node _T_487 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_488 = and(_T_486, _T_487) @[Rob.scala 273:161]
    when _T_488 : @[Rob.scala 273:177]
      rob_info[5].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[5].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_489 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[5].op1_tag) @[Rob.scala 269:66]
    node _T_490 = and(io.wb_info_i[3].valid, _T_489) @[Rob.scala 269:34]
    node _T_491 = and(_T_490, rob_info[5].is_valid) @[Rob.scala 269:90]
    node _T_492 = eq(rob_info[5].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_493 = and(_T_491, _T_492) @[Rob.scala 269:113]
    node _T_494 = and(_T_493, rob_info[5].is_init) @[Rob.scala 269:139]
    node _T_495 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_496 = and(_T_494, _T_495) @[Rob.scala 269:161]
    when _T_496 : @[Rob.scala 269:177]
      rob_info[5].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[5].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_497 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[5].op2_tag) @[Rob.scala 273:66]
    node _T_498 = and(io.wb_info_i[3].valid, _T_497) @[Rob.scala 273:34]
    node _T_499 = and(_T_498, rob_info[5].is_valid) @[Rob.scala 273:90]
    node _T_500 = eq(rob_info[5].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_501 = and(_T_499, _T_500) @[Rob.scala 273:113]
    node _T_502 = and(_T_501, rob_info[5].is_init) @[Rob.scala 273:139]
    node _T_503 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_504 = and(_T_502, _T_503) @[Rob.scala 273:161]
    when _T_504 : @[Rob.scala 273:177]
      rob_info[5].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[5].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_505 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[5].op1_tag) @[Rob.scala 269:66]
    node _T_506 = and(io.wb_info_i[4].valid, _T_505) @[Rob.scala 269:34]
    node _T_507 = and(_T_506, rob_info[5].is_valid) @[Rob.scala 269:90]
    node _T_508 = eq(rob_info[5].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_509 = and(_T_507, _T_508) @[Rob.scala 269:113]
    node _T_510 = and(_T_509, rob_info[5].is_init) @[Rob.scala 269:139]
    node _T_511 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_512 = and(_T_510, _T_511) @[Rob.scala 269:161]
    when _T_512 : @[Rob.scala 269:177]
      rob_info[5].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[5].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_513 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[5].op2_tag) @[Rob.scala 273:66]
    node _T_514 = and(io.wb_info_i[4].valid, _T_513) @[Rob.scala 273:34]
    node _T_515 = and(_T_514, rob_info[5].is_valid) @[Rob.scala 273:90]
    node _T_516 = eq(rob_info[5].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_517 = and(_T_515, _T_516) @[Rob.scala 273:113]
    node _T_518 = and(_T_517, rob_info[5].is_init) @[Rob.scala 273:139]
    node _T_519 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_520 = and(_T_518, _T_519) @[Rob.scala 273:161]
    when _T_520 : @[Rob.scala 273:177]
      rob_info[5].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[5].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_521 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[6].op1_tag) @[Rob.scala 269:66]
    node _T_522 = and(io.wb_info_i[0].valid, _T_521) @[Rob.scala 269:34]
    node _T_523 = and(_T_522, rob_info[6].is_valid) @[Rob.scala 269:90]
    node _T_524 = eq(rob_info[6].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_525 = and(_T_523, _T_524) @[Rob.scala 269:113]
    node _T_526 = and(_T_525, rob_info[6].is_init) @[Rob.scala 269:139]
    node _T_527 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_528 = and(_T_526, _T_527) @[Rob.scala 269:161]
    when _T_528 : @[Rob.scala 269:177]
      rob_info[6].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[6].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_529 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[6].op2_tag) @[Rob.scala 273:66]
    node _T_530 = and(io.wb_info_i[0].valid, _T_529) @[Rob.scala 273:34]
    node _T_531 = and(_T_530, rob_info[6].is_valid) @[Rob.scala 273:90]
    node _T_532 = eq(rob_info[6].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_533 = and(_T_531, _T_532) @[Rob.scala 273:113]
    node _T_534 = and(_T_533, rob_info[6].is_init) @[Rob.scala 273:139]
    node _T_535 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_536 = and(_T_534, _T_535) @[Rob.scala 273:161]
    when _T_536 : @[Rob.scala 273:177]
      rob_info[6].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[6].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_537 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[6].op1_tag) @[Rob.scala 269:66]
    node _T_538 = and(io.wb_info_i[1].valid, _T_537) @[Rob.scala 269:34]
    node _T_539 = and(_T_538, rob_info[6].is_valid) @[Rob.scala 269:90]
    node _T_540 = eq(rob_info[6].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_541 = and(_T_539, _T_540) @[Rob.scala 269:113]
    node _T_542 = and(_T_541, rob_info[6].is_init) @[Rob.scala 269:139]
    node _T_543 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_544 = and(_T_542, _T_543) @[Rob.scala 269:161]
    when _T_544 : @[Rob.scala 269:177]
      rob_info[6].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[6].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_545 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[6].op2_tag) @[Rob.scala 273:66]
    node _T_546 = and(io.wb_info_i[1].valid, _T_545) @[Rob.scala 273:34]
    node _T_547 = and(_T_546, rob_info[6].is_valid) @[Rob.scala 273:90]
    node _T_548 = eq(rob_info[6].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_549 = and(_T_547, _T_548) @[Rob.scala 273:113]
    node _T_550 = and(_T_549, rob_info[6].is_init) @[Rob.scala 273:139]
    node _T_551 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_552 = and(_T_550, _T_551) @[Rob.scala 273:161]
    when _T_552 : @[Rob.scala 273:177]
      rob_info[6].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[6].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_553 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[6].op1_tag) @[Rob.scala 269:66]
    node _T_554 = and(io.wb_info_i[2].valid, _T_553) @[Rob.scala 269:34]
    node _T_555 = and(_T_554, rob_info[6].is_valid) @[Rob.scala 269:90]
    node _T_556 = eq(rob_info[6].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_557 = and(_T_555, _T_556) @[Rob.scala 269:113]
    node _T_558 = and(_T_557, rob_info[6].is_init) @[Rob.scala 269:139]
    node _T_559 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_560 = and(_T_558, _T_559) @[Rob.scala 269:161]
    when _T_560 : @[Rob.scala 269:177]
      rob_info[6].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[6].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_561 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[6].op2_tag) @[Rob.scala 273:66]
    node _T_562 = and(io.wb_info_i[2].valid, _T_561) @[Rob.scala 273:34]
    node _T_563 = and(_T_562, rob_info[6].is_valid) @[Rob.scala 273:90]
    node _T_564 = eq(rob_info[6].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_565 = and(_T_563, _T_564) @[Rob.scala 273:113]
    node _T_566 = and(_T_565, rob_info[6].is_init) @[Rob.scala 273:139]
    node _T_567 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_568 = and(_T_566, _T_567) @[Rob.scala 273:161]
    when _T_568 : @[Rob.scala 273:177]
      rob_info[6].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[6].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_569 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[6].op1_tag) @[Rob.scala 269:66]
    node _T_570 = and(io.wb_info_i[3].valid, _T_569) @[Rob.scala 269:34]
    node _T_571 = and(_T_570, rob_info[6].is_valid) @[Rob.scala 269:90]
    node _T_572 = eq(rob_info[6].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_573 = and(_T_571, _T_572) @[Rob.scala 269:113]
    node _T_574 = and(_T_573, rob_info[6].is_init) @[Rob.scala 269:139]
    node _T_575 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_576 = and(_T_574, _T_575) @[Rob.scala 269:161]
    when _T_576 : @[Rob.scala 269:177]
      rob_info[6].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[6].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_577 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[6].op2_tag) @[Rob.scala 273:66]
    node _T_578 = and(io.wb_info_i[3].valid, _T_577) @[Rob.scala 273:34]
    node _T_579 = and(_T_578, rob_info[6].is_valid) @[Rob.scala 273:90]
    node _T_580 = eq(rob_info[6].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_581 = and(_T_579, _T_580) @[Rob.scala 273:113]
    node _T_582 = and(_T_581, rob_info[6].is_init) @[Rob.scala 273:139]
    node _T_583 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_584 = and(_T_582, _T_583) @[Rob.scala 273:161]
    when _T_584 : @[Rob.scala 273:177]
      rob_info[6].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[6].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_585 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[6].op1_tag) @[Rob.scala 269:66]
    node _T_586 = and(io.wb_info_i[4].valid, _T_585) @[Rob.scala 269:34]
    node _T_587 = and(_T_586, rob_info[6].is_valid) @[Rob.scala 269:90]
    node _T_588 = eq(rob_info[6].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_589 = and(_T_587, _T_588) @[Rob.scala 269:113]
    node _T_590 = and(_T_589, rob_info[6].is_init) @[Rob.scala 269:139]
    node _T_591 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_592 = and(_T_590, _T_591) @[Rob.scala 269:161]
    when _T_592 : @[Rob.scala 269:177]
      rob_info[6].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[6].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_593 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[6].op2_tag) @[Rob.scala 273:66]
    node _T_594 = and(io.wb_info_i[4].valid, _T_593) @[Rob.scala 273:34]
    node _T_595 = and(_T_594, rob_info[6].is_valid) @[Rob.scala 273:90]
    node _T_596 = eq(rob_info[6].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_597 = and(_T_595, _T_596) @[Rob.scala 273:113]
    node _T_598 = and(_T_597, rob_info[6].is_init) @[Rob.scala 273:139]
    node _T_599 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_600 = and(_T_598, _T_599) @[Rob.scala 273:161]
    when _T_600 : @[Rob.scala 273:177]
      rob_info[6].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[6].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_601 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[7].op1_tag) @[Rob.scala 269:66]
    node _T_602 = and(io.wb_info_i[0].valid, _T_601) @[Rob.scala 269:34]
    node _T_603 = and(_T_602, rob_info[7].is_valid) @[Rob.scala 269:90]
    node _T_604 = eq(rob_info[7].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_605 = and(_T_603, _T_604) @[Rob.scala 269:113]
    node _T_606 = and(_T_605, rob_info[7].is_init) @[Rob.scala 269:139]
    node _T_607 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_608 = and(_T_606, _T_607) @[Rob.scala 269:161]
    when _T_608 : @[Rob.scala 269:177]
      rob_info[7].op1_data <= io.wb_info_i[0].bits.data @[Rob.scala 270:30]
      rob_info[7].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_609 = eq(io.wb_info_i[0].bits.rob_idx, rob_info[7].op2_tag) @[Rob.scala 273:66]
    node _T_610 = and(io.wb_info_i[0].valid, _T_609) @[Rob.scala 273:34]
    node _T_611 = and(_T_610, rob_info[7].is_valid) @[Rob.scala 273:90]
    node _T_612 = eq(rob_info[7].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_613 = and(_T_611, _T_612) @[Rob.scala 273:113]
    node _T_614 = and(_T_613, rob_info[7].is_init) @[Rob.scala 273:139]
    node _T_615 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_616 = and(_T_614, _T_615) @[Rob.scala 273:161]
    when _T_616 : @[Rob.scala 273:177]
      rob_info[7].op2_data <= io.wb_info_i[0].bits.data @[Rob.scala 274:30]
      rob_info[7].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_617 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[7].op1_tag) @[Rob.scala 269:66]
    node _T_618 = and(io.wb_info_i[1].valid, _T_617) @[Rob.scala 269:34]
    node _T_619 = and(_T_618, rob_info[7].is_valid) @[Rob.scala 269:90]
    node _T_620 = eq(rob_info[7].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_621 = and(_T_619, _T_620) @[Rob.scala 269:113]
    node _T_622 = and(_T_621, rob_info[7].is_init) @[Rob.scala 269:139]
    node _T_623 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_624 = and(_T_622, _T_623) @[Rob.scala 269:161]
    when _T_624 : @[Rob.scala 269:177]
      rob_info[7].op1_data <= io.wb_info_i[1].bits.data @[Rob.scala 270:30]
      rob_info[7].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_625 = eq(io.wb_info_i[1].bits.rob_idx, rob_info[7].op2_tag) @[Rob.scala 273:66]
    node _T_626 = and(io.wb_info_i[1].valid, _T_625) @[Rob.scala 273:34]
    node _T_627 = and(_T_626, rob_info[7].is_valid) @[Rob.scala 273:90]
    node _T_628 = eq(rob_info[7].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_629 = and(_T_627, _T_628) @[Rob.scala 273:113]
    node _T_630 = and(_T_629, rob_info[7].is_init) @[Rob.scala 273:139]
    node _T_631 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_632 = and(_T_630, _T_631) @[Rob.scala 273:161]
    when _T_632 : @[Rob.scala 273:177]
      rob_info[7].op2_data <= io.wb_info_i[1].bits.data @[Rob.scala 274:30]
      rob_info[7].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_633 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[7].op1_tag) @[Rob.scala 269:66]
    node _T_634 = and(io.wb_info_i[2].valid, _T_633) @[Rob.scala 269:34]
    node _T_635 = and(_T_634, rob_info[7].is_valid) @[Rob.scala 269:90]
    node _T_636 = eq(rob_info[7].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_637 = and(_T_635, _T_636) @[Rob.scala 269:113]
    node _T_638 = and(_T_637, rob_info[7].is_init) @[Rob.scala 269:139]
    node _T_639 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_640 = and(_T_638, _T_639) @[Rob.scala 269:161]
    when _T_640 : @[Rob.scala 269:177]
      rob_info[7].op1_data <= io.wb_info_i[2].bits.data @[Rob.scala 270:30]
      rob_info[7].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_641 = eq(io.wb_info_i[2].bits.rob_idx, rob_info[7].op2_tag) @[Rob.scala 273:66]
    node _T_642 = and(io.wb_info_i[2].valid, _T_641) @[Rob.scala 273:34]
    node _T_643 = and(_T_642, rob_info[7].is_valid) @[Rob.scala 273:90]
    node _T_644 = eq(rob_info[7].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_645 = and(_T_643, _T_644) @[Rob.scala 273:113]
    node _T_646 = and(_T_645, rob_info[7].is_init) @[Rob.scala 273:139]
    node _T_647 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_648 = and(_T_646, _T_647) @[Rob.scala 273:161]
    when _T_648 : @[Rob.scala 273:177]
      rob_info[7].op2_data <= io.wb_info_i[2].bits.data @[Rob.scala 274:30]
      rob_info[7].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_649 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[7].op1_tag) @[Rob.scala 269:66]
    node _T_650 = and(io.wb_info_i[3].valid, _T_649) @[Rob.scala 269:34]
    node _T_651 = and(_T_650, rob_info[7].is_valid) @[Rob.scala 269:90]
    node _T_652 = eq(rob_info[7].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_653 = and(_T_651, _T_652) @[Rob.scala 269:113]
    node _T_654 = and(_T_653, rob_info[7].is_init) @[Rob.scala 269:139]
    node _T_655 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_656 = and(_T_654, _T_655) @[Rob.scala 269:161]
    when _T_656 : @[Rob.scala 269:177]
      rob_info[7].op1_data <= io.wb_info_i[3].bits.data @[Rob.scala 270:30]
      rob_info[7].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_657 = eq(io.wb_info_i[3].bits.rob_idx, rob_info[7].op2_tag) @[Rob.scala 273:66]
    node _T_658 = and(io.wb_info_i[3].valid, _T_657) @[Rob.scala 273:34]
    node _T_659 = and(_T_658, rob_info[7].is_valid) @[Rob.scala 273:90]
    node _T_660 = eq(rob_info[7].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_661 = and(_T_659, _T_660) @[Rob.scala 273:113]
    node _T_662 = and(_T_661, rob_info[7].is_init) @[Rob.scala 273:139]
    node _T_663 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_664 = and(_T_662, _T_663) @[Rob.scala 273:161]
    when _T_664 : @[Rob.scala 273:177]
      rob_info[7].op2_data <= io.wb_info_i[3].bits.data @[Rob.scala 274:30]
      rob_info[7].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_665 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[7].op1_tag) @[Rob.scala 269:66]
    node _T_666 = and(io.wb_info_i[4].valid, _T_665) @[Rob.scala 269:34]
    node _T_667 = and(_T_666, rob_info[7].is_valid) @[Rob.scala 269:90]
    node _T_668 = eq(rob_info[7].op1_ready, UInt<1>("h00")) @[Rob.scala 269:116]
    node _T_669 = and(_T_667, _T_668) @[Rob.scala 269:113]
    node _T_670 = and(_T_669, rob_info[7].is_init) @[Rob.scala 269:139]
    node _T_671 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 269:164]
    node _T_672 = and(_T_670, _T_671) @[Rob.scala 269:161]
    when _T_672 : @[Rob.scala 269:177]
      rob_info[7].op1_data <= io.wb_info_i[4].bits.data @[Rob.scala 270:30]
      rob_info[7].op1_ready <= UInt<1>("h01") @[Rob.scala 271:31]
      skip @[Rob.scala 269:177]
    node _T_673 = eq(io.wb_info_i[4].bits.rob_idx, rob_info[7].op2_tag) @[Rob.scala 273:66]
    node _T_674 = and(io.wb_info_i[4].valid, _T_673) @[Rob.scala 273:34]
    node _T_675 = and(_T_674, rob_info[7].is_valid) @[Rob.scala 273:90]
    node _T_676 = eq(rob_info[7].op2_ready, UInt<1>("h00")) @[Rob.scala 273:116]
    node _T_677 = and(_T_675, _T_676) @[Rob.scala 273:113]
    node _T_678 = and(_T_677, rob_info[7].is_init) @[Rob.scala 273:139]
    node _T_679 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 273:164]
    node _T_680 = and(_T_678, _T_679) @[Rob.scala 273:161]
    when _T_680 : @[Rob.scala 273:177]
      rob_info[7].op2_data <= io.wb_info_i[4].bits.data @[Rob.scala 274:30]
      rob_info[7].op2_ready <= UInt<1>("h01") @[Rob.scala 275:31]
      skip @[Rob.scala 273:177]
    node _T_681 = and(io.wb_info_i[0].valid, rob_info[io.wb_info_i[0].bits.rob_idx].is_valid) @[Rob.scala 283:31]
    node _T_682 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 283:62]
    node _T_683 = and(_T_681, _T_682) @[Rob.scala 283:59]
    when _T_683 : @[Rob.scala 283:75]
      rob_info[io.wb_info_i[0].bits.rob_idx].commit_data <= io.wb_info_i[0].bits.data @[Rob.scala 284:37]
      rob_info[io.wb_info_i[0].bits.rob_idx].commit_ready <= UInt<1>("h01") @[Rob.scala 285:38]
      rob_info[io.wb_info_i[0].bits.rob_idx].busy <= UInt<1>("h00") @[Rob.scala 286:30]
      rob_info[io.wb_info_i[0].bits.rob_idx].is_taken <= io.wb_info_i[0].bits.is_taken @[Rob.scala 287:34]
      rob_info[io.wb_info_i[0].bits.rob_idx].predict_miss <= io.wb_info_i[0].bits.predict_miss @[Rob.scala 288:38]
      rob_info[io.wb_info_i[0].bits.rob_idx].imm_data <= io.wb_info_i[0].bits.target_addr @[Rob.scala 289:34]
      skip @[Rob.scala 283:75]
    node _T_684 = and(io.wb_info_i[1].valid, rob_info[io.wb_info_i[1].bits.rob_idx].is_valid) @[Rob.scala 283:31]
    node _T_685 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 283:62]
    node _T_686 = and(_T_684, _T_685) @[Rob.scala 283:59]
    when _T_686 : @[Rob.scala 283:75]
      rob_info[io.wb_info_i[1].bits.rob_idx].commit_data <= io.wb_info_i[1].bits.data @[Rob.scala 284:37]
      rob_info[io.wb_info_i[1].bits.rob_idx].commit_ready <= UInt<1>("h01") @[Rob.scala 285:38]
      rob_info[io.wb_info_i[1].bits.rob_idx].busy <= UInt<1>("h00") @[Rob.scala 286:30]
      rob_info[io.wb_info_i[1].bits.rob_idx].is_taken <= io.wb_info_i[1].bits.is_taken @[Rob.scala 287:34]
      rob_info[io.wb_info_i[1].bits.rob_idx].predict_miss <= io.wb_info_i[1].bits.predict_miss @[Rob.scala 288:38]
      rob_info[io.wb_info_i[1].bits.rob_idx].imm_data <= io.wb_info_i[1].bits.target_addr @[Rob.scala 289:34]
      skip @[Rob.scala 283:75]
    node _T_687 = and(io.wb_info_i[2].valid, rob_info[io.wb_info_i[2].bits.rob_idx].is_valid) @[Rob.scala 283:31]
    node _T_688 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 283:62]
    node _T_689 = and(_T_687, _T_688) @[Rob.scala 283:59]
    when _T_689 : @[Rob.scala 283:75]
      rob_info[io.wb_info_i[2].bits.rob_idx].commit_data <= io.wb_info_i[2].bits.data @[Rob.scala 284:37]
      rob_info[io.wb_info_i[2].bits.rob_idx].commit_ready <= UInt<1>("h01") @[Rob.scala 285:38]
      rob_info[io.wb_info_i[2].bits.rob_idx].busy <= UInt<1>("h00") @[Rob.scala 286:30]
      rob_info[io.wb_info_i[2].bits.rob_idx].is_taken <= io.wb_info_i[2].bits.is_taken @[Rob.scala 287:34]
      rob_info[io.wb_info_i[2].bits.rob_idx].predict_miss <= io.wb_info_i[2].bits.predict_miss @[Rob.scala 288:38]
      rob_info[io.wb_info_i[2].bits.rob_idx].imm_data <= io.wb_info_i[2].bits.target_addr @[Rob.scala 289:34]
      skip @[Rob.scala 283:75]
    node _T_690 = and(io.wb_info_i[3].valid, rob_info[io.wb_info_i[3].bits.rob_idx].is_valid) @[Rob.scala 283:31]
    node _T_691 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 283:62]
    node _T_692 = and(_T_690, _T_691) @[Rob.scala 283:59]
    when _T_692 : @[Rob.scala 283:75]
      rob_info[io.wb_info_i[3].bits.rob_idx].commit_data <= io.wb_info_i[3].bits.data @[Rob.scala 284:37]
      rob_info[io.wb_info_i[3].bits.rob_idx].commit_ready <= UInt<1>("h01") @[Rob.scala 285:38]
      rob_info[io.wb_info_i[3].bits.rob_idx].busy <= UInt<1>("h00") @[Rob.scala 286:30]
      rob_info[io.wb_info_i[3].bits.rob_idx].is_taken <= io.wb_info_i[3].bits.is_taken @[Rob.scala 287:34]
      rob_info[io.wb_info_i[3].bits.rob_idx].predict_miss <= io.wb_info_i[3].bits.predict_miss @[Rob.scala 288:38]
      rob_info[io.wb_info_i[3].bits.rob_idx].imm_data <= io.wb_info_i[3].bits.target_addr @[Rob.scala 289:34]
      skip @[Rob.scala 283:75]
    node _T_693 = and(io.wb_info_i[4].valid, rob_info[io.wb_info_i[4].bits.rob_idx].is_valid) @[Rob.scala 283:31]
    node _T_694 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 283:62]
    node _T_695 = and(_T_693, _T_694) @[Rob.scala 283:59]
    when _T_695 : @[Rob.scala 283:75]
      rob_info[io.wb_info_i[4].bits.rob_idx].commit_data <= io.wb_info_i[4].bits.data @[Rob.scala 284:37]
      rob_info[io.wb_info_i[4].bits.rob_idx].commit_ready <= UInt<1>("h01") @[Rob.scala 285:38]
      rob_info[io.wb_info_i[4].bits.rob_idx].busy <= UInt<1>("h00") @[Rob.scala 286:30]
      rob_info[io.wb_info_i[4].bits.rob_idx].is_taken <= io.wb_info_i[4].bits.is_taken @[Rob.scala 287:34]
      rob_info[io.wb_info_i[4].bits.rob_idx].predict_miss <= io.wb_info_i[4].bits.predict_miss @[Rob.scala 288:38]
      rob_info[io.wb_info_i[4].bits.rob_idx].imm_data <= io.wb_info_i[4].bits.target_addr @[Rob.scala 289:34]
      skip @[Rob.scala 283:75]
    wire _init_op1_hit_commit_WIRE : UInt<1>[2] @[Rob.scala 298:45]
    _init_op1_hit_commit_WIRE[0] <= UInt<1>("h00") @[Rob.scala 298:45]
    _init_op1_hit_commit_WIRE[1] <= UInt<1>("h00") @[Rob.scala 298:45]
    wire init_op1_hit_commit : UInt<1>[2]
    init_op1_hit_commit[0] <= _init_op1_hit_commit_WIRE[0]
    init_op1_hit_commit[1] <= _init_op1_hit_commit_WIRE[1]
    wire _init_op2_hit_commit_WIRE : UInt<1>[2] @[Rob.scala 299:45]
    _init_op2_hit_commit_WIRE[0] <= UInt<1>("h00") @[Rob.scala 299:45]
    _init_op2_hit_commit_WIRE[1] <= UInt<1>("h00") @[Rob.scala 299:45]
    wire init_op2_hit_commit : UInt<1>[2]
    init_op2_hit_commit[0] <= _init_op2_hit_commit_WIRE[0]
    init_op2_hit_commit[1] <= _init_op2_hit_commit_WIRE[1]
    wire _init_op1_commit_data_WIRE : UInt<32>[2] @[Rob.scala 300:46]
    _init_op1_commit_data_WIRE[0] <= UInt<32>("h00") @[Rob.scala 300:46]
    _init_op1_commit_data_WIRE[1] <= UInt<32>("h00") @[Rob.scala 300:46]
    wire init_op1_commit_data : UInt<32>[2]
    init_op1_commit_data[0] <= _init_op1_commit_data_WIRE[0]
    init_op1_commit_data[1] <= _init_op1_commit_data_WIRE[1]
    wire _init_op2_commit_data_WIRE : UInt<32>[2] @[Rob.scala 301:46]
    _init_op2_commit_data_WIRE[0] <= UInt<32>("h00") @[Rob.scala 301:46]
    _init_op2_commit_data_WIRE[1] <= UInt<32>("h00") @[Rob.scala 301:46]
    wire init_op2_commit_data : UInt<32>[2]
    init_op2_commit_data[0] <= _init_op2_commit_data_WIRE[0]
    init_op2_commit_data[1] <= _init_op2_commit_data_WIRE[1]
    wire _init_op1_hit_wb_WIRE : UInt<1>[2] @[Rob.scala 302:41]
    _init_op1_hit_wb_WIRE[0] <= UInt<1>("h00") @[Rob.scala 302:41]
    _init_op1_hit_wb_WIRE[1] <= UInt<1>("h00") @[Rob.scala 302:41]
    wire init_op1_hit_wb : UInt<1>[2]
    init_op1_hit_wb[0] <= _init_op1_hit_wb_WIRE[0]
    init_op1_hit_wb[1] <= _init_op1_hit_wb_WIRE[1]
    wire _init_op2_hit_wb_WIRE : UInt<1>[2] @[Rob.scala 303:41]
    _init_op2_hit_wb_WIRE[0] <= UInt<1>("h00") @[Rob.scala 303:41]
    _init_op2_hit_wb_WIRE[1] <= UInt<1>("h00") @[Rob.scala 303:41]
    wire init_op2_hit_wb : UInt<1>[2]
    init_op2_hit_wb[0] <= _init_op2_hit_wb_WIRE[0]
    init_op2_hit_wb[1] <= _init_op2_hit_wb_WIRE[1]
    wire _init_op1_wb_data_WIRE : UInt<32>[2] @[Rob.scala 304:42]
    _init_op1_wb_data_WIRE[0] <= UInt<32>("h00") @[Rob.scala 304:42]
    _init_op1_wb_data_WIRE[1] <= UInt<32>("h00") @[Rob.scala 304:42]
    wire init_op1_wb_data : UInt<32>[2]
    init_op1_wb_data[0] <= _init_op1_wb_data_WIRE[0]
    init_op1_wb_data[1] <= _init_op1_wb_data_WIRE[1]
    wire _init_op2_wb_data_WIRE : UInt<32>[2] @[Rob.scala 305:42]
    _init_op2_wb_data_WIRE[0] <= UInt<32>("h00") @[Rob.scala 305:42]
    _init_op2_wb_data_WIRE[1] <= UInt<32>("h00") @[Rob.scala 305:42]
    wire init_op2_wb_data : UInt<32>[2]
    init_op2_wb_data[0] <= _init_op2_wb_data_WIRE[0]
    init_op2_wb_data[1] <= _init_op2_wb_data_WIRE[1]
    node _init_op1_data_T = eq(io.rob_init_info.bits[0].op1_in_rob, UInt<1>("h00")) @[Rob.scala 310:32]
    node _init_op1_data_T_1 = mux(init_op1_hit_commit[0], init_op1_commit_data[0], rob_info[io.rob_init_info.bits[0].op1_rob].commit_data) @[Rob.scala 310:156]
    node _init_op1_data_T_2 = mux(init_op1_hit_wb[0], init_op1_wb_data[0], _init_op1_data_T_1) @[Rob.scala 310:111]
    node init_op1_data = mux(_init_op1_data_T, io.rob_init_info.bits[0].op1_regData, _init_op1_data_T_2) @[Rob.scala 310:31]
    node _init_op2_data_T = eq(io.rob_init_info.bits[0].op2_in_rob, UInt<1>("h00")) @[Rob.scala 311:32]
    node _init_op2_data_T_1 = mux(init_op2_hit_commit[0], init_op2_commit_data[0], rob_info[io.rob_init_info.bits[0].op2_rob].commit_data) @[Rob.scala 311:156]
    node _init_op2_data_T_2 = mux(init_op2_hit_wb[0], init_op2_wb_data[0], _init_op2_data_T_1) @[Rob.scala 311:111]
    node init_op2_data = mux(_init_op2_data_T, io.rob_init_info.bits[0].op2_regData, _init_op2_data_T_2) @[Rob.scala 311:31]
    node _init_op1_hit_rob_T = and(rob_info[io.rob_init_info.bits[0].op1_rob].commit_ready, rob_info[io.rob_init_info.bits[0].op1_rob].is_valid) @[Rob.scala 312:59]
    node _init_op1_hit_rob_T_1 = or(_init_op1_hit_rob_T, init_op1_hit_wb[0]) @[Rob.scala 312:89]
    node init_op1_hit_rob = or(_init_op1_hit_rob_T_1, init_op1_hit_commit[0]) @[Rob.scala 312:111]
    node _init_op2_hit_rob_T = and(rob_info[io.rob_init_info.bits[0].op2_rob].commit_ready, rob_info[io.rob_init_info.bits[0].op2_rob].is_valid) @[Rob.scala 313:59]
    node _init_op2_hit_rob_T_1 = or(_init_op2_hit_rob_T, init_op2_hit_wb[0]) @[Rob.scala 313:89]
    node init_op2_hit_rob = or(_init_op2_hit_rob_T_1, init_op2_hit_commit[0]) @[Rob.scala 313:111]
    node _T_696 = and(io.rob_init_info.valid, io.rob_init_info.bits[0].is_valid) @[Rob.scala 315:33]
    node _T_697 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 315:73]
    node _T_698 = and(_T_696, _T_697) @[Rob.scala 315:70]
    when _T_698 : @[Rob.scala 315:86]
      rob_info[io.rob_init_info.bits[0].des_rob].op1_data <= init_op1_data @[Rob.scala 316:34]
      rob_info[io.rob_init_info.bits[0].des_rob].op2_data <= init_op2_data @[Rob.scala 317:34]
      rob_info[io.rob_init_info.bits[0].des_rob].op1_tag <= io.rob_init_info.bits[0].op1_rob @[Rob.scala 318:33]
      rob_info[io.rob_init_info.bits[0].des_rob].op2_tag <= io.rob_init_info.bits[0].op2_rob @[Rob.scala 319:33]
      node _rob_info_op1_ready_T = eq(io.rob_init_info.bits[0].op1_in_rob, UInt<1>("h00")) @[Rob.scala 320:38]
      node _rob_info_op1_ready_T_1 = or(_rob_info_op1_ready_T, init_op1_hit_rob) @[Rob.scala 320:75]
      rob_info[io.rob_init_info.bits[0].des_rob].op1_ready <= _rob_info_op1_ready_T_1 @[Rob.scala 320:35]
      node _rob_info_op2_ready_T = eq(io.rob_init_info.bits[0].op2_in_rob, UInt<1>("h00")) @[Rob.scala 321:38]
      node _rob_info_op2_ready_T_1 = or(_rob_info_op2_ready_T, init_op2_hit_rob) @[Rob.scala 321:75]
      rob_info[io.rob_init_info.bits[0].des_rob].op2_ready <= _rob_info_op2_ready_T_1 @[Rob.scala 321:35]
      rob_info[io.rob_init_info.bits[0].des_rob].is_init <= UInt<1>("h01") @[Rob.scala 322:33]
      skip @[Rob.scala 315:86]
    node _init_op1_data_T_3 = eq(io.rob_init_info.bits[1].op1_in_rob, UInt<1>("h00")) @[Rob.scala 310:32]
    node _init_op1_data_T_4 = mux(init_op1_hit_commit[1], init_op1_commit_data[1], rob_info[io.rob_init_info.bits[1].op1_rob].commit_data) @[Rob.scala 310:156]
    node _init_op1_data_T_5 = mux(init_op1_hit_wb[1], init_op1_wb_data[1], _init_op1_data_T_4) @[Rob.scala 310:111]
    node init_op1_data_1 = mux(_init_op1_data_T_3, io.rob_init_info.bits[1].op1_regData, _init_op1_data_T_5) @[Rob.scala 310:31]
    node _init_op2_data_T_3 = eq(io.rob_init_info.bits[1].op2_in_rob, UInt<1>("h00")) @[Rob.scala 311:32]
    node _init_op2_data_T_4 = mux(init_op2_hit_commit[1], init_op2_commit_data[1], rob_info[io.rob_init_info.bits[1].op2_rob].commit_data) @[Rob.scala 311:156]
    node _init_op2_data_T_5 = mux(init_op2_hit_wb[1], init_op2_wb_data[1], _init_op2_data_T_4) @[Rob.scala 311:111]
    node init_op2_data_1 = mux(_init_op2_data_T_3, io.rob_init_info.bits[1].op2_regData, _init_op2_data_T_5) @[Rob.scala 311:31]
    node _init_op1_hit_rob_T_2 = and(rob_info[io.rob_init_info.bits[1].op1_rob].commit_ready, rob_info[io.rob_init_info.bits[1].op1_rob].is_valid) @[Rob.scala 312:59]
    node _init_op1_hit_rob_T_3 = or(_init_op1_hit_rob_T_2, init_op1_hit_wb[1]) @[Rob.scala 312:89]
    node init_op1_hit_rob_1 = or(_init_op1_hit_rob_T_3, init_op1_hit_commit[1]) @[Rob.scala 312:111]
    node _init_op2_hit_rob_T_2 = and(rob_info[io.rob_init_info.bits[1].op2_rob].commit_ready, rob_info[io.rob_init_info.bits[1].op2_rob].is_valid) @[Rob.scala 313:59]
    node _init_op2_hit_rob_T_3 = or(_init_op2_hit_rob_T_2, init_op2_hit_wb[1]) @[Rob.scala 313:89]
    node init_op2_hit_rob_1 = or(_init_op2_hit_rob_T_3, init_op2_hit_commit[1]) @[Rob.scala 313:111]
    node _T_699 = and(io.rob_init_info.valid, io.rob_init_info.bits[1].is_valid) @[Rob.scala 315:33]
    node _T_700 = eq(need_flush, UInt<1>("h00")) @[Rob.scala 315:73]
    node _T_701 = and(_T_699, _T_700) @[Rob.scala 315:70]
    when _T_701 : @[Rob.scala 315:86]
      rob_info[io.rob_init_info.bits[1].des_rob].op1_data <= init_op1_data_1 @[Rob.scala 316:34]
      rob_info[io.rob_init_info.bits[1].des_rob].op2_data <= init_op2_data_1 @[Rob.scala 317:34]
      rob_info[io.rob_init_info.bits[1].des_rob].op1_tag <= io.rob_init_info.bits[1].op1_rob @[Rob.scala 318:33]
      rob_info[io.rob_init_info.bits[1].des_rob].op2_tag <= io.rob_init_info.bits[1].op2_rob @[Rob.scala 319:33]
      node _rob_info_op1_ready_T_2 = eq(io.rob_init_info.bits[1].op1_in_rob, UInt<1>("h00")) @[Rob.scala 320:38]
      node _rob_info_op1_ready_T_3 = or(_rob_info_op1_ready_T_2, init_op1_hit_rob_1) @[Rob.scala 320:75]
      rob_info[io.rob_init_info.bits[1].des_rob].op1_ready <= _rob_info_op1_ready_T_3 @[Rob.scala 320:35]
      node _rob_info_op2_ready_T_2 = eq(io.rob_init_info.bits[1].op2_in_rob, UInt<1>("h00")) @[Rob.scala 321:38]
      node _rob_info_op2_ready_T_3 = or(_rob_info_op2_ready_T_2, init_op2_hit_rob_1) @[Rob.scala 321:75]
      rob_info[io.rob_init_info.bits[1].des_rob].op2_ready <= _rob_info_op2_ready_T_3 @[Rob.scala 321:35]
      rob_info[io.rob_init_info.bits[1].des_rob].is_init <= UInt<1>("h01") @[Rob.scala 322:33]
      skip @[Rob.scala 315:86]
    node deq_idxs_hi = bits(head, 6, 0) @[Rob.scala 167:12]
    node deq_idxs_lo = bits(head, 7, 7) @[Rob.scala 167:29]
    node _deq_idxs_T = cat(deq_idxs_hi, deq_idxs_lo) @[Cat.scala 30:58]
    node deq_idxs_hi_1 = bits(head, 5, 0) @[Rob.scala 167:12]
    node deq_idxs_lo_1 = bits(head, 7, 6) @[Rob.scala 167:29]
    node _deq_idxs_T_1 = cat(deq_idxs_hi_1, deq_idxs_lo_1) @[Cat.scala 30:58]
    wire deq_idxs : UInt<8>[3] @[Rob.scala 327:32]
    deq_idxs[0] <= head @[Rob.scala 327:32]
    deq_idxs[1] <= _deq_idxs_T @[Rob.scala 327:32]
    deq_idxs[2] <= _deq_idxs_T_1 @[Rob.scala 327:32]
    node deq_robs_hi = bits(deq_idxs[0], 7, 4) @[OneHot.scala 30:18]
    node deq_robs_lo = bits(deq_idxs[0], 3, 0) @[OneHot.scala 31:18]
    node deq_robs_hi_1 = orr(deq_robs_hi) @[OneHot.scala 32:14]
    node _deq_robs_T = or(deq_robs_hi, deq_robs_lo) @[OneHot.scala 32:28]
    node deq_robs_hi_2 = bits(_deq_robs_T, 3, 2) @[OneHot.scala 30:18]
    node deq_robs_lo_1 = bits(_deq_robs_T, 1, 0) @[OneHot.scala 31:18]
    node deq_robs_hi_3 = orr(deq_robs_hi_2) @[OneHot.scala 32:14]
    node _deq_robs_T_1 = or(deq_robs_hi_2, deq_robs_lo_1) @[OneHot.scala 32:28]
    node deq_robs_lo_2 = bits(_deq_robs_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node deq_robs_lo_3 = cat(deq_robs_hi_3, deq_robs_lo_2) @[Cat.scala 30:58]
    node _deq_robs_T_2 = cat(deq_robs_hi_1, deq_robs_lo_3) @[Cat.scala 30:58]
    node deq_robs_hi_4 = bits(deq_idxs[1], 7, 4) @[OneHot.scala 30:18]
    node deq_robs_lo_4 = bits(deq_idxs[1], 3, 0) @[OneHot.scala 31:18]
    node deq_robs_hi_5 = orr(deq_robs_hi_4) @[OneHot.scala 32:14]
    node _deq_robs_T_3 = or(deq_robs_hi_4, deq_robs_lo_4) @[OneHot.scala 32:28]
    node deq_robs_hi_6 = bits(_deq_robs_T_3, 3, 2) @[OneHot.scala 30:18]
    node deq_robs_lo_5 = bits(_deq_robs_T_3, 1, 0) @[OneHot.scala 31:18]
    node deq_robs_hi_7 = orr(deq_robs_hi_6) @[OneHot.scala 32:14]
    node _deq_robs_T_4 = or(deq_robs_hi_6, deq_robs_lo_5) @[OneHot.scala 32:28]
    node deq_robs_lo_6 = bits(_deq_robs_T_4, 1, 1) @[CircuitMath.scala 30:8]
    node deq_robs_lo_7 = cat(deq_robs_hi_7, deq_robs_lo_6) @[Cat.scala 30:58]
    node _deq_robs_T_5 = cat(deq_robs_hi_5, deq_robs_lo_7) @[Cat.scala 30:58]
    wire deq_robs : UInt<3>[2] @[Rob.scala 328:32]
    deq_robs[0] <= _deq_robs_T_2 @[Rob.scala 328:32]
    deq_robs[1] <= _deq_robs_T_5 @[Rob.scala 328:32]
    node commit_ready_mask_0 = and(rob_info[deq_robs[0]].commit_ready, rob_info[deq_robs[0]].is_valid) @[Rob.scala 329:67]
    node commit_ready_mask_1 = and(rob_info[deq_robs[1]].commit_ready, rob_info[deq_robs[1]].is_valid) @[Rob.scala 329:67]
    node commit_wait_mask_0 = eq(commit_ready_mask_0, UInt<1>("h00")) @[Rob.scala 330:48]
    node commit_wait_mask_1 = eq(commit_ready_mask_1, UInt<1>("h00")) @[Rob.scala 330:48]
    node _need_flush_mask_T = or(rob_info[deq_robs[0]].predict_miss, rob_info[deq_robs[0]].flush_on_commit) @[Rob.scala 331:73]
    node _need_flush_mask_T_1 = or(rob_info[deq_robs[1]].predict_miss, rob_info[deq_robs[1]].flush_on_commit) @[Rob.scala 331:73]
    wire need_flush_mask : UInt<1>[2] @[Rob.scala 331:32]
    need_flush_mask[0] <= _need_flush_mask_T @[Rob.scala 331:32]
    need_flush_mask[1] <= _need_flush_mask_T_1 @[Rob.scala 331:32]
    node _deq_wait_mask_T = or(UInt<1>("h00"), UInt<1>("h00")) @[Rob.scala 332:125]
    node deq_wait_mask_0 = or(_deq_wait_mask_T, commit_wait_mask_0) @[Rob.scala 332:133]
    node _deq_wait_mask_T_1 = or(deq_wait_mask_0, need_flush_mask[0]) @[Rob.scala 332:125]
    node deq_wait_mask_1 = or(_deq_wait_mask_T_1, commit_wait_mask_1) @[Rob.scala 332:133]
    node _head_next_T = mux(deq_wait_mask_1, UInt<1>("h01"), UInt<2>("h02")) @[Mux.scala 47:69]
    node _head_next_T_1 = mux(deq_wait_mask_0, UInt<1>("h00"), _head_next_T) @[Mux.scala 47:69]
    head_next <= deq_idxs[_head_next_T_1] @[Rob.scala 333:20]
    node _deq_ready_mask_T = eq(deq_wait_mask_0, UInt<1>("h00")) @[Rob.scala 334:50]
    node _deq_ready_mask_T_1 = eq(deq_wait_mask_1, UInt<1>("h00")) @[Rob.scala 334:50]
    node _deq_ready_mask_T_2 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Rob.scala 334:50]
    wire deq_ready_mask : UInt<1>[3] @[Rob.scala 334:31]
    deq_ready_mask[0] <= _deq_ready_mask_T @[Rob.scala 334:31]
    deq_ready_mask[1] <= _deq_ready_mask_T_1 @[Rob.scala 334:31]
    deq_ready_mask[2] <= _deq_ready_mask_T_2 @[Rob.scala 334:31]
    node flush_idx = mux(need_flush_mask[0], UInt<1>("h00"), UInt<1>("h01")) @[Mux.scala 47:69]
    node flush = and(need_flush_mask[flush_idx], deq_ready_mask[flush_idx]) @[Rob.scala 337:52]
    reg rob_commit : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}[2], clock @[Rob.scala 341:23]
    wire _rob_commit_valid_WIRE : UInt<1>[2] @[Rob.scala 342:41]
    _rob_commit_valid_WIRE[0] <= UInt<1>("h00") @[Rob.scala 342:41]
    _rob_commit_valid_WIRE[1] <= UInt<1>("h00") @[Rob.scala 342:41]
    reg rob_commit_valid : UInt<1>[2], clock with : (reset => (reset, _rob_commit_valid_WIRE)) @[Rob.scala 342:33]
    rob_commit_valid[0] <= deq_ready_mask[0] @[Rob.scala 345:25]
    rob_commit[0].commit_data <= rob_info[deq_robs[0]].commit_data @[Rob.scala 346:31]
    rob_commit[0].des_rob <= deq_robs[0] @[Rob.scala 347:27]
    rob_commit[0].commit_addr <= rob_info[deq_robs[0]].commit_addr @[Rob.scala 348:31]
    when deq_ready_mask[0] : @[Rob.scala 349:28]
      rob_info[deq_robs[0]].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[deq_robs[0]].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[deq_robs[0]].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[deq_robs[0]].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[deq_robs[0]].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[deq_robs[0]].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[deq_robs[0]].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[deq_robs[0]].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[deq_robs[0]].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[deq_robs[0]].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[deq_robs[0]].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[deq_robs[0]].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[deq_robs[0]].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[deq_robs[0]].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[deq_robs[0]].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[deq_robs[0]].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[deq_robs[0]].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[deq_robs[0]].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[deq_robs[0]].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[deq_robs[0]].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[deq_robs[0]].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[deq_robs[0]].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[deq_robs[0]].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[deq_robs[0]].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[deq_robs[0]].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[deq_robs[0]].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      skip @[Rob.scala 349:28]
    io.rob_commit[0].bits.commit_data <= rob_commit[0].commit_data @[Rob.scala 352:26]
    io.rob_commit[0].bits.commit_addr <= rob_commit[0].commit_addr @[Rob.scala 352:26]
    io.rob_commit[0].bits.des_rob <= rob_commit[0].des_rob @[Rob.scala 352:26]
    io.rob_commit[0].valid <= rob_commit_valid[0] @[Rob.scala 353:27]
    rob_commit_valid[1] <= deq_ready_mask[1] @[Rob.scala 345:25]
    rob_commit[1].commit_data <= rob_info[deq_robs[1]].commit_data @[Rob.scala 346:31]
    rob_commit[1].des_rob <= deq_robs[1] @[Rob.scala 347:27]
    rob_commit[1].commit_addr <= rob_info[deq_robs[1]].commit_addr @[Rob.scala 348:31]
    when deq_ready_mask[1] : @[Rob.scala 349:28]
      rob_info[deq_robs[1]].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[deq_robs[1]].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[deq_robs[1]].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[deq_robs[1]].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[deq_robs[1]].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[deq_robs[1]].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[deq_robs[1]].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[deq_robs[1]].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[deq_robs[1]].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[deq_robs[1]].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[deq_robs[1]].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[deq_robs[1]].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[deq_robs[1]].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[deq_robs[1]].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[deq_robs[1]].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[deq_robs[1]].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[deq_robs[1]].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[deq_robs[1]].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[deq_robs[1]].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[deq_robs[1]].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[deq_robs[1]].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[deq_robs[1]].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[deq_robs[1]].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[deq_robs[1]].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[deq_robs[1]].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[deq_robs[1]].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      skip @[Rob.scala 349:28]
    io.rob_commit[1].bits.commit_data <= rob_commit[1].commit_data @[Rob.scala 352:26]
    io.rob_commit[1].bits.commit_addr <= rob_commit[1].commit_addr @[Rob.scala 352:26]
    io.rob_commit[1].bits.des_rob <= rob_commit[1].des_rob @[Rob.scala 352:26]
    io.rob_commit[1].valid <= rob_commit_valid[1] @[Rob.scala 353:27]
    node _T_702 = eq(rob_commit[0].des_rob, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 359:34]
    node _T_703 = and(_T_702, rob_commit_valid[0]) @[Rob.scala 359:70]
    when _T_703 : @[Rob.scala 359:92]
      init_op1_hit_commit[0] <= UInt<1>("h01") @[Rob.scala 360:31]
      init_op1_commit_data[0] <= rob_commit[0].commit_data @[Rob.scala 361:32]
      skip @[Rob.scala 359:92]
    node _T_704 = eq(rob_commit[0].des_rob, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 363:34]
    node _T_705 = and(_T_704, rob_commit_valid[0]) @[Rob.scala 363:70]
    when _T_705 : @[Rob.scala 363:92]
      init_op2_hit_commit[0] <= UInt<1>("h01") @[Rob.scala 364:31]
      init_op2_commit_data[0] <= rob_commit[0].commit_data @[Rob.scala 365:32]
      skip @[Rob.scala 363:92]
    node _T_706 = eq(rob_commit[1].des_rob, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 359:34]
    node _T_707 = and(_T_706, rob_commit_valid[1]) @[Rob.scala 359:70]
    when _T_707 : @[Rob.scala 359:92]
      init_op1_hit_commit[0] <= UInt<1>("h01") @[Rob.scala 360:31]
      init_op1_commit_data[0] <= rob_commit[1].commit_data @[Rob.scala 361:32]
      skip @[Rob.scala 359:92]
    node _T_708 = eq(rob_commit[1].des_rob, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 363:34]
    node _T_709 = and(_T_708, rob_commit_valid[1]) @[Rob.scala 363:70]
    when _T_709 : @[Rob.scala 363:92]
      init_op2_hit_commit[0] <= UInt<1>("h01") @[Rob.scala 364:31]
      init_op2_commit_data[0] <= rob_commit[1].commit_data @[Rob.scala 365:32]
      skip @[Rob.scala 363:92]
    node _T_710 = eq(rob_commit[0].des_rob, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 359:34]
    node _T_711 = and(_T_710, rob_commit_valid[0]) @[Rob.scala 359:70]
    when _T_711 : @[Rob.scala 359:92]
      init_op1_hit_commit[1] <= UInt<1>("h01") @[Rob.scala 360:31]
      init_op1_commit_data[1] <= rob_commit[0].commit_data @[Rob.scala 361:32]
      skip @[Rob.scala 359:92]
    node _T_712 = eq(rob_commit[0].des_rob, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 363:34]
    node _T_713 = and(_T_712, rob_commit_valid[0]) @[Rob.scala 363:70]
    when _T_713 : @[Rob.scala 363:92]
      init_op2_hit_commit[1] <= UInt<1>("h01") @[Rob.scala 364:31]
      init_op2_commit_data[1] <= rob_commit[0].commit_data @[Rob.scala 365:32]
      skip @[Rob.scala 363:92]
    node _T_714 = eq(rob_commit[1].des_rob, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 359:34]
    node _T_715 = and(_T_714, rob_commit_valid[1]) @[Rob.scala 359:70]
    when _T_715 : @[Rob.scala 359:92]
      init_op1_hit_commit[1] <= UInt<1>("h01") @[Rob.scala 360:31]
      init_op1_commit_data[1] <= rob_commit[1].commit_data @[Rob.scala 361:32]
      skip @[Rob.scala 359:92]
    node _T_716 = eq(rob_commit[1].des_rob, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 363:34]
    node _T_717 = and(_T_716, rob_commit_valid[1]) @[Rob.scala 363:70]
    when _T_717 : @[Rob.scala 363:92]
      init_op2_hit_commit[1] <= UInt<1>("h01") @[Rob.scala 364:31]
      init_op2_commit_data[1] <= rob_commit[1].commit_data @[Rob.scala 365:32]
      skip @[Rob.scala 363:92]
    node _T_718 = eq(io.wb_info_i[0].bits.rob_idx, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 371:41]
    node _T_719 = and(_T_718, io.wb_info_i[0].valid) @[Rob.scala 371:77]
    when _T_719 : @[Rob.scala 371:101]
      init_op1_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[0] <= io.wb_info_i[0].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_720 = eq(io.wb_info_i[0].bits.rob_idx, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 375:41]
    node _T_721 = and(_T_720, io.wb_info_i[0].valid) @[Rob.scala 375:77]
    when _T_721 : @[Rob.scala 375:101]
      init_op2_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[0] <= io.wb_info_i[0].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_722 = eq(io.wb_info_i[1].bits.rob_idx, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 371:41]
    node _T_723 = and(_T_722, io.wb_info_i[1].valid) @[Rob.scala 371:77]
    when _T_723 : @[Rob.scala 371:101]
      init_op1_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[0] <= io.wb_info_i[1].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_724 = eq(io.wb_info_i[1].bits.rob_idx, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 375:41]
    node _T_725 = and(_T_724, io.wb_info_i[1].valid) @[Rob.scala 375:77]
    when _T_725 : @[Rob.scala 375:101]
      init_op2_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[0] <= io.wb_info_i[1].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_726 = eq(io.wb_info_i[2].bits.rob_idx, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 371:41]
    node _T_727 = and(_T_726, io.wb_info_i[2].valid) @[Rob.scala 371:77]
    when _T_727 : @[Rob.scala 371:101]
      init_op1_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[0] <= io.wb_info_i[2].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_728 = eq(io.wb_info_i[2].bits.rob_idx, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 375:41]
    node _T_729 = and(_T_728, io.wb_info_i[2].valid) @[Rob.scala 375:77]
    when _T_729 : @[Rob.scala 375:101]
      init_op2_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[0] <= io.wb_info_i[2].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_730 = eq(io.wb_info_i[3].bits.rob_idx, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 371:41]
    node _T_731 = and(_T_730, io.wb_info_i[3].valid) @[Rob.scala 371:77]
    when _T_731 : @[Rob.scala 371:101]
      init_op1_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[0] <= io.wb_info_i[3].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_732 = eq(io.wb_info_i[3].bits.rob_idx, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 375:41]
    node _T_733 = and(_T_732, io.wb_info_i[3].valid) @[Rob.scala 375:77]
    when _T_733 : @[Rob.scala 375:101]
      init_op2_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[0] <= io.wb_info_i[3].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_734 = eq(io.wb_info_i[4].bits.rob_idx, io.rob_init_info.bits[0].op1_rob) @[Rob.scala 371:41]
    node _T_735 = and(_T_734, io.wb_info_i[4].valid) @[Rob.scala 371:77]
    when _T_735 : @[Rob.scala 371:101]
      init_op1_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[0] <= io.wb_info_i[4].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_736 = eq(io.wb_info_i[4].bits.rob_idx, io.rob_init_info.bits[0].op2_rob) @[Rob.scala 375:41]
    node _T_737 = and(_T_736, io.wb_info_i[4].valid) @[Rob.scala 375:77]
    when _T_737 : @[Rob.scala 375:101]
      init_op2_hit_wb[0] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[0] <= io.wb_info_i[4].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_738 = eq(io.wb_info_i[0].bits.rob_idx, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 371:41]
    node _T_739 = and(_T_738, io.wb_info_i[0].valid) @[Rob.scala 371:77]
    when _T_739 : @[Rob.scala 371:101]
      init_op1_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[1] <= io.wb_info_i[0].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_740 = eq(io.wb_info_i[0].bits.rob_idx, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 375:41]
    node _T_741 = and(_T_740, io.wb_info_i[0].valid) @[Rob.scala 375:77]
    when _T_741 : @[Rob.scala 375:101]
      init_op2_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[1] <= io.wb_info_i[0].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_742 = eq(io.wb_info_i[1].bits.rob_idx, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 371:41]
    node _T_743 = and(_T_742, io.wb_info_i[1].valid) @[Rob.scala 371:77]
    when _T_743 : @[Rob.scala 371:101]
      init_op1_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[1] <= io.wb_info_i[1].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_744 = eq(io.wb_info_i[1].bits.rob_idx, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 375:41]
    node _T_745 = and(_T_744, io.wb_info_i[1].valid) @[Rob.scala 375:77]
    when _T_745 : @[Rob.scala 375:101]
      init_op2_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[1] <= io.wb_info_i[1].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_746 = eq(io.wb_info_i[2].bits.rob_idx, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 371:41]
    node _T_747 = and(_T_746, io.wb_info_i[2].valid) @[Rob.scala 371:77]
    when _T_747 : @[Rob.scala 371:101]
      init_op1_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[1] <= io.wb_info_i[2].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_748 = eq(io.wb_info_i[2].bits.rob_idx, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 375:41]
    node _T_749 = and(_T_748, io.wb_info_i[2].valid) @[Rob.scala 375:77]
    when _T_749 : @[Rob.scala 375:101]
      init_op2_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[1] <= io.wb_info_i[2].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_750 = eq(io.wb_info_i[3].bits.rob_idx, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 371:41]
    node _T_751 = and(_T_750, io.wb_info_i[3].valid) @[Rob.scala 371:77]
    when _T_751 : @[Rob.scala 371:101]
      init_op1_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[1] <= io.wb_info_i[3].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_752 = eq(io.wb_info_i[3].bits.rob_idx, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 375:41]
    node _T_753 = and(_T_752, io.wb_info_i[3].valid) @[Rob.scala 375:77]
    when _T_753 : @[Rob.scala 375:101]
      init_op2_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[1] <= io.wb_info_i[3].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    node _T_754 = eq(io.wb_info_i[4].bits.rob_idx, io.rob_init_info.bits[1].op1_rob) @[Rob.scala 371:41]
    node _T_755 = and(_T_754, io.wb_info_i[4].valid) @[Rob.scala 371:77]
    when _T_755 : @[Rob.scala 371:101]
      init_op1_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 372:27]
      init_op1_wb_data[1] <= io.wb_info_i[4].bits.data @[Rob.scala 373:28]
      skip @[Rob.scala 371:101]
    node _T_756 = eq(io.wb_info_i[4].bits.rob_idx, io.rob_init_info.bits[1].op2_rob) @[Rob.scala 375:41]
    node _T_757 = and(_T_756, io.wb_info_i[4].valid) @[Rob.scala 375:77]
    when _T_757 : @[Rob.scala 375:101]
      init_op2_hit_wb[1] <= UInt<1>("h01") @[Rob.scala 376:27]
      init_op2_wb_data[1] <= io.wb_info_i[4].bits.data @[Rob.scala 377:28]
      skip @[Rob.scala 375:101]
    reg branch_info : {target_addr : UInt<32>, inst_addr : UInt<32>, gh_update : UInt<4>, is_branch : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>}, clock @[Rob.scala 385:24]
    reg branch_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Rob.scala 386:34]
    branch_info_valid <= UInt<1>("h00") @[Rob.scala 387:21]
    branch_info.target_addr <= rob_info[deq_robs[flush_idx]].imm_data @[Rob.scala 388:27]
    branch_info.inst_addr <= rob_info[deq_robs[flush_idx]].inst_addr @[Rob.scala 389:25]
    branch_info.gh_update <= rob_info[deq_robs[flush_idx]].gh_info @[Rob.scala 390:25]
    branch_info.is_branch <= rob_info[deq_robs[flush_idx]].is_branch @[Rob.scala 391:25]
    branch_info.is_taken <= rob_info[deq_robs[flush_idx]].is_taken @[Rob.scala 392:24]
    branch_info.predict_miss <= rob_info[deq_robs[flush_idx]].predict_miss @[Rob.scala 393:28]
    io.branch_info.bits.predict_miss <= branch_info.predict_miss @[Rob.scala 395:22]
    io.branch_info.bits.is_taken <= branch_info.is_taken @[Rob.scala 395:22]
    io.branch_info.bits.is_branch <= branch_info.is_branch @[Rob.scala 395:22]
    io.branch_info.bits.gh_update <= branch_info.gh_update @[Rob.scala 395:22]
    io.branch_info.bits.inst_addr <= branch_info.inst_addr @[Rob.scala 395:22]
    io.branch_info.bits.target_addr <= branch_info.target_addr @[Rob.scala 395:22]
    io.branch_info.valid <= branch_info_valid @[Rob.scala 396:23]
    head <= head_next @[Rob.scala 399:8]
    when do_enq : @[Rob.scala 400:16]
      maybe_full <= UInt<1>("h01") @[Rob.scala 401:16]
      skip @[Rob.scala 400:16]
    else : @[Rob.scala 402:22]
      when deq_ready_mask[0] : @[Rob.scala 402:22]
        maybe_full <= UInt<1>("h00") @[Rob.scala 403:16]
        skip @[Rob.scala 402:22]
    wire delay_mask : UInt<1>[8] @[Rob.scala 405:27]
    delay_mask[0] <= rob_info[0].is_delay @[Rob.scala 405:27]
    delay_mask[1] <= rob_info[1].is_delay @[Rob.scala 405:27]
    delay_mask[2] <= rob_info[2].is_delay @[Rob.scala 405:27]
    delay_mask[3] <= rob_info[3].is_delay @[Rob.scala 405:27]
    delay_mask[4] <= rob_info[4].is_delay @[Rob.scala 405:27]
    delay_mask[5] <= rob_info[5].is_delay @[Rob.scala 405:27]
    delay_mask[6] <= rob_info[6].is_delay @[Rob.scala 405:27]
    delay_mask[7] <= rob_info[7].is_delay @[Rob.scala 405:27]
    node has_delay_lo_lo = cat(delay_mask[1], delay_mask[0]) @[Rob.scala 406:37]
    node has_delay_lo_hi = cat(delay_mask[3], delay_mask[2]) @[Rob.scala 406:37]
    node has_delay_lo = cat(has_delay_lo_hi, has_delay_lo_lo) @[Rob.scala 406:37]
    node has_delay_hi_lo = cat(delay_mask[5], delay_mask[4]) @[Rob.scala 406:37]
    node has_delay_hi_hi = cat(delay_mask[7], delay_mask[6]) @[Rob.scala 406:37]
    node has_delay_hi = cat(has_delay_hi_hi, has_delay_hi_lo) @[Rob.scala 406:37]
    node _has_delay_T = cat(has_delay_hi, has_delay_lo) @[Rob.scala 406:37]
    node _has_delay_T_1 = and(_has_delay_T, head) @[Rob.scala 406:39]
    node has_delay = orr(_has_delay_T_1) @[Rob.scala 406:49]
    when flush : @[Rob.scala 411:15]
      waiting_delay <= UInt<1>("h01") @[Rob.scala 412:19]
      skip @[Rob.scala 411:15]
    when waiting_delay : @[Rob.scala 429:22]
      rob_commit_valid[1] <= UInt<1>("h00") @[Rob.scala 430:58]
      branch_info.predict_miss <= branch_info.predict_miss @[Rob.scala 431:16]
      branch_info.is_taken <= branch_info.is_taken @[Rob.scala 431:16]
      branch_info.is_branch <= branch_info.is_branch @[Rob.scala 431:16]
      branch_info.gh_update <= branch_info.gh_update @[Rob.scala 431:16]
      branch_info.inst_addr <= branch_info.inst_addr @[Rob.scala 431:16]
      branch_info.target_addr <= branch_info.target_addr @[Rob.scala 431:16]
      when deq_ready_mask[0] : @[Rob.scala 432:28]
        waiting_delay <= UInt<1>("h00") @[Rob.scala 433:20]
        need_flush <= UInt<1>("h01") @[Rob.scala 434:17]
        branch_info_valid <= UInt<1>("h01") @[Rob.scala 435:25]
        skip @[Rob.scala 432:28]
      else : @[Rob.scala 436:16]
        need_flush <= UInt<1>("h00") @[Rob.scala 437:17]
        skip @[Rob.scala 436:16]
      skip @[Rob.scala 429:22]
    else : @[Rob.scala 439:14]
      need_flush <= UInt<1>("h00") @[Rob.scala 440:15]
      skip @[Rob.scala 439:14]
    io.need_flush <= need_flush @[Rob.scala 443:16]
    when need_flush : @[Rob.scala 445:19]
      rob_info[0].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[0].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[0].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[0].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[0].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[0].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[0].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[0].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[0].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[0].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[0].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[0].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[0].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[0].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[0].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[0].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[0].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[0].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[0].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[0].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[0].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[0].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[0].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[0].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[0].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[0].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[1].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[1].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[1].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[1].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[1].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[1].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[1].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[1].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[1].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[1].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[1].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[1].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[1].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[1].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[1].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[1].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[1].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[1].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[1].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[1].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[1].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[1].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[1].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[1].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[1].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[1].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[2].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[2].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[2].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[2].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[2].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[2].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[2].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[2].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[2].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[2].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[2].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[2].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[2].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[2].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[2].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[2].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[2].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[2].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[2].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[2].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[2].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[2].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[2].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[2].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[2].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[2].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[3].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[3].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[3].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[3].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[3].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[3].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[3].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[3].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[3].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[3].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[3].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[3].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[3].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[3].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[3].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[3].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[3].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[3].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[3].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[3].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[3].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[3].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[3].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[3].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[3].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[3].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[4].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[4].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[4].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[4].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[4].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[4].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[4].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[4].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[4].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[4].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[4].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[4].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[4].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[4].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[4].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[4].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[4].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[4].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[4].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[4].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[4].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[4].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[4].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[4].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[4].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[4].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[5].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[5].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[5].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[5].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[5].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[5].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[5].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[5].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[5].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[5].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[5].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[5].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[5].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[5].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[5].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[5].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[5].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[5].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[5].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[5].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[5].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[5].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[5].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[5].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[5].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[5].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[6].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[6].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[6].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[6].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[6].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[6].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[6].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[6].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[6].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[6].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[6].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[6].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[6].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[6].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[6].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[6].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[6].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[6].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[6].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[6].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[6].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[6].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[6].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[6].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[6].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[6].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[7].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[7].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[7].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[7].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[7].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[7].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[7].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[7].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[7].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[7].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[7].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[7].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[7].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[7].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[7].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[7].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[7].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[7].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[7].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[7].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[7].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[7].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[7].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[7].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[7].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[7].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      branch_info.target_addr <= UInt<32>("h00") @[Bpu.scala 42:18]
      branch_info.inst_addr <= UInt<32>("h00") @[Bpu.scala 43:18]
      branch_info.gh_update <= UInt<4>("h00") @[Bpu.scala 44:18]
      branch_info.is_branch <= UInt<1>("h00") @[Bpu.scala 45:18]
      branch_info.is_taken <= UInt<1>("h00") @[Bpu.scala 46:18]
      branch_info.predict_miss <= UInt<1>("h00") @[Bpu.scala 47:18]
      branch_info_valid <= UInt<1>("h00") @[Rob.scala 450:22]
      rob_commit[0].des_rob <= UInt<3>("h00") @[Rename.scala 15:13]
      rob_commit[0].commit_addr <= UInt<5>("h00") @[Rename.scala 16:17]
      rob_commit[0].commit_data <= UInt<32>("h00") @[Rename.scala 17:17]
      rob_commit[1].des_rob <= UInt<3>("h00") @[Rename.scala 15:13]
      rob_commit[1].commit_addr <= UInt<5>("h00") @[Rename.scala 16:17]
      rob_commit[1].commit_data <= UInt<32>("h00") @[Rename.scala 17:17]
      rob_commit_valid[0] <= UInt<1>("h00") @[Rob.scala 456:8]
      rob_commit_valid[1] <= UInt<1>("h00") @[Rob.scala 456:8]
      node tail_hi = bits(head, 6, 0) @[Rob.scala 167:12]
      node tail_lo = bits(head, 7, 7) @[Rob.scala 167:29]
      node _tail_T = cat(tail_hi, tail_lo) @[Cat.scala 30:58]
      tail <= _tail_T @[Rob.scala 458:10]
      node head_hi = bits(head, 6, 0) @[Rob.scala 167:12]
      node head_lo = bits(head, 7, 7) @[Rob.scala 167:29]
      node _head_T = cat(head_hi, head_lo) @[Cat.scala 30:58]
      head <= _head_T @[Rob.scala 459:10]
      maybe_full <= UInt<1>("h00") @[Rob.scala 460:16]
      waiting_delay <= UInt<1>("h00") @[Rob.scala 461:18]
      skip @[Rob.scala 445:19]
    node _T_758 = asUInt(reset) @[Rob.scala 464:20]
    when _T_758 : @[Rob.scala 464:24]
      rob_info[0].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[0].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[0].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[0].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[0].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[0].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[0].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[0].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[0].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[0].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[0].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[0].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[0].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[0].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[0].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[0].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[0].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[0].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[0].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[0].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[0].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[0].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[0].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[0].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[0].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[0].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[1].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[1].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[1].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[1].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[1].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[1].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[1].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[1].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[1].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[1].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[1].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[1].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[1].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[1].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[1].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[1].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[1].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[1].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[1].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[1].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[1].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[1].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[1].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[1].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[1].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[1].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[2].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[2].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[2].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[2].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[2].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[2].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[2].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[2].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[2].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[2].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[2].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[2].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[2].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[2].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[2].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[2].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[2].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[2].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[2].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[2].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[2].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[2].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[2].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[2].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[2].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[2].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[3].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[3].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[3].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[3].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[3].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[3].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[3].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[3].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[3].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[3].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[3].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[3].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[3].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[3].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[3].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[3].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[3].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[3].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[3].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[3].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[3].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[3].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[3].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[3].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[3].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[3].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[4].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[4].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[4].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[4].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[4].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[4].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[4].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[4].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[4].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[4].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[4].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[4].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[4].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[4].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[4].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[4].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[4].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[4].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[4].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[4].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[4].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[4].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[4].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[4].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[4].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[4].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[5].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[5].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[5].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[5].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[5].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[5].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[5].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[5].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[5].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[5].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[5].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[5].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[5].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[5].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[5].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[5].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[5].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[5].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[5].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[5].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[5].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[5].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[5].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[5].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[5].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[5].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[6].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[6].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[6].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[6].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[6].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[6].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[6].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[6].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[6].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[6].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[6].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[6].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[6].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[6].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[6].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[6].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[6].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[6].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[6].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[6].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[6].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[6].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[6].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[6].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[6].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[6].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_info[7].is_valid <= UInt<1>("h00") @[Rob.scala 42:13]
      rob_info[7].busy <= UInt<1>("h00") @[Rob.scala 43:9]
      rob_info[7].uop <= UInt<1>("h00") @[Rob.scala 44:8]
      rob_info[7].unit_sel <= UInt<1>("h00") @[Rob.scala 45:13]
      rob_info[7].need_imm <= UInt<1>("h00") @[Rob.scala 46:13]
      rob_info[7].inst_addr <= UInt<32>("h00") @[Rob.scala 47:14]
      rob_info[7].commit_addr <= UInt<5>("h00") @[Rob.scala 48:16]
      rob_info[7].commit_data <= UInt<32>("h00") @[Rob.scala 49:16]
      rob_info[7].commit_target <= UInt<1>("h00") @[Rob.scala 50:18]
      rob_info[7].commit_ready <= UInt<1>("h00") @[Rob.scala 51:17]
      rob_info[7].except_type <= UInt<1>("h00") @[Rob.scala 52:16]
      rob_info[7].is_branch <= UInt<1>("h00") @[Rob.scala 53:14]
      rob_info[7].is_delay <= UInt<1>("h00") @[Rob.scala 54:13]
      rob_info[7].predict_taken <= UInt<1>("h00") @[Rob.scala 55:18]
      rob_info[7].is_taken <= UInt<1>("h00") @[Rob.scala 56:13]
      rob_info[7].predict_miss <= UInt<1>("h00") @[Rob.scala 57:17]
      rob_info[7].gh_info <= UInt<4>("h00") @[Rob.scala 58:12]
      rob_info[7].op1_ready <= UInt<1>("h00") @[Rob.scala 59:14]
      rob_info[7].op1_tag <= UInt<3>("h00") @[Rob.scala 60:12]
      rob_info[7].op1_data <= UInt<32>("h00") @[Rob.scala 61:13]
      rob_info[7].op2_ready <= UInt<1>("h00") @[Rob.scala 62:14]
      rob_info[7].op2_tag <= UInt<3>("h00") @[Rob.scala 63:12]
      rob_info[7].op2_data <= UInt<32>("h00") @[Rob.scala 64:13]
      rob_info[7].imm_data <= UInt<32>("h00") @[Rob.scala 65:13]
      rob_info[7].is_init <= UInt<1>("h00") @[Rob.scala 66:13]
      rob_info[7].flush_on_commit <= UInt<1>("h00") @[Rob.scala 67:20]
      rob_commit[0].des_rob <= UInt<3>("h00") @[Rename.scala 15:13]
      rob_commit[0].commit_addr <= UInt<5>("h00") @[Rename.scala 16:17]
      rob_commit[0].commit_data <= UInt<32>("h00") @[Rename.scala 17:17]
      rob_commit[1].des_rob <= UInt<3>("h00") @[Rename.scala 15:13]
      rob_commit[1].commit_addr <= UInt<5>("h00") @[Rename.scala 16:17]
      rob_commit[1].commit_data <= UInt<32>("h00") @[Rename.scala 17:17]
      branch_info.target_addr <= UInt<32>("h00") @[Bpu.scala 42:18]
      branch_info.inst_addr <= UInt<32>("h00") @[Bpu.scala 43:18]
      branch_info.gh_update <= UInt<4>("h00") @[Bpu.scala 44:18]
      branch_info.is_branch <= UInt<1>("h00") @[Bpu.scala 45:18]
      branch_info.is_taken <= UInt<1>("h00") @[Bpu.scala 46:18]
      branch_info.predict_miss <= UInt<1>("h00") @[Bpu.scala 47:18]
      skip @[Rob.scala 464:24]
    
  module Alu : 
    input clock : Clock
    input reset : Reset
    output io : {flip dispatch_info : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}, wb_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip need_flush : UInt<1>}
    
    reg dispatch_info : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}, clock @[Alu.scala 19:34]
    dispatch_info.predict_taken <= io.dispatch_info.bits.predict_taken @[Alu.scala 20:17]
    dispatch_info.imm_data <= io.dispatch_info.bits.imm_data @[Alu.scala 20:17]
    dispatch_info.op2_data <= io.dispatch_info.bits.op2_data @[Alu.scala 20:17]
    dispatch_info.op1_data <= io.dispatch_info.bits.op1_data @[Alu.scala 20:17]
    dispatch_info.inst_addr <= io.dispatch_info.bits.inst_addr @[Alu.scala 20:17]
    dispatch_info.rob_idx <= io.dispatch_info.bits.rob_idx @[Alu.scala 20:17]
    dispatch_info.need_imm <= io.dispatch_info.bits.need_imm @[Alu.scala 20:17]
    dispatch_info.uop <= io.dispatch_info.bits.uop @[Alu.scala 20:17]
    reg dispatch_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Alu.scala 21:38]
    dispatch_valid <= io.dispatch_info.valid @[Alu.scala 22:17]
    io.dispatch_info.ready <= UInt<1>("h01") @[Alu.scala 23:25]
    node op2_data = mux(dispatch_info.need_imm, dispatch_info.imm_data, dispatch_info.op2_data) @[Alu.scala 27:24]
    wire result_data : UInt<32> @[Alu.scala 28:25]
    result_data <= UInt<1>("h00") @[Alu.scala 30:15]
    node _T = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _result_data_T = add(dispatch_info.op1_data, op2_data) @[Alu.scala 33:31]
      node _result_data_T_1 = tail(_result_data_T, 1) @[Alu.scala 33:31]
      result_data <= _result_data_T_1 @[Alu.scala 33:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        node _result_data_T_2 = add(dispatch_info.op1_data, op2_data) @[Alu.scala 36:31]
        node _result_data_T_3 = tail(_result_data_T_2, 1) @[Alu.scala 36:31]
        result_data <= _result_data_T_3 @[Alu.scala 36:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h03")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _result_data_T_4 = sub(dispatch_info.op1_data, op2_data) @[Alu.scala 39:31]
          node _result_data_T_5 = tail(_result_data_T_4, 1) @[Alu.scala 39:31]
          result_data <= _result_data_T_5 @[Alu.scala 39:19]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = asUInt(UInt<3>("h04")) @[Conditional.scala 37:23]
          node _T_10 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
          node _T_11 = eq(_T_9, _T_10) @[Conditional.scala 37:30]
          when _T_11 : @[Conditional.scala 39:67]
            node _result_data_T_6 = sub(dispatch_info.op1_data, op2_data) @[Alu.scala 42:31]
            node _result_data_T_7 = tail(_result_data_T_6, 1) @[Alu.scala 42:31]
            result_data <= _result_data_T_7 @[Alu.scala 42:19]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = asUInt(UInt<3>("h05")) @[Conditional.scala 37:23]
            node _T_13 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
            node _T_14 = eq(_T_12, _T_13) @[Conditional.scala 37:30]
            when _T_14 : @[Conditional.scala 39:67]
              node _result_data_T_8 = bits(op2_data, 4, 0) @[Alu.scala 45:51]
              node _result_data_T_9 = dshl(dispatch_info.op1_data, _result_data_T_8) @[Alu.scala 45:40]
              result_data <= _result_data_T_9 @[Alu.scala 45:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_15 = asUInt(UInt<3>("h06")) @[Conditional.scala 37:23]
              node _T_16 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
              node _T_17 = eq(_T_15, _T_16) @[Conditional.scala 37:30]
              when _T_17 : @[Conditional.scala 39:67]
                node _result_data_T_10 = bits(op2_data, 4, 0) @[Alu.scala 48:52]
                node _result_data_T_11 = dshr(dispatch_info.op1_data, _result_data_T_10) @[Alu.scala 48:41]
                result_data <= _result_data_T_11 @[Alu.scala 48:19]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_18 = asUInt(UInt<3>("h07")) @[Conditional.scala 37:23]
                node _T_19 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                node _T_20 = eq(_T_18, _T_19) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node _result_data_T_12 = asSInt(dispatch_info.op1_data) @[Alu.scala 51:38]
                  node _result_data_T_13 = dshr(_result_data_T_12, op2_data) @[Alu.scala 51:41]
                  node _result_data_T_14 = asUInt(_result_data_T_13) @[Alu.scala 51:60]
                  result_data <= _result_data_T_14 @[Alu.scala 51:19]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_21 = asUInt(UInt<4>("h08")) @[Conditional.scala 37:23]
                  node _T_22 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                  node _T_23 = eq(_T_21, _T_22) @[Conditional.scala 37:30]
                  when _T_23 : @[Conditional.scala 39:67]
                    node _result_data_T_15 = asSInt(dispatch_info.op1_data) @[Alu.scala 54:38]
                    node _result_data_T_16 = asSInt(op2_data) @[Alu.scala 54:58]
                    node _result_data_T_17 = lt(_result_data_T_15, _result_data_T_16) @[Alu.scala 54:41]
                    result_data <= _result_data_T_17 @[Alu.scala 54:19]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_24 = asUInt(UInt<4>("h09")) @[Conditional.scala 37:23]
                    node _T_25 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                    node _T_26 = eq(_T_24, _T_25) @[Conditional.scala 37:30]
                    when _T_26 : @[Conditional.scala 39:67]
                      node _result_data_T_18 = lt(dispatch_info.op1_data, op2_data) @[Alu.scala 57:40]
                      result_data <= _result_data_T_18 @[Alu.scala 57:19]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = asUInt(UInt<4>("h0a")) @[Conditional.scala 37:23]
                      node _T_28 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                      node _T_29 = eq(_T_27, _T_28) @[Conditional.scala 37:30]
                      when _T_29 : @[Conditional.scala 39:67]
                        node _result_data_T_19 = xor(dispatch_info.op1_data, op2_data) @[Alu.scala 60:31]
                        result_data <= _result_data_T_19 @[Alu.scala 60:19]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_30 = asUInt(UInt<4>("h0b")) @[Conditional.scala 37:23]
                        node _T_31 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                        node _T_32 = eq(_T_30, _T_31) @[Conditional.scala 37:30]
                        when _T_32 : @[Conditional.scala 39:67]
                          node _result_data_T_20 = or(dispatch_info.op1_data, op2_data) @[Alu.scala 63:31]
                          result_data <= _result_data_T_20 @[Alu.scala 63:19]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_33 = asUInt(UInt<4>("h0c")) @[Conditional.scala 37:23]
                          node _T_34 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                          node _T_35 = eq(_T_33, _T_34) @[Conditional.scala 37:30]
                          when _T_35 : @[Conditional.scala 39:67]
                            node _result_data_T_21 = and(dispatch_info.op1_data, op2_data) @[Alu.scala 66:31]
                            result_data <= _result_data_T_21 @[Alu.scala 66:19]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_36 = asUInt(UInt<4>("h0d")) @[Conditional.scala 37:23]
                            node _T_37 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                            node _T_38 = eq(_T_36, _T_37) @[Conditional.scala 37:30]
                            when _T_38 : @[Conditional.scala 39:67]
                              node result_data_hi = bits(op2_data, 15, 0) @[Alu.scala 69:34]
                              node _result_data_T_22 = cat(result_data_hi, UInt<16>("h00")) @[Cat.scala 30:58]
                              result_data <= _result_data_T_22 @[Alu.scala 69:19]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_39 = asUInt(UInt<4>("h0e")) @[Conditional.scala 37:23]
                              node _T_40 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                              node _T_41 = eq(_T_39, _T_40) @[Conditional.scala 37:30]
                              when _T_41 : @[Conditional.scala 39:67]
                                node _result_data_T_23 = or(dispatch_info.op1_data, op2_data) @[Alu.scala 72:32]
                                node _result_data_T_24 = not(_result_data_T_23) @[Alu.scala 72:44]
                                result_data <= _result_data_T_24 @[Alu.scala 72:19]
                                skip @[Conditional.scala 39:67]
    reg wb_info : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}, clock @[Alu.scala 75:26]
    reg wb_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Alu.scala 76:36]
    io.wb_info.bits.data <= result_data @[Alu.scala 87:23]
    io.wb_info.bits.rob_idx <= dispatch_info.rob_idx @[Alu.scala 88:26]
    io.wb_info.bits.is_taken <= UInt<1>("h00") @[Alu.scala 89:27]
    io.wb_info.bits.target_addr <= UInt<1>("h00") @[Alu.scala 90:30]
    io.wb_info.bits.predict_miss <= UInt<1>("h00") @[Alu.scala 91:31]
    io.wb_info.valid <= dispatch_valid @[Alu.scala 92:19]
    when io.need_flush : @[Alu.scala 95:22]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      dispatch_valid <= UInt<1>("h00") @[Alu.scala 97:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      wb_info_valid <= UInt<1>("h00") @[Alu.scala 99:18]
      skip @[Alu.scala 95:22]
    node _T_42 = asUInt(reset) @[Alu.scala 102:20]
    when _T_42 : @[Alu.scala 102:23]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      skip @[Alu.scala 102:23]
    
  module Alu_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip dispatch_info : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}, wb_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip need_flush : UInt<1>}
    
    reg dispatch_info : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}, clock @[Alu.scala 19:34]
    dispatch_info.predict_taken <= io.dispatch_info.bits.predict_taken @[Alu.scala 20:17]
    dispatch_info.imm_data <= io.dispatch_info.bits.imm_data @[Alu.scala 20:17]
    dispatch_info.op2_data <= io.dispatch_info.bits.op2_data @[Alu.scala 20:17]
    dispatch_info.op1_data <= io.dispatch_info.bits.op1_data @[Alu.scala 20:17]
    dispatch_info.inst_addr <= io.dispatch_info.bits.inst_addr @[Alu.scala 20:17]
    dispatch_info.rob_idx <= io.dispatch_info.bits.rob_idx @[Alu.scala 20:17]
    dispatch_info.need_imm <= io.dispatch_info.bits.need_imm @[Alu.scala 20:17]
    dispatch_info.uop <= io.dispatch_info.bits.uop @[Alu.scala 20:17]
    reg dispatch_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Alu.scala 21:38]
    dispatch_valid <= io.dispatch_info.valid @[Alu.scala 22:17]
    io.dispatch_info.ready <= UInt<1>("h01") @[Alu.scala 23:25]
    node op2_data = mux(dispatch_info.need_imm, dispatch_info.imm_data, dispatch_info.op2_data) @[Alu.scala 27:24]
    wire result_data : UInt<32> @[Alu.scala 28:25]
    result_data <= UInt<1>("h00") @[Alu.scala 30:15]
    node _T = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _result_data_T = add(dispatch_info.op1_data, op2_data) @[Alu.scala 33:31]
      node _result_data_T_1 = tail(_result_data_T, 1) @[Alu.scala 33:31]
      result_data <= _result_data_T_1 @[Alu.scala 33:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        node _result_data_T_2 = add(dispatch_info.op1_data, op2_data) @[Alu.scala 36:31]
        node _result_data_T_3 = tail(_result_data_T_2, 1) @[Alu.scala 36:31]
        result_data <= _result_data_T_3 @[Alu.scala 36:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h03")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _result_data_T_4 = sub(dispatch_info.op1_data, op2_data) @[Alu.scala 39:31]
          node _result_data_T_5 = tail(_result_data_T_4, 1) @[Alu.scala 39:31]
          result_data <= _result_data_T_5 @[Alu.scala 39:19]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = asUInt(UInt<3>("h04")) @[Conditional.scala 37:23]
          node _T_10 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
          node _T_11 = eq(_T_9, _T_10) @[Conditional.scala 37:30]
          when _T_11 : @[Conditional.scala 39:67]
            node _result_data_T_6 = sub(dispatch_info.op1_data, op2_data) @[Alu.scala 42:31]
            node _result_data_T_7 = tail(_result_data_T_6, 1) @[Alu.scala 42:31]
            result_data <= _result_data_T_7 @[Alu.scala 42:19]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = asUInt(UInt<3>("h05")) @[Conditional.scala 37:23]
            node _T_13 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
            node _T_14 = eq(_T_12, _T_13) @[Conditional.scala 37:30]
            when _T_14 : @[Conditional.scala 39:67]
              node _result_data_T_8 = bits(op2_data, 4, 0) @[Alu.scala 45:51]
              node _result_data_T_9 = dshl(dispatch_info.op1_data, _result_data_T_8) @[Alu.scala 45:40]
              result_data <= _result_data_T_9 @[Alu.scala 45:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_15 = asUInt(UInt<3>("h06")) @[Conditional.scala 37:23]
              node _T_16 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
              node _T_17 = eq(_T_15, _T_16) @[Conditional.scala 37:30]
              when _T_17 : @[Conditional.scala 39:67]
                node _result_data_T_10 = bits(op2_data, 4, 0) @[Alu.scala 48:52]
                node _result_data_T_11 = dshr(dispatch_info.op1_data, _result_data_T_10) @[Alu.scala 48:41]
                result_data <= _result_data_T_11 @[Alu.scala 48:19]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_18 = asUInt(UInt<3>("h07")) @[Conditional.scala 37:23]
                node _T_19 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                node _T_20 = eq(_T_18, _T_19) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node _result_data_T_12 = asSInt(dispatch_info.op1_data) @[Alu.scala 51:38]
                  node _result_data_T_13 = dshr(_result_data_T_12, op2_data) @[Alu.scala 51:41]
                  node _result_data_T_14 = asUInt(_result_data_T_13) @[Alu.scala 51:60]
                  result_data <= _result_data_T_14 @[Alu.scala 51:19]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_21 = asUInt(UInt<4>("h08")) @[Conditional.scala 37:23]
                  node _T_22 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                  node _T_23 = eq(_T_21, _T_22) @[Conditional.scala 37:30]
                  when _T_23 : @[Conditional.scala 39:67]
                    node _result_data_T_15 = asSInt(dispatch_info.op1_data) @[Alu.scala 54:38]
                    node _result_data_T_16 = asSInt(op2_data) @[Alu.scala 54:58]
                    node _result_data_T_17 = lt(_result_data_T_15, _result_data_T_16) @[Alu.scala 54:41]
                    result_data <= _result_data_T_17 @[Alu.scala 54:19]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_24 = asUInt(UInt<4>("h09")) @[Conditional.scala 37:23]
                    node _T_25 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                    node _T_26 = eq(_T_24, _T_25) @[Conditional.scala 37:30]
                    when _T_26 : @[Conditional.scala 39:67]
                      node _result_data_T_18 = lt(dispatch_info.op1_data, op2_data) @[Alu.scala 57:40]
                      result_data <= _result_data_T_18 @[Alu.scala 57:19]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = asUInt(UInt<4>("h0a")) @[Conditional.scala 37:23]
                      node _T_28 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                      node _T_29 = eq(_T_27, _T_28) @[Conditional.scala 37:30]
                      when _T_29 : @[Conditional.scala 39:67]
                        node _result_data_T_19 = xor(dispatch_info.op1_data, op2_data) @[Alu.scala 60:31]
                        result_data <= _result_data_T_19 @[Alu.scala 60:19]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_30 = asUInt(UInt<4>("h0b")) @[Conditional.scala 37:23]
                        node _T_31 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                        node _T_32 = eq(_T_30, _T_31) @[Conditional.scala 37:30]
                        when _T_32 : @[Conditional.scala 39:67]
                          node _result_data_T_20 = or(dispatch_info.op1_data, op2_data) @[Alu.scala 63:31]
                          result_data <= _result_data_T_20 @[Alu.scala 63:19]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_33 = asUInt(UInt<4>("h0c")) @[Conditional.scala 37:23]
                          node _T_34 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                          node _T_35 = eq(_T_33, _T_34) @[Conditional.scala 37:30]
                          when _T_35 : @[Conditional.scala 39:67]
                            node _result_data_T_21 = and(dispatch_info.op1_data, op2_data) @[Alu.scala 66:31]
                            result_data <= _result_data_T_21 @[Alu.scala 66:19]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_36 = asUInt(UInt<4>("h0d")) @[Conditional.scala 37:23]
                            node _T_37 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                            node _T_38 = eq(_T_36, _T_37) @[Conditional.scala 37:30]
                            when _T_38 : @[Conditional.scala 39:67]
                              node result_data_hi = bits(op2_data, 15, 0) @[Alu.scala 69:34]
                              node _result_data_T_22 = cat(result_data_hi, UInt<16>("h00")) @[Cat.scala 30:58]
                              result_data <= _result_data_T_22 @[Alu.scala 69:19]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_39 = asUInt(UInt<4>("h0e")) @[Conditional.scala 37:23]
                              node _T_40 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                              node _T_41 = eq(_T_39, _T_40) @[Conditional.scala 37:30]
                              when _T_41 : @[Conditional.scala 39:67]
                                node _result_data_T_23 = or(dispatch_info.op1_data, op2_data) @[Alu.scala 72:32]
                                node _result_data_T_24 = not(_result_data_T_23) @[Alu.scala 72:44]
                                result_data <= _result_data_T_24 @[Alu.scala 72:19]
                                skip @[Conditional.scala 39:67]
    reg wb_info : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}, clock @[Alu.scala 75:26]
    reg wb_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Alu.scala 76:36]
    io.wb_info.bits.data <= result_data @[Alu.scala 87:23]
    io.wb_info.bits.rob_idx <= dispatch_info.rob_idx @[Alu.scala 88:26]
    io.wb_info.bits.is_taken <= UInt<1>("h00") @[Alu.scala 89:27]
    io.wb_info.bits.target_addr <= UInt<1>("h00") @[Alu.scala 90:30]
    io.wb_info.bits.predict_miss <= UInt<1>("h00") @[Alu.scala 91:31]
    io.wb_info.valid <= dispatch_valid @[Alu.scala 92:19]
    when io.need_flush : @[Alu.scala 95:22]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      dispatch_valid <= UInt<1>("h00") @[Alu.scala 97:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      wb_info_valid <= UInt<1>("h00") @[Alu.scala 99:18]
      skip @[Alu.scala 95:22]
    node _T_42 = asUInt(reset) @[Alu.scala 102:20]
    when _T_42 : @[Alu.scala 102:23]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      skip @[Alu.scala 102:23]
    
  module Bju : 
    input clock : Clock
    input reset : Reset
    output io : {flip dispatch_info : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}, wb_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip need_flush : UInt<1>}
    
    reg dispatch_info : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}, clock @[Bju.scala 21:34]
    dispatch_info.predict_taken <= io.dispatch_info.bits.predict_taken @[Bju.scala 22:17]
    dispatch_info.imm_data <= io.dispatch_info.bits.imm_data @[Bju.scala 22:17]
    dispatch_info.op2_data <= io.dispatch_info.bits.op2_data @[Bju.scala 22:17]
    dispatch_info.op1_data <= io.dispatch_info.bits.op1_data @[Bju.scala 22:17]
    dispatch_info.inst_addr <= io.dispatch_info.bits.inst_addr @[Bju.scala 22:17]
    dispatch_info.rob_idx <= io.dispatch_info.bits.rob_idx @[Bju.scala 22:17]
    dispatch_info.need_imm <= io.dispatch_info.bits.need_imm @[Bju.scala 22:17]
    dispatch_info.uop <= io.dispatch_info.bits.uop @[Bju.scala 22:17]
    reg dispatch_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Bju.scala 23:38]
    dispatch_valid <= io.dispatch_info.valid @[Bju.scala 24:17]
    io.dispatch_info.ready <= UInt<1>("h01") @[Bju.scala 25:25]
    wire target_addr : UInt<32> @[Bju.scala 27:25]
    node _next_addr_T = add(dispatch_info.inst_addr, UInt<32>("h08")) @[Bju.scala 28:42]
    node next_addr = tail(_next_addr_T, 1) @[Bju.scala 28:42]
    node _branch_addr_T = asSInt(dispatch_info.inst_addr) @[Bju.scala 29:52]
    node branch_addr_hi = bits(dispatch_info.imm_data, 29, 0) @[Bju.scala 29:81]
    node _branch_addr_T_1 = cat(branch_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    node _branch_addr_T_2 = asSInt(_branch_addr_T_1) @[Bju.scala 29:105]
    node _branch_addr_T_3 = add(_branch_addr_T, _branch_addr_T_2) @[Bju.scala 29:54]
    node _branch_addr_T_4 = tail(_branch_addr_T_3, 1) @[Bju.scala 29:54]
    node _branch_addr_T_5 = asSInt(_branch_addr_T_4) @[Bju.scala 29:54]
    node _branch_addr_T_6 = add(_branch_addr_T_5, asSInt(UInt<32>("h04"))) @[Bju.scala 29:107]
    node _branch_addr_T_7 = tail(_branch_addr_T_6, 1) @[Bju.scala 29:107]
    node _branch_addr_T_8 = asSInt(_branch_addr_T_7) @[Bju.scala 29:107]
    node branch_addr = asUInt(_branch_addr_T_8) @[Bju.scala 29:125]
    node jump_addr_hi_hi = bits(dispatch_info.inst_addr, 31, 28) @[Bju.scala 30:46]
    node jump_addr_hi_lo = bits(dispatch_info.imm_data, 25, 0) @[Bju.scala 30:76]
    node jump_addr_hi = cat(jump_addr_hi_hi, jump_addr_hi_lo) @[Cat.scala 30:58]
    node jump_addr = cat(jump_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    wire is_taken : UInt<1> @[Bju.scala 31:22]
    node eq = eq(dispatch_info.op1_data, dispatch_info.op2_data) @[Bju.scala 33:32]
    node ez = eq(dispatch_info.op1_data, UInt<32>("h00")) @[Bju.scala 34:34]
    node _ltz_T = asSInt(dispatch_info.op1_data) @[Bju.scala 35:40]
    node ltz = lt(_ltz_T, asSInt(UInt<32>("h00"))) @[Bju.scala 35:42]
    io.wb_info.bits.predict_miss is invalid @[Bju.scala 37:18]
    io.wb_info.bits.is_taken is invalid @[Bju.scala 37:18]
    io.wb_info.bits.target_addr is invalid @[Bju.scala 37:18]
    io.wb_info.bits.data is invalid @[Bju.scala 37:18]
    io.wb_info.bits.rob_idx is invalid @[Bju.scala 37:18]
    is_taken <= UInt<1>("h00") @[Bju.scala 39:11]
    target_addr <= UInt<32>("h00") @[Bju.scala 40:14]
    node _T = asUInt(UInt<5>("h018")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      is_taken <= UInt<1>("h01") @[Bju.scala 43:15]
      target_addr <= jump_addr @[Bju.scala 44:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<5>("h019")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        is_taken <= UInt<1>("h01") @[Bju.scala 47:15]
        target_addr <= jump_addr @[Bju.scala 48:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<5>("h01a")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          is_taken <= UInt<1>("h01") @[Bju.scala 51:15]
          target_addr <= dispatch_info.op1_data @[Bju.scala 52:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = asUInt(UInt<5>("h01b")) @[Conditional.scala 37:23]
          node _T_10 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
          node _T_11 = eq(_T_9, _T_10) @[Conditional.scala 37:30]
          when _T_11 : @[Conditional.scala 39:67]
            is_taken <= UInt<1>("h01") @[Bju.scala 55:15]
            target_addr <= dispatch_info.op1_data @[Bju.scala 56:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = asUInt(UInt<5>("h01c")) @[Conditional.scala 37:23]
            node _T_13 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
            node _T_14 = eq(_T_12, _T_13) @[Conditional.scala 37:30]
            when _T_14 : @[Conditional.scala 39:67]
              is_taken <= eq @[Bju.scala 59:15]
              target_addr <= branch_addr @[Bju.scala 60:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_15 = asUInt(UInt<5>("h01d")) @[Conditional.scala 37:23]
              node _T_16 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
              node _T_17 = eq(_T_15, _T_16) @[Conditional.scala 37:30]
              when _T_17 : @[Conditional.scala 39:67]
                node _is_taken_T = eq(eq, UInt<1>("h00")) @[Bju.scala 63:18]
                is_taken <= _is_taken_T @[Bju.scala 63:15]
                target_addr <= branch_addr @[Bju.scala 64:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_18 = asUInt(UInt<5>("h01e")) @[Conditional.scala 37:23]
                node _T_19 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                node _T_20 = eq(_T_18, _T_19) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node _is_taken_T_1 = or(ltz, ez) @[Bju.scala 67:21]
                  is_taken <= _is_taken_T_1 @[Bju.scala 67:15]
                  target_addr <= branch_addr @[Bju.scala 68:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_21 = asUInt(UInt<5>("h01f")) @[Conditional.scala 37:23]
                  node _T_22 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                  node _T_23 = eq(_T_21, _T_22) @[Conditional.scala 37:30]
                  when _T_23 : @[Conditional.scala 39:67]
                    node _is_taken_T_2 = eq(ltz, UInt<1>("h00")) @[Bju.scala 71:18]
                    node _is_taken_T_3 = eq(ez, UInt<1>("h00")) @[Bju.scala 71:26]
                    node _is_taken_T_4 = and(_is_taken_T_2, _is_taken_T_3) @[Bju.scala 71:23]
                    is_taken <= _is_taken_T_4 @[Bju.scala 71:15]
                    target_addr <= branch_addr @[Bju.scala 72:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_24 = asUInt(UInt<6>("h020")) @[Conditional.scala 37:23]
                    node _T_25 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                    node _T_26 = eq(_T_24, _T_25) @[Conditional.scala 37:30]
                    when _T_26 : @[Conditional.scala 39:67]
                      is_taken <= ltz @[Bju.scala 75:15]
                      target_addr <= branch_addr @[Bju.scala 76:18]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = asUInt(UInt<6>("h021")) @[Conditional.scala 37:23]
                      node _T_28 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                      node _T_29 = eq(_T_27, _T_28) @[Conditional.scala 37:30]
                      when _T_29 : @[Conditional.scala 39:67]
                        node _is_taken_T_5 = eq(ltz, UInt<1>("h00")) @[Bju.scala 79:18]
                        is_taken <= _is_taken_T_5 @[Bju.scala 79:15]
                        target_addr <= branch_addr @[Bju.scala 80:18]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_30 = asUInt(UInt<6>("h022")) @[Conditional.scala 37:23]
                        node _T_31 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                        node _T_32 = eq(_T_30, _T_31) @[Conditional.scala 37:30]
                        when _T_32 : @[Conditional.scala 39:67]
                          node _is_taken_T_6 = eq(ltz, UInt<1>("h00")) @[Bju.scala 83:18]
                          node _is_taken_T_7 = eq(ez, UInt<1>("h00")) @[Bju.scala 83:26]
                          node _is_taken_T_8 = and(_is_taken_T_6, _is_taken_T_7) @[Bju.scala 83:23]
                          is_taken <= _is_taken_T_8 @[Bju.scala 83:15]
                          target_addr <= branch_addr @[Bju.scala 84:18]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_33 = asUInt(UInt<6>("h023")) @[Conditional.scala 37:23]
                          node _T_34 = asUInt(dispatch_info.uop) @[Conditional.scala 37:39]
                          node _T_35 = eq(_T_33, _T_34) @[Conditional.scala 37:30]
                          when _T_35 : @[Conditional.scala 39:67]
                            is_taken <= ltz @[Bju.scala 87:15]
                            target_addr <= branch_addr @[Bju.scala 88:18]
                            skip @[Conditional.scala 39:67]
    io.wb_info.valid <= dispatch_valid @[Bju.scala 94:19]
    io.wb_info.bits.is_taken <= is_taken @[Bju.scala 95:27]
    node _io_wb_info_bits_target_addr_T = eq(is_taken, UInt<1>("h00")) @[Bju.scala 96:37]
    node _io_wb_info_bits_target_addr_T_1 = and(_io_wb_info_bits_target_addr_T, dispatch_info.predict_taken) @[Bju.scala 96:46]
    node _io_wb_info_bits_target_addr_T_2 = mux(_io_wb_info_bits_target_addr_T_1, next_addr, target_addr) @[Bju.scala 96:35]
    io.wb_info.bits.target_addr <= _io_wb_info_bits_target_addr_T_2 @[Bju.scala 96:30]
    io.wb_info.bits.rob_idx <= dispatch_info.rob_idx @[Bju.scala 97:26]
    io.wb_info.bits.data <= next_addr @[Bju.scala 98:23]
    node _io_wb_info_bits_predict_miss_T = xor(is_taken, dispatch_info.predict_taken) @[Bju.scala 99:41]
    io.wb_info.bits.predict_miss <= _io_wb_info_bits_predict_miss_T @[Bju.scala 99:31]
    when io.need_flush : @[Bju.scala 101:22]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      dispatch_valid <= UInt<1>("h00") @[Bju.scala 103:19]
      skip @[Bju.scala 101:22]
    node _T_36 = asUInt(reset) @[Bju.scala 106:20]
    when _T_36 : @[Bju.scala 106:23]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      skip @[Bju.scala 106:23]
    
  module Lsu : 
    input clock : Clock
    input reset : Reset
    output io : {flip dispatch_info : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}, wb_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2], cache_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, cache_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}, flip cache_resp : {data : UInt<32>}, flip need_flush : UInt<1>}
    
    reg dispatch_info : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}, clock @[Lsu.scala 68:34]
    reg dispatch_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lsu.scala 69:38]
    reg write_buffer : {rob_idx : UInt<4>, addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}[4], clock @[Lsu.scala 70:34]
    wire _write_buffer_valid_WIRE : UInt<1>[4] @[Lsu.scala 71:46]
    _write_buffer_valid_WIRE[0] <= UInt<1>("h00") @[Lsu.scala 71:46]
    _write_buffer_valid_WIRE[1] <= UInt<1>("h00") @[Lsu.scala 71:46]
    _write_buffer_valid_WIRE[2] <= UInt<1>("h00") @[Lsu.scala 71:46]
    _write_buffer_valid_WIRE[3] <= UInt<1>("h00") @[Lsu.scala 71:46]
    reg write_buffer_valid : UInt<1>[4], clock with : (reset => (reset, _write_buffer_valid_WIRE)) @[Lsu.scala 71:38]
    wire _write_buffer_waiting_WIRE : UInt<1>[4] @[Lsu.scala 72:46]
    _write_buffer_waiting_WIRE[0] <= UInt<1>("h00") @[Lsu.scala 72:46]
    _write_buffer_waiting_WIRE[1] <= UInt<1>("h00") @[Lsu.scala 72:46]
    _write_buffer_waiting_WIRE[2] <= UInt<1>("h00") @[Lsu.scala 72:46]
    _write_buffer_waiting_WIRE[3] <= UInt<1>("h00") @[Lsu.scala 72:46]
    reg write_buffer_waiting : UInt<1>[4], clock with : (reset => (reset, _write_buffer_waiting_WIRE)) @[Lsu.scala 72:38]
    wire _write_buffer_complete_WIRE : UInt<1>[4] @[Lsu.scala 73:46]
    _write_buffer_complete_WIRE[0] <= UInt<1>("h00") @[Lsu.scala 73:46]
    _write_buffer_complete_WIRE[1] <= UInt<1>("h00") @[Lsu.scala 73:46]
    _write_buffer_complete_WIRE[2] <= UInt<1>("h00") @[Lsu.scala 73:46]
    _write_buffer_complete_WIRE[3] <= UInt<1>("h00") @[Lsu.scala 73:46]
    reg write_buffer_complete : UInt<1>[4], clock with : (reset => (reset, _write_buffer_complete_WIRE)) @[Lsu.scala 73:38]
    wire _write_buffer_uncache_WIRE : UInt<1>[4] @[Lsu.scala 74:46]
    _write_buffer_uncache_WIRE[0] <= UInt<1>("h00") @[Lsu.scala 74:46]
    _write_buffer_uncache_WIRE[1] <= UInt<1>("h00") @[Lsu.scala 74:46]
    _write_buffer_uncache_WIRE[2] <= UInt<1>("h00") @[Lsu.scala 74:46]
    _write_buffer_uncache_WIRE[3] <= UInt<1>("h00") @[Lsu.scala 74:46]
    reg write_buffer_uncache : UInt<1>[4], clock with : (reset => (reset, _write_buffer_uncache_WIRE)) @[Lsu.scala 74:38]
    reg complete_head : UInt<4>, clock with : (reset => (reset, UInt<4>("h01"))) @[Lsu.scala 75:38]
    reg tail : UInt<4>, clock with : (reset => (reset, UInt<4>("h01"))) @[Lsu.scala 76:38]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lsu.scala 77:38]
    node _full_T = eq(complete_head, tail) @[Lsu.scala 78:45]
    node full = and(_full_T, maybe_full) @[Lsu.scala 78:54]
    node _empty_T = eq(complete_head, tail) @[Lsu.scala 79:45]
    node _empty_T_1 = eq(maybe_full, UInt<1>("h00")) @[Lsu.scala 79:57]
    node empty = and(_empty_T, _empty_T_1) @[Lsu.scala 79:54]
    wire do_enq : UInt<1> @[Lsu.scala 80:35]
    wire do_deq : UInt<1> @[Lsu.scala 81:35]
    node _mem_addr_T = asSInt(dispatch_info.imm_data) @[Lsu.scala 82:61]
    node _mem_addr_T_1 = asSInt(dispatch_info.op1_data) @[Lsu.scala 82:95]
    node _mem_addr_T_2 = add(_mem_addr_T, _mem_addr_T_1) @[Lsu.scala 82:64]
    node _mem_addr_T_3 = tail(_mem_addr_T_2, 1) @[Lsu.scala 82:64]
    node _mem_addr_T_4 = asSInt(_mem_addr_T_3) @[Lsu.scala 82:64]
    node mem_addr = asUInt(_mem_addr_T_4) @[Lsu.scala 82:105]
    node _is_ld_T = asUInt(dispatch_info.uop) @[Lsu.scala 84:65]
    node _is_ld_T_1 = asUInt(UInt<6>("h02a")) @[Lsu.scala 86:23]
    node _is_ld_T_2 = asUInt(UInt<6>("h02b")) @[Lsu.scala 87:24]
    node _is_ld_T_3 = asUInt(UInt<6>("h028")) @[Lsu.scala 88:23]
    node _is_ld_T_4 = asUInt(UInt<6>("h029")) @[Lsu.scala 89:24]
    node _is_ld_T_5 = asUInt(UInt<6>("h027")) @[Lsu.scala 90:23]
    node _is_ld_T_6 = eq(_is_ld_T_1, _is_ld_T) @[Mux.scala 80:60]
    node _is_ld_T_7 = mux(_is_ld_T_6, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 80:57]
    node _is_ld_T_8 = eq(_is_ld_T_2, _is_ld_T) @[Mux.scala 80:60]
    node _is_ld_T_9 = mux(_is_ld_T_8, UInt<1>("h01"), _is_ld_T_7) @[Mux.scala 80:57]
    node _is_ld_T_10 = eq(_is_ld_T_3, _is_ld_T) @[Mux.scala 80:60]
    node _is_ld_T_11 = mux(_is_ld_T_10, UInt<1>("h01"), _is_ld_T_9) @[Mux.scala 80:57]
    node _is_ld_T_12 = eq(_is_ld_T_4, _is_ld_T) @[Mux.scala 80:60]
    node _is_ld_T_13 = mux(_is_ld_T_12, UInt<1>("h01"), _is_ld_T_11) @[Mux.scala 80:57]
    node _is_ld_T_14 = eq(_is_ld_T_5, _is_ld_T) @[Mux.scala 80:60]
    node is_ld = mux(_is_ld_T_14, UInt<1>("h01"), _is_ld_T_13) @[Mux.scala 80:57]
    node _is_st_T = asUInt(dispatch_info.uop) @[Lsu.scala 92:65]
    node _is_st_T_1 = asUInt(UInt<6>("h026")) @[Lsu.scala 94:23]
    node _is_st_T_2 = asUInt(UInt<6>("h025")) @[Lsu.scala 95:23]
    node _is_st_T_3 = asUInt(UInt<6>("h024")) @[Lsu.scala 96:23]
    node _is_st_T_4 = eq(_is_st_T_1, _is_st_T) @[Mux.scala 80:60]
    node _is_st_T_5 = mux(_is_st_T_4, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 80:57]
    node _is_st_T_6 = eq(_is_st_T_2, _is_st_T) @[Mux.scala 80:60]
    node _is_st_T_7 = mux(_is_st_T_6, UInt<1>("h01"), _is_st_T_5) @[Mux.scala 80:57]
    node _is_st_T_8 = eq(_is_st_T_3, _is_st_T) @[Mux.scala 80:60]
    node is_st = mux(_is_st_T_8, UInt<1>("h01"), _is_st_T_7) @[Mux.scala 80:57]
    node _is_unsigned_T = asUInt(dispatch_info.uop) @[Lsu.scala 98:65]
    node _is_unsigned_T_1 = asUInt(UInt<6>("h02b")) @[Lsu.scala 100:24]
    node _is_unsigned_T_2 = asUInt(UInt<6>("h029")) @[Lsu.scala 101:24]
    node _is_unsigned_T_3 = eq(_is_unsigned_T_1, _is_unsigned_T) @[Mux.scala 80:60]
    node _is_unsigned_T_4 = mux(_is_unsigned_T_3, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 80:57]
    node _is_unsigned_T_5 = eq(_is_unsigned_T_2, _is_unsigned_T) @[Mux.scala 80:60]
    node is_unsigned = mux(_is_unsigned_T_5, UInt<1>("h01"), _is_unsigned_T_4) @[Mux.scala 80:57]
    node _byte_mask_T = asUInt(dispatch_info.uop) @[Lsu.scala 103:65]
    node _byte_mask_T_1 = asUInt(UInt<6>("h02a")) @[Lsu.scala 105:23]
    node _byte_mask_T_2 = asUInt(UInt<6>("h02b")) @[Lsu.scala 106:24]
    node _byte_mask_T_3 = asUInt(UInt<6>("h028")) @[Lsu.scala 107:23]
    node _byte_mask_T_4 = asUInt(UInt<6>("h029")) @[Lsu.scala 108:24]
    node _byte_mask_T_5 = asUInt(UInt<6>("h027")) @[Lsu.scala 109:23]
    node _byte_mask_T_6 = asUInt(UInt<6>("h026")) @[Lsu.scala 110:23]
    node _byte_mask_T_7 = asUInt(UInt<6>("h025")) @[Lsu.scala 111:23]
    node _byte_mask_T_8 = asUInt(UInt<6>("h024")) @[Lsu.scala 112:23]
    node _byte_mask_T_9 = eq(_byte_mask_T_1, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_10 = mux(_byte_mask_T_9, UInt<4>("h01"), UInt<4>("h00")) @[Mux.scala 80:57]
    node _byte_mask_T_11 = eq(_byte_mask_T_2, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_12 = mux(_byte_mask_T_11, UInt<4>("h01"), _byte_mask_T_10) @[Mux.scala 80:57]
    node _byte_mask_T_13 = eq(_byte_mask_T_3, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_14 = mux(_byte_mask_T_13, UInt<4>("h03"), _byte_mask_T_12) @[Mux.scala 80:57]
    node _byte_mask_T_15 = eq(_byte_mask_T_4, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_16 = mux(_byte_mask_T_15, UInt<4>("h03"), _byte_mask_T_14) @[Mux.scala 80:57]
    node _byte_mask_T_17 = eq(_byte_mask_T_5, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_18 = mux(_byte_mask_T_17, UInt<4>("h0f"), _byte_mask_T_16) @[Mux.scala 80:57]
    node _byte_mask_T_19 = eq(_byte_mask_T_6, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_20 = mux(_byte_mask_T_19, UInt<4>("h01"), _byte_mask_T_18) @[Mux.scala 80:57]
    node _byte_mask_T_21 = eq(_byte_mask_T_7, _byte_mask_T) @[Mux.scala 80:60]
    node _byte_mask_T_22 = mux(_byte_mask_T_21, UInt<4>("h03"), _byte_mask_T_20) @[Mux.scala 80:57]
    node _byte_mask_T_23 = eq(_byte_mask_T_8, _byte_mask_T) @[Mux.scala 80:60]
    node byte_mask = mux(_byte_mask_T_23, UInt<4>("h0f"), _byte_mask_T_22) @[Mux.scala 80:57]
    node _is_uncache_T = bits(mem_addr, 31, 4) @[Lsu.scala 114:39]
    node is_uncache = eq(_is_uncache_T, UInt<28>("h0bfd003f")) @[Lsu.scala 114:47]
    io.wb_info.bits.predict_miss is invalid @[Lsu.scala 115:19]
    io.wb_info.bits.is_taken is invalid @[Lsu.scala 115:19]
    io.wb_info.bits.target_addr is invalid @[Lsu.scala 115:19]
    io.wb_info.bits.data is invalid @[Lsu.scala 115:19]
    io.wb_info.bits.rob_idx is invalid @[Lsu.scala 115:19]
    node _do_enq_T = eq(full, UInt<1>("h00")) @[Lsu.scala 118:13]
    node _do_enq_T_1 = and(_do_enq_T, is_st) @[Lsu.scala 118:19]
    node _do_enq_T_2 = and(_do_enq_T_1, dispatch_valid) @[Lsu.scala 118:28]
    node _do_enq_T_3 = eq(io.need_flush, UInt<1>("h00")) @[Lsu.scala 118:49]
    node _do_enq_T_4 = and(_do_enq_T_2, _do_enq_T_3) @[Lsu.scala 118:46]
    do_enq <= _do_enq_T_4 @[Lsu.scala 118:10]
    node enq_idx_hi = bits(tail, 3, 2) @[OneHot.scala 30:18]
    node enq_idx_lo = bits(tail, 1, 0) @[OneHot.scala 31:18]
    node enq_idx_hi_1 = orr(enq_idx_hi) @[OneHot.scala 32:14]
    node _enq_idx_T = or(enq_idx_hi, enq_idx_lo) @[OneHot.scala 32:28]
    node enq_idx_lo_1 = bits(_enq_idx_T, 1, 1) @[CircuitMath.scala 30:8]
    node enq_idx = cat(enq_idx_hi_1, enq_idx_lo_1) @[Cat.scala 30:58]
    when do_enq : @[Lsu.scala 120:16]
      write_buffer[enq_idx].rob_idx <= dispatch_info.rob_idx @[Lsu.scala 121:35]
      write_buffer[enq_idx].data <= dispatch_info.op2_data @[Lsu.scala 122:32]
      write_buffer[enq_idx].addr <= mem_addr @[Lsu.scala 123:32]
      write_buffer[enq_idx].byte_mask <= byte_mask @[Lsu.scala 124:37]
      write_buffer_valid[enq_idx] <= UInt<1>("h01") @[Lsu.scala 125:33]
      write_buffer_waiting[enq_idx] <= UInt<1>("h01") @[Lsu.scala 126:35]
      write_buffer_complete[enq_idx] <= UInt<1>("h00") @[Lsu.scala 127:36]
      write_buffer_uncache[enq_idx] <= is_uncache @[Lsu.scala 128:35]
      node tail_hi = bits(tail, 2, 0) @[Lsu.scala 60:12]
      node tail_lo = bits(tail, 3, 3) @[Lsu.scala 60:29]
      node _tail_T = cat(tail_hi, tail_lo) @[Cat.scala 30:58]
      tail <= _tail_T @[Lsu.scala 129:10]
      skip @[Lsu.scala 120:16]
    reg ready_deq_idxs_0 : UInt<4>, clock with : (reset => (reset, UInt<4>("h01"))) @[Lsu.scala 133:31]
    node ready_deq_idxs_hi = bits(ready_deq_idxs_0, 2, 0) @[Lsu.scala 60:12]
    node ready_deq_idxs_lo = bits(ready_deq_idxs_0, 3, 3) @[Lsu.scala 60:29]
    node ready_deq_idxs_1 = cat(ready_deq_idxs_hi, ready_deq_idxs_lo) @[Cat.scala 30:58]
    node ready_deq_idxs_hi_1 = bits(ready_deq_idxs_0, 1, 0) @[Lsu.scala 60:12]
    node ready_deq_idxs_lo_1 = bits(ready_deq_idxs_0, 3, 2) @[Lsu.scala 60:29]
    node ready_deq_idxs_2 = cat(ready_deq_idxs_hi_1, ready_deq_idxs_lo_1) @[Cat.scala 30:58]
    wire ready_valid : UInt<1>[2] @[Lsu.scala 135:31]
    ready_valid[0] <= UInt<1>("h00") @[Lsu.scala 135:31]
    ready_valid[1] <= UInt<1>("h00") @[Lsu.scala 135:31]
    wire will_complete : UInt<1>[4] @[Lsu.scala 136:30]
    will_complete[0] <= UInt<1>("h00") @[Lsu.scala 136:30]
    will_complete[1] <= UInt<1>("h00") @[Lsu.scala 136:30]
    will_complete[2] <= UInt<1>("h00") @[Lsu.scala 136:30]
    will_complete[3] <= UInt<1>("h00") @[Lsu.scala 136:30]
    node ready_idx_hi = bits(ready_deq_idxs_0, 3, 2) @[OneHot.scala 30:18]
    node ready_idx_lo = bits(ready_deq_idxs_0, 1, 0) @[OneHot.scala 31:18]
    node ready_idx_hi_1 = orr(ready_idx_hi) @[OneHot.scala 32:14]
    node _ready_idx_T = or(ready_idx_hi, ready_idx_lo) @[OneHot.scala 32:28]
    node ready_idx_lo_1 = bits(_ready_idx_T, 1, 1) @[CircuitMath.scala 30:8]
    node ready_idx = cat(ready_idx_hi_1, ready_idx_lo_1) @[Cat.scala 30:58]
    ready_valid[0] <= UInt<1>("h00") @[Lsu.scala 140:20]
    node _T = and(write_buffer_waiting[ready_idx], write_buffer_valid[ready_idx]) @[Lsu.scala 142:44]
    node _T_1 = and(_T, io.rob_commit[0].valid) @[Lsu.scala 142:76]
    node _T_2 = eq(io.rob_commit[0].bits.des_rob, write_buffer[ready_idx].rob_idx) @[Lsu.scala 142:135]
    node _T_3 = and(_T_1, _T_2) @[Lsu.scala 142:102]
    when _T_3 : @[Lsu.scala 142:172]
      write_buffer_complete[ready_idx] <= UInt<1>("h01") @[Lsu.scala 143:42]
      write_buffer_waiting[ready_idx] <= UInt<1>("h00") @[Lsu.scala 144:41]
      ready_valid[0] <= UInt<1>("h01") @[Lsu.scala 145:24]
      will_complete[ready_idx] <= UInt<1>("h01") @[Lsu.scala 146:33]
      skip @[Lsu.scala 142:172]
    node _T_4 = and(write_buffer_waiting[ready_idx], write_buffer_valid[ready_idx]) @[Lsu.scala 142:44]
    node _T_5 = and(_T_4, io.rob_commit[1].valid) @[Lsu.scala 142:76]
    node _T_6 = eq(io.rob_commit[1].bits.des_rob, write_buffer[ready_idx].rob_idx) @[Lsu.scala 142:135]
    node _T_7 = and(_T_5, _T_6) @[Lsu.scala 142:102]
    when _T_7 : @[Lsu.scala 142:172]
      write_buffer_complete[ready_idx] <= UInt<1>("h01") @[Lsu.scala 143:42]
      write_buffer_waiting[ready_idx] <= UInt<1>("h00") @[Lsu.scala 144:41]
      ready_valid[0] <= UInt<1>("h01") @[Lsu.scala 145:24]
      will_complete[ready_idx] <= UInt<1>("h01") @[Lsu.scala 146:33]
      skip @[Lsu.scala 142:172]
    node ready_idx_hi_2 = bits(ready_deq_idxs_1, 3, 2) @[OneHot.scala 30:18]
    node ready_idx_lo_2 = bits(ready_deq_idxs_1, 1, 0) @[OneHot.scala 31:18]
    node ready_idx_hi_3 = orr(ready_idx_hi_2) @[OneHot.scala 32:14]
    node _ready_idx_T_1 = or(ready_idx_hi_2, ready_idx_lo_2) @[OneHot.scala 32:28]
    node ready_idx_lo_3 = bits(_ready_idx_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node ready_idx_1 = cat(ready_idx_hi_3, ready_idx_lo_3) @[Cat.scala 30:58]
    ready_valid[1] <= UInt<1>("h00") @[Lsu.scala 140:20]
    node _T_8 = and(write_buffer_waiting[ready_idx_1], write_buffer_valid[ready_idx_1]) @[Lsu.scala 142:44]
    node _T_9 = and(_T_8, io.rob_commit[0].valid) @[Lsu.scala 142:76]
    node _T_10 = eq(io.rob_commit[0].bits.des_rob, write_buffer[ready_idx_1].rob_idx) @[Lsu.scala 142:135]
    node _T_11 = and(_T_9, _T_10) @[Lsu.scala 142:102]
    when _T_11 : @[Lsu.scala 142:172]
      write_buffer_complete[ready_idx_1] <= UInt<1>("h01") @[Lsu.scala 143:42]
      write_buffer_waiting[ready_idx_1] <= UInt<1>("h00") @[Lsu.scala 144:41]
      ready_valid[1] <= UInt<1>("h01") @[Lsu.scala 145:24]
      will_complete[ready_idx_1] <= UInt<1>("h01") @[Lsu.scala 146:33]
      skip @[Lsu.scala 142:172]
    node _T_12 = and(write_buffer_waiting[ready_idx_1], write_buffer_valid[ready_idx_1]) @[Lsu.scala 142:44]
    node _T_13 = and(_T_12, io.rob_commit[1].valid) @[Lsu.scala 142:76]
    node _T_14 = eq(io.rob_commit[1].bits.des_rob, write_buffer[ready_idx_1].rob_idx) @[Lsu.scala 142:135]
    node _T_15 = and(_T_13, _T_14) @[Lsu.scala 142:102]
    when _T_15 : @[Lsu.scala 142:172]
      write_buffer_complete[ready_idx_1] <= UInt<1>("h01") @[Lsu.scala 143:42]
      write_buffer_waiting[ready_idx_1] <= UInt<1>("h00") @[Lsu.scala 144:41]
      ready_valid[1] <= UInt<1>("h01") @[Lsu.scala 145:24]
      will_complete[ready_idx_1] <= UInt<1>("h01") @[Lsu.scala 146:33]
      skip @[Lsu.scala 142:172]
    node _T_16 = neq(ready_deq_idxs_0, tail) @[Lsu.scala 152:59]
    node _T_17 = and(ready_valid[0], _T_16) @[Lsu.scala 152:41]
    node _T_18 = mux(_T_17, ready_deq_idxs_1, ready_deq_idxs_0) @[Lsu.scala 152:26]
    node _T_19 = neq(_T_18, tail) @[Lsu.scala 152:59]
    node _T_20 = and(ready_valid[1], _T_19) @[Lsu.scala 152:41]
    node next_ready_head = mux(_T_20, ready_deq_idxs_2, _T_18) @[Lsu.scala 152:26]
    ready_deq_idxs_0 <= next_ready_head @[Lsu.scala 154:14]
    node complete_head_idx_hi = bits(complete_head, 3, 2) @[OneHot.scala 30:18]
    node complete_head_idx_lo = bits(complete_head, 1, 0) @[OneHot.scala 31:18]
    node complete_head_idx_hi_1 = orr(complete_head_idx_hi) @[OneHot.scala 32:14]
    node _complete_head_idx_T = or(complete_head_idx_hi, complete_head_idx_lo) @[OneHot.scala 32:28]
    node complete_head_idx_lo_1 = bits(_complete_head_idx_T, 1, 1) @[CircuitMath.scala 30:8]
    node complete_head_idx = cat(complete_head_idx_hi_1, complete_head_idx_lo_1) @[Cat.scala 30:58]
    do_deq <= io.cache_write.ready @[Lsu.scala 162:10]
    node _io_cache_write_valid_T = and(write_buffer_valid[complete_head_idx], write_buffer_complete[complete_head_idx]) @[Lsu.scala 163:47]
    io.cache_write.valid <= _io_cache_write_valid_T @[Lsu.scala 163:24]
    io.cache_write.bits.data <= write_buffer[complete_head_idx].data @[Lsu.scala 164:28]
    io.cache_write.bits.addr <= write_buffer[complete_head_idx].addr @[Lsu.scala 165:28]
    io.cache_write.bits.byte_mask <= write_buffer[complete_head_idx].byte_mask @[Lsu.scala 166:33]
    when do_deq : @[Lsu.scala 168:16]
      node complete_head_hi = bits(complete_head, 2, 0) @[Lsu.scala 60:12]
      node complete_head_lo = bits(complete_head, 3, 3) @[Lsu.scala 60:29]
      node _complete_head_T = cat(complete_head_hi, complete_head_lo) @[Cat.scala 30:58]
      complete_head <= _complete_head_T @[Lsu.scala 169:19]
      write_buffer_valid[complete_head_idx] <= UInt<1>("h00") @[Lsu.scala 170:43]
      skip @[Lsu.scala 168:16]
    when do_enq : @[Lsu.scala 173:16]
      maybe_full <= UInt<1>("h01") @[Lsu.scala 174:16]
      skip @[Lsu.scala 173:16]
    else : @[Lsu.scala 175:22]
      when do_deq : @[Lsu.scala 175:22]
        maybe_full <= UInt<1>("h00") @[Lsu.scala 176:16]
        skip @[Lsu.scala 175:22]
    node do_read = and(dispatch_valid, is_ld) @[Lsu.scala 179:40]
    node bypass_idxs_hi = bits(tail, 3, 2) @[OneHot.scala 30:18]
    node bypass_idxs_lo = bits(tail, 1, 0) @[OneHot.scala 31:18]
    node bypass_idxs_hi_1 = orr(bypass_idxs_hi) @[OneHot.scala 32:14]
    node _bypass_idxs_T = or(bypass_idxs_hi, bypass_idxs_lo) @[OneHot.scala 32:28]
    node bypass_idxs_lo_1 = bits(_bypass_idxs_T, 1, 1) @[CircuitMath.scala 30:8]
    node _bypass_idxs_T_1 = cat(bypass_idxs_hi_1, bypass_idxs_lo_1) @[Cat.scala 30:58]
    node bypass_idxs_hi_2 = bits(tail, 2, 0) @[Lsu.scala 60:12]
    node bypass_idxs_lo_2 = bits(tail, 3, 3) @[Lsu.scala 60:29]
    node _bypass_idxs_T_2 = cat(bypass_idxs_hi_2, bypass_idxs_lo_2) @[Cat.scala 30:58]
    node bypass_idxs_hi_3 = bits(_bypass_idxs_T_2, 3, 2) @[OneHot.scala 30:18]
    node bypass_idxs_lo_3 = bits(_bypass_idxs_T_2, 1, 0) @[OneHot.scala 31:18]
    node bypass_idxs_hi_4 = orr(bypass_idxs_hi_3) @[OneHot.scala 32:14]
    node _bypass_idxs_T_3 = or(bypass_idxs_hi_3, bypass_idxs_lo_3) @[OneHot.scala 32:28]
    node bypass_idxs_lo_4 = bits(_bypass_idxs_T_3, 1, 1) @[CircuitMath.scala 30:8]
    node _bypass_idxs_T_4 = cat(bypass_idxs_hi_4, bypass_idxs_lo_4) @[Cat.scala 30:58]
    node bypass_idxs_hi_5 = bits(tail, 1, 0) @[Lsu.scala 60:12]
    node bypass_idxs_lo_5 = bits(tail, 3, 2) @[Lsu.scala 60:29]
    node _bypass_idxs_T_5 = cat(bypass_idxs_hi_5, bypass_idxs_lo_5) @[Cat.scala 30:58]
    node bypass_idxs_hi_6 = bits(_bypass_idxs_T_5, 3, 2) @[OneHot.scala 30:18]
    node bypass_idxs_lo_6 = bits(_bypass_idxs_T_5, 1, 0) @[OneHot.scala 31:18]
    node bypass_idxs_hi_7 = orr(bypass_idxs_hi_6) @[OneHot.scala 32:14]
    node _bypass_idxs_T_6 = or(bypass_idxs_hi_6, bypass_idxs_lo_6) @[OneHot.scala 32:28]
    node bypass_idxs_lo_7 = bits(_bypass_idxs_T_6, 1, 1) @[CircuitMath.scala 30:8]
    node _bypass_idxs_T_7 = cat(bypass_idxs_hi_7, bypass_idxs_lo_7) @[Cat.scala 30:58]
    node bypass_idxs_hi_8 = bits(tail, 0, 0) @[Lsu.scala 60:12]
    node bypass_idxs_lo_8 = bits(tail, 3, 1) @[Lsu.scala 60:29]
    node _bypass_idxs_T_8 = cat(bypass_idxs_hi_8, bypass_idxs_lo_8) @[Cat.scala 30:58]
    node bypass_idxs_hi_9 = bits(_bypass_idxs_T_8, 3, 2) @[OneHot.scala 30:18]
    node bypass_idxs_lo_9 = bits(_bypass_idxs_T_8, 1, 0) @[OneHot.scala 31:18]
    node bypass_idxs_hi_10 = orr(bypass_idxs_hi_9) @[OneHot.scala 32:14]
    node _bypass_idxs_T_9 = or(bypass_idxs_hi_9, bypass_idxs_lo_9) @[OneHot.scala 32:28]
    node bypass_idxs_lo_10 = bits(_bypass_idxs_T_9, 1, 1) @[CircuitMath.scala 30:8]
    node _bypass_idxs_T_10 = cat(bypass_idxs_hi_10, bypass_idxs_lo_10) @[Cat.scala 30:58]
    wire bypass_idxs : UInt<2>[4] @[Lsu.scala 180:32]
    bypass_idxs[0] <= _bypass_idxs_T_10 @[Lsu.scala 180:32]
    bypass_idxs[1] <= _bypass_idxs_T_7 @[Lsu.scala 180:32]
    bypass_idxs[2] <= _bypass_idxs_T_4 @[Lsu.scala 180:32]
    bypass_idxs[3] <= _bypass_idxs_T_1 @[Lsu.scala 180:32]
    node _hit_buffer_mask_T = eq(write_buffer[bypass_idxs[0]].addr, mem_addr) @[Lsu.scala 181:67]
    node _hit_buffer_mask_T_1 = eq(write_buffer_uncache[bypass_idxs[0]], UInt<1>("h00")) @[Lsu.scala 181:137]
    node _hit_buffer_mask_T_2 = and(write_buffer_complete[bypass_idxs[0]], _hit_buffer_mask_T_1) @[Lsu.scala 181:134]
    node _hit_buffer_mask_T_3 = or(write_buffer_valid[bypass_idxs[0]], _hit_buffer_mask_T_2) @[Lsu.scala 181:106]
    node hit_buffer_mask_0 = and(_hit_buffer_mask_T, _hit_buffer_mask_T_3) @[Lsu.scala 181:80]
    node _hit_buffer_mask_T_4 = eq(write_buffer[bypass_idxs[1]].addr, mem_addr) @[Lsu.scala 181:67]
    node _hit_buffer_mask_T_5 = eq(write_buffer_uncache[bypass_idxs[1]], UInt<1>("h00")) @[Lsu.scala 181:137]
    node _hit_buffer_mask_T_6 = and(write_buffer_complete[bypass_idxs[1]], _hit_buffer_mask_T_5) @[Lsu.scala 181:134]
    node _hit_buffer_mask_T_7 = or(write_buffer_valid[bypass_idxs[1]], _hit_buffer_mask_T_6) @[Lsu.scala 181:106]
    node hit_buffer_mask_1 = and(_hit_buffer_mask_T_4, _hit_buffer_mask_T_7) @[Lsu.scala 181:80]
    node _hit_buffer_mask_T_8 = eq(write_buffer[bypass_idxs[2]].addr, mem_addr) @[Lsu.scala 181:67]
    node _hit_buffer_mask_T_9 = eq(write_buffer_uncache[bypass_idxs[2]], UInt<1>("h00")) @[Lsu.scala 181:137]
    node _hit_buffer_mask_T_10 = and(write_buffer_complete[bypass_idxs[2]], _hit_buffer_mask_T_9) @[Lsu.scala 181:134]
    node _hit_buffer_mask_T_11 = or(write_buffer_valid[bypass_idxs[2]], _hit_buffer_mask_T_10) @[Lsu.scala 181:106]
    node hit_buffer_mask_2 = and(_hit_buffer_mask_T_8, _hit_buffer_mask_T_11) @[Lsu.scala 181:80]
    node _hit_buffer_mask_T_12 = eq(write_buffer[bypass_idxs[3]].addr, mem_addr) @[Lsu.scala 181:67]
    node _hit_buffer_mask_T_13 = eq(write_buffer_uncache[bypass_idxs[3]], UInt<1>("h00")) @[Lsu.scala 181:137]
    node _hit_buffer_mask_T_14 = and(write_buffer_complete[bypass_idxs[3]], _hit_buffer_mask_T_13) @[Lsu.scala 181:134]
    node _hit_buffer_mask_T_15 = or(write_buffer_valid[bypass_idxs[3]], _hit_buffer_mask_T_14) @[Lsu.scala 181:106]
    node hit_buffer_mask_3 = and(_hit_buffer_mask_T_12, _hit_buffer_mask_T_15) @[Lsu.scala 181:80]
    node _hit_buffer_idx_T = mux(hit_buffer_mask_2, UInt<2>("h02"), UInt<2>("h03")) @[Mux.scala 47:69]
    node _hit_buffer_idx_T_1 = mux(hit_buffer_mask_1, UInt<1>("h01"), _hit_buffer_idx_T) @[Mux.scala 47:69]
    node _hit_buffer_idx_T_2 = mux(hit_buffer_mask_0, UInt<1>("h00"), _hit_buffer_idx_T_1) @[Mux.scala 47:69]
    node _hit_buffer_T = or(hit_buffer_mask_0, hit_buffer_mask_1) @[Lsu.scala 183:50]
    node _hit_buffer_T_1 = or(_hit_buffer_T, hit_buffer_mask_2) @[Lsu.scala 183:50]
    node hit_buffer = or(_hit_buffer_T_1, hit_buffer_mask_3) @[Lsu.scala 183:50]
    node _op_complete_T = or(hit_buffer, io.cache_read.ready) @[Lsu.scala 186:58]
    node _op_complete_T_1 = and(do_read, _op_complete_T) @[Lsu.scala 186:43]
    node op_complete = or(do_enq, _op_complete_T_1) @[Lsu.scala 186:31]
    node load_data = mux(hit_buffer, write_buffer[bypass_idxs[_hit_buffer_idx_T_2]].data, io.cache_resp.data) @[Lsu.scala 187:27]
    node _load_byte_data_T = bits(mem_addr, 1, 0) @[Lsu.scala 188:61]
    node _load_byte_data_T_1 = eq(_load_byte_data_T, UInt<2>("h00")) @[Lsu.scala 188:68]
    node _load_byte_data_T_2 = bits(_load_byte_data_T_1, 0, 0) @[Bitwise.scala 72:15]
    node _load_byte_data_T_3 = mux(_load_byte_data_T_2, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _load_byte_data_T_4 = bits(load_data, 7, 0) @[Lsu.scala 188:93]
    node _load_byte_data_T_5 = and(_load_byte_data_T_3, _load_byte_data_T_4) @[Lsu.scala 188:82]
    node _load_byte_data_T_6 = bits(mem_addr, 1, 0) @[Lsu.scala 188:61]
    node _load_byte_data_T_7 = eq(_load_byte_data_T_6, UInt<2>("h01")) @[Lsu.scala 188:68]
    node _load_byte_data_T_8 = bits(_load_byte_data_T_7, 0, 0) @[Bitwise.scala 72:15]
    node _load_byte_data_T_9 = mux(_load_byte_data_T_8, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _load_byte_data_T_10 = bits(load_data, 15, 8) @[Lsu.scala 188:93]
    node _load_byte_data_T_11 = and(_load_byte_data_T_9, _load_byte_data_T_10) @[Lsu.scala 188:82]
    node _load_byte_data_T_12 = bits(mem_addr, 1, 0) @[Lsu.scala 188:61]
    node _load_byte_data_T_13 = eq(_load_byte_data_T_12, UInt<2>("h02")) @[Lsu.scala 188:68]
    node _load_byte_data_T_14 = bits(_load_byte_data_T_13, 0, 0) @[Bitwise.scala 72:15]
    node _load_byte_data_T_15 = mux(_load_byte_data_T_14, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _load_byte_data_T_16 = bits(load_data, 23, 16) @[Lsu.scala 188:93]
    node _load_byte_data_T_17 = and(_load_byte_data_T_15, _load_byte_data_T_16) @[Lsu.scala 188:82]
    node _load_byte_data_T_18 = bits(mem_addr, 1, 0) @[Lsu.scala 188:61]
    node _load_byte_data_T_19 = eq(_load_byte_data_T_18, UInt<2>("h03")) @[Lsu.scala 188:68]
    node _load_byte_data_T_20 = bits(_load_byte_data_T_19, 0, 0) @[Bitwise.scala 72:15]
    node _load_byte_data_T_21 = mux(_load_byte_data_T_20, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _load_byte_data_T_22 = bits(load_data, 31, 24) @[Lsu.scala 188:93]
    node _load_byte_data_T_23 = and(_load_byte_data_T_21, _load_byte_data_T_22) @[Lsu.scala 188:82]
    node _load_byte_data_T_24 = or(_load_byte_data_T_5, _load_byte_data_T_11) @[Lsu.scala 188:122]
    node _load_byte_data_T_25 = or(_load_byte_data_T_24, _load_byte_data_T_17) @[Lsu.scala 188:122]
    node load_byte_data = or(_load_byte_data_T_25, _load_byte_data_T_23) @[Lsu.scala 188:122]
    node _load_half_data_T = bits(mem_addr, 1, 1) @[Lsu.scala 189:62]
    node _load_half_data_T_1 = eq(_load_half_data_T, UInt<1>("h00")) @[Lsu.scala 189:66]
    node _load_half_data_T_2 = bits(_load_half_data_T_1, 0, 0) @[Bitwise.scala 72:15]
    node _load_half_data_T_3 = mux(_load_half_data_T_2, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _load_half_data_T_4 = bits(load_data, 15, 0) @[Lsu.scala 189:91]
    node _load_half_data_T_5 = and(_load_half_data_T_3, _load_half_data_T_4) @[Lsu.scala 189:80]
    node _load_half_data_T_6 = bits(mem_addr, 1, 1) @[Lsu.scala 189:62]
    node _load_half_data_T_7 = eq(_load_half_data_T_6, UInt<1>("h01")) @[Lsu.scala 189:66]
    node _load_half_data_T_8 = bits(_load_half_data_T_7, 0, 0) @[Bitwise.scala 72:15]
    node _load_half_data_T_9 = mux(_load_half_data_T_8, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _load_half_data_T_10 = bits(load_data, 31, 16) @[Lsu.scala 189:91]
    node _load_half_data_T_11 = and(_load_half_data_T_9, _load_half_data_T_10) @[Lsu.scala 189:80]
    node load_half_data = or(_load_half_data_T_5, _load_half_data_T_11) @[Lsu.scala 189:123]
    node _load_final_data_T = asUInt(dispatch_info.uop) @[Lsu.scala 191:59]
    node _load_final_data_T_1 = asUInt(UInt<6>("h02a")) @[Lsu.scala 193:23]
    node _load_final_data_T_2 = bits(load_byte_data, 7, 7) @[Lsu.scala 193:56]
    node _load_final_data_T_3 = bits(_load_final_data_T_2, 0, 0) @[Bitwise.scala 72:15]
    node load_final_data_hi = mux(_load_final_data_T_3, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _load_final_data_T_4 = cat(load_final_data_hi, load_byte_data) @[Cat.scala 30:58]
    node _load_final_data_T_5 = asUInt(UInt<6>("h02b")) @[Lsu.scala 194:24]
    node load_final_data_hi_1 = mux(UInt<1>("h00"), UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _load_final_data_T_6 = cat(load_final_data_hi_1, load_byte_data) @[Cat.scala 30:58]
    node _load_final_data_T_7 = asUInt(UInt<6>("h028")) @[Lsu.scala 195:23]
    node _load_final_data_T_8 = bits(load_half_data, 15, 15) @[Lsu.scala 195:56]
    node _load_final_data_T_9 = bits(_load_final_data_T_8, 0, 0) @[Bitwise.scala 72:15]
    node load_final_data_hi_2 = mux(_load_final_data_T_9, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _load_final_data_T_10 = cat(load_final_data_hi_2, load_half_data) @[Cat.scala 30:58]
    node _load_final_data_T_11 = asUInt(UInt<6>("h029")) @[Lsu.scala 196:24]
    node load_final_data_hi_3 = mux(UInt<1>("h00"), UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _load_final_data_T_12 = cat(load_final_data_hi_3, load_half_data) @[Cat.scala 30:58]
    node _load_final_data_T_13 = eq(_load_final_data_T_1, _load_final_data_T) @[Mux.scala 80:60]
    node _load_final_data_T_14 = mux(_load_final_data_T_13, _load_final_data_T_4, load_data) @[Mux.scala 80:57]
    node _load_final_data_T_15 = eq(_load_final_data_T_5, _load_final_data_T) @[Mux.scala 80:60]
    node _load_final_data_T_16 = mux(_load_final_data_T_15, _load_final_data_T_6, _load_final_data_T_14) @[Mux.scala 80:57]
    node _load_final_data_T_17 = eq(_load_final_data_T_7, _load_final_data_T) @[Mux.scala 80:60]
    node _load_final_data_T_18 = mux(_load_final_data_T_17, _load_final_data_T_10, _load_final_data_T_16) @[Mux.scala 80:57]
    node _load_final_data_T_19 = eq(_load_final_data_T_11, _load_final_data_T) @[Mux.scala 80:60]
    node load_final_data = mux(_load_final_data_T_19, _load_final_data_T_12, _load_final_data_T_18) @[Mux.scala 80:57]
    reg cache_read_bits : {addr : UInt<32>, rob_idx : UInt<4>}, clock @[Lsu.scala 199:28]
    reg cache_read_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lsu.scala 200:33]
    node _io_cache_read_valid_T = eq(hit_buffer, UInt<1>("h00")) @[Lsu.scala 207:25]
    node _io_cache_read_valid_T_1 = and(_io_cache_read_valid_T, do_read) @[Lsu.scala 207:37]
    io.cache_read.valid <= _io_cache_read_valid_T_1 @[Lsu.scala 207:22]
    io.cache_read.bits.addr <= mem_addr @[Lsu.scala 208:26]
    io.cache_read.bits.rob_idx <= dispatch_info.rob_idx @[Lsu.scala 209:30]
    node _io_dispatch_info_ready_T = eq(dispatch_valid, UInt<1>("h00")) @[Lsu.scala 212:29]
    node _io_dispatch_info_ready_T_1 = or(_io_dispatch_info_ready_T, op_complete) @[Lsu.scala 212:45]
    io.dispatch_info.ready <= _io_dispatch_info_ready_T_1 @[Lsu.scala 212:26]
    reg wb_info : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}, clock @[Lsu.scala 214:26]
    reg wb_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lsu.scala 215:36]
    io.wb_info.bits.data <= load_final_data @[Lsu.scala 226:23]
    io.wb_info.bits.rob_idx <= dispatch_info.rob_idx @[Lsu.scala 227:26]
    io.wb_info.bits.is_taken <= UInt<1>("h00") @[Lsu.scala 228:27]
    io.wb_info.bits.target_addr <= UInt<1>("h00") @[Lsu.scala 229:30]
    io.wb_info.bits.predict_miss <= UInt<1>("h00") @[Lsu.scala 230:31]
    node _io_wb_info_valid_T = and(op_complete, dispatch_valid) @[Lsu.scala 231:34]
    io.wb_info.valid <= _io_wb_info_valid_T @[Lsu.scala 231:19]
    node _T_21 = eq(dispatch_valid, UInt<1>("h00")) @[Lsu.scala 234:8]
    node _T_22 = or(_T_21, op_complete) @[Lsu.scala 234:24]
    when _T_22 : @[Lsu.scala 234:40]
      dispatch_info.predict_taken <= io.dispatch_info.bits.predict_taken @[Lsu.scala 235:19]
      dispatch_info.imm_data <= io.dispatch_info.bits.imm_data @[Lsu.scala 235:19]
      dispatch_info.op2_data <= io.dispatch_info.bits.op2_data @[Lsu.scala 235:19]
      dispatch_info.op1_data <= io.dispatch_info.bits.op1_data @[Lsu.scala 235:19]
      dispatch_info.inst_addr <= io.dispatch_info.bits.inst_addr @[Lsu.scala 235:19]
      dispatch_info.rob_idx <= io.dispatch_info.bits.rob_idx @[Lsu.scala 235:19]
      dispatch_info.need_imm <= io.dispatch_info.bits.need_imm @[Lsu.scala 235:19]
      dispatch_info.uop <= io.dispatch_info.bits.uop @[Lsu.scala 235:19]
      dispatch_valid <= io.dispatch_info.valid @[Lsu.scala 236:20]
      skip @[Lsu.scala 234:40]
    when io.need_flush : @[Lsu.scala 238:23]
      node _T_23 = eq(write_buffer_complete[0], UInt<1>("h00")) @[Lsu.scala 240:12]
      node _T_24 = eq(will_complete[0], UInt<1>("h00")) @[Lsu.scala 240:41]
      node _T_25 = and(_T_23, _T_24) @[Lsu.scala 240:38]
      when _T_25 : @[Lsu.scala 240:60]
        write_buffer_valid[0] <= UInt<1>("h00") @[Lsu.scala 241:31]
        write_buffer_waiting[0] <= UInt<1>("h00") @[Lsu.scala 242:33]
        skip @[Lsu.scala 240:60]
      node _T_26 = eq(write_buffer_complete[1], UInt<1>("h00")) @[Lsu.scala 240:12]
      node _T_27 = eq(will_complete[1], UInt<1>("h00")) @[Lsu.scala 240:41]
      node _T_28 = and(_T_26, _T_27) @[Lsu.scala 240:38]
      when _T_28 : @[Lsu.scala 240:60]
        write_buffer_valid[1] <= UInt<1>("h00") @[Lsu.scala 241:31]
        write_buffer_waiting[1] <= UInt<1>("h00") @[Lsu.scala 242:33]
        skip @[Lsu.scala 240:60]
      node _T_29 = eq(write_buffer_complete[2], UInt<1>("h00")) @[Lsu.scala 240:12]
      node _T_30 = eq(will_complete[2], UInt<1>("h00")) @[Lsu.scala 240:41]
      node _T_31 = and(_T_29, _T_30) @[Lsu.scala 240:38]
      when _T_31 : @[Lsu.scala 240:60]
        write_buffer_valid[2] <= UInt<1>("h00") @[Lsu.scala 241:31]
        write_buffer_waiting[2] <= UInt<1>("h00") @[Lsu.scala 242:33]
        skip @[Lsu.scala 240:60]
      node _T_32 = eq(write_buffer_complete[3], UInt<1>("h00")) @[Lsu.scala 240:12]
      node _T_33 = eq(will_complete[3], UInt<1>("h00")) @[Lsu.scala 240:41]
      node _T_34 = and(_T_32, _T_33) @[Lsu.scala 240:38]
      when _T_34 : @[Lsu.scala 240:60]
        write_buffer_valid[3] <= UInt<1>("h00") @[Lsu.scala 241:31]
        write_buffer_waiting[3] <= UInt<1>("h00") @[Lsu.scala 242:33]
        skip @[Lsu.scala 240:60]
      tail <= next_ready_head @[Lsu.scala 245:10]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      dispatch_valid <= UInt<1>("h00") @[Lsu.scala 247:20]
      maybe_full <= UInt<1>("h00") @[Lsu.scala 248:16]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      wb_info_valid <= UInt<1>("h00") @[Lsu.scala 250:18]
      cache_read_bits.addr <= UInt<32>("h00") @[Lsu.scala 16:10]
      cache_read_bits.rob_idx <= UInt<4>("h00") @[Lsu.scala 17:13]
      cache_read_valid <= UInt<1>("h00") @[Lsu.scala 252:21]
      skip @[Lsu.scala 238:23]
    node _T_35 = asUInt(reset) @[Lsu.scala 255:20]
    when _T_35 : @[Lsu.scala 255:23]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      write_buffer[0].rob_idx <= UInt<4>("h00") @[Lsu.scala 38:15]
      write_buffer[0].addr <= UInt<32>("h00") @[Lsu.scala 39:15]
      write_buffer[0].data <= UInt<32>("h00") @[Lsu.scala 40:15]
      write_buffer[0].byte_mask <= UInt<4>("h00") @[Lsu.scala 41:15]
      write_buffer[1].rob_idx <= UInt<4>("h00") @[Lsu.scala 38:15]
      write_buffer[1].addr <= UInt<32>("h00") @[Lsu.scala 39:15]
      write_buffer[1].data <= UInt<32>("h00") @[Lsu.scala 40:15]
      write_buffer[1].byte_mask <= UInt<4>("h00") @[Lsu.scala 41:15]
      write_buffer[2].rob_idx <= UInt<4>("h00") @[Lsu.scala 38:15]
      write_buffer[2].addr <= UInt<32>("h00") @[Lsu.scala 39:15]
      write_buffer[2].data <= UInt<32>("h00") @[Lsu.scala 40:15]
      write_buffer[2].byte_mask <= UInt<4>("h00") @[Lsu.scala 41:15]
      write_buffer[3].rob_idx <= UInt<4>("h00") @[Lsu.scala 38:15]
      write_buffer[3].addr <= UInt<32>("h00") @[Lsu.scala 39:15]
      write_buffer[3].data <= UInt<32>("h00") @[Lsu.scala 40:15]
      write_buffer[3].byte_mask <= UInt<4>("h00") @[Lsu.scala 41:15]
      cache_read_bits.addr <= UInt<32>("h00") @[Lsu.scala 16:10]
      cache_read_bits.rob_idx <= UInt<4>("h00") @[Lsu.scala 17:13]
      skip @[Lsu.scala 255:23]
    
  module Mdu : 
    input clock : Clock
    input reset : Reset
    output io : {flip dispatch_info : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}}, wb_info : {valid : UInt<1>, bits : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}}, flip need_flush : UInt<1>}
    
    reg dispatch_info : {uop : UInt<6>, need_imm : UInt<1>, rob_idx : UInt<3>, inst_addr : UInt<32>, op1_data : UInt<32>, op2_data : UInt<32>, imm_data : UInt<32>, predict_taken : UInt<1>}, clock @[Mdu.scala 20:34]
    dispatch_info.predict_taken <= io.dispatch_info.bits.predict_taken @[Mdu.scala 21:17]
    dispatch_info.imm_data <= io.dispatch_info.bits.imm_data @[Mdu.scala 21:17]
    dispatch_info.op2_data <= io.dispatch_info.bits.op2_data @[Mdu.scala 21:17]
    dispatch_info.op1_data <= io.dispatch_info.bits.op1_data @[Mdu.scala 21:17]
    dispatch_info.inst_addr <= io.dispatch_info.bits.inst_addr @[Mdu.scala 21:17]
    dispatch_info.rob_idx <= io.dispatch_info.bits.rob_idx @[Mdu.scala 21:17]
    dispatch_info.need_imm <= io.dispatch_info.bits.need_imm @[Mdu.scala 21:17]
    dispatch_info.uop <= io.dispatch_info.bits.uop @[Mdu.scala 21:17]
    reg dispatch_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Mdu.scala 22:38]
    dispatch_valid <= io.dispatch_info.valid @[Mdu.scala 23:17]
    io.dispatch_info.ready <= UInt<1>("h01") @[Mdu.scala 24:25]
    node result = mul(dispatch_info.op1_data, dispatch_info.op2_data) @[Mdu.scala 26:38]
    reg wb_info : {rob_idx : UInt<3>, data : UInt<32>, target_addr : UInt<32>, is_taken : UInt<1>, predict_miss : UInt<1>}, clock @[Mdu.scala 30:26]
    reg wb_info_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Mdu.scala 31:36]
    node _io_wb_info_bits_data_T = bits(result, 31, 0) @[Mdu.scala 42:31]
    io.wb_info.bits.data <= _io_wb_info_bits_data_T @[Mdu.scala 42:23]
    io.wb_info.bits.rob_idx <= dispatch_info.rob_idx @[Mdu.scala 43:26]
    io.wb_info.bits.is_taken <= UInt<1>("h00") @[Mdu.scala 44:27]
    io.wb_info.bits.target_addr <= UInt<1>("h00") @[Mdu.scala 45:30]
    io.wb_info.bits.predict_miss <= UInt<1>("h00") @[Mdu.scala 46:31]
    io.wb_info.valid <= dispatch_valid @[Mdu.scala 47:19]
    when io.need_flush : @[Mdu.scala 49:22]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      dispatch_valid <= UInt<1>("h00") @[Mdu.scala 51:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      wb_info_valid <= UInt<1>("h00") @[Mdu.scala 53:18]
      skip @[Mdu.scala 49:22]
    node _T = asUInt(reset) @[Mdu.scala 56:20]
    when _T : @[Mdu.scala 56:23]
      dispatch_info.uop <= UInt<1>("h00") @[Rob.scala 142:19]
      dispatch_info.need_imm <= UInt<1>("h00") @[Rob.scala 143:19]
      dispatch_info.rob_idx <= UInt<3>("h00") @[Rob.scala 144:19]
      dispatch_info.inst_addr <= UInt<32>("h00") @[Rob.scala 145:19]
      dispatch_info.op1_data <= UInt<32>("h00") @[Rob.scala 146:19]
      dispatch_info.op2_data <= UInt<32>("h00") @[Rob.scala 147:19]
      dispatch_info.imm_data <= UInt<32>("h00") @[Rob.scala 148:19]
      dispatch_info.predict_taken <= UInt<1>("h00") @[Rob.scala 149:19]
      wb_info.rob_idx <= UInt<3>("h00") @[Rob.scala 124:18]
      wb_info.data <= UInt<32>("h00") @[Rob.scala 125:18]
      wb_info.target_addr <= UInt<32>("h00") @[Rob.scala 126:18]
      wb_info.is_taken <= UInt<1>("h00") @[Rob.scala 127:18]
      wb_info.predict_miss <= UInt<1>("h00") @[Rob.scala 128:18]
      skip @[Mdu.scala 56:23]
    
  module Dcache : 
    input clock : Clock
    input reset : Reset
    output io : {flip dcache_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, dcache_read_resp : {data : UInt<32>}, flip dcache_write_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}, io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, flip io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>}}, io_write_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}}
    
    io.io_read_req.bits.rob_idx <= io.dcache_read_req.bits.rob_idx @[Dcache.scala 21:17]
    io.io_read_req.bits.addr <= io.dcache_read_req.bits.addr @[Dcache.scala 21:17]
    io.io_read_req.valid <= io.dcache_read_req.valid @[Dcache.scala 21:17]
    io.dcache_read_req.ready <= io.io_read_req.ready @[Dcache.scala 21:17]
    io.dcache_read_resp.data <= io.io_read_resp.bits.data @[Dcache.scala 22:23]
    io.io_read_resp.ready <= UInt<1>("h01") @[Dcache.scala 23:24]
    io.io_write_req.bits.byte_mask <= io.dcache_write_req.bits.byte_mask @[Dcache.scala 24:18]
    io.io_write_req.bits.data <= io.dcache_write_req.bits.data @[Dcache.scala 24:18]
    io.io_write_req.bits.addr <= io.dcache_write_req.bits.addr @[Dcache.scala 24:18]
    io.io_write_req.valid <= io.dcache_write_req.valid @[Dcache.scala 24:18]
    io.dcache_write_req.ready <= io.io_write_req.ready @[Dcache.scala 24:18]
    
  module Exu : 
    input clock : Clock
    input reset : Reset
    output io : {flip fb_inst_bank_i : {valid : UInt<1>, bits : {data : {inst : UInt<32>, inst_addr : UInt<32>, gh_backup : UInt<4>, is_valid : UInt<1>, is_delay : UInt<1>, is_branch : UInt<1>, predict_taken : UInt<1>}[2]}}, fb_resp : {deq_valid : UInt<1>[2]}, ex_branch_info_o : {valid : UInt<1>, bits : {target_addr : UInt<32>, inst_addr : UInt<32>, gh_update : UInt<4>, is_branch : UInt<1>, is_taken : UInt<1>, predict_miss : UInt<1>}}, dcache_io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, flip dcache_io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>}}, dcache_io_write_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}, need_flush : UInt<1>, rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2]}
    
    inst decode of Decode @[Exu.scala 24:22]
    decode.clock <= clock
    decode.reset <= reset
    inst rename of Rename @[Exu.scala 25:22]
    rename.clock <= clock
    rename.reset <= reset
    inst regfile of Regfile @[Exu.scala 26:23]
    regfile.clock <= clock
    regfile.reset <= reset
    inst rob of Rob @[Exu.scala 27:19]
    rob.clock <= clock
    rob.reset <= reset
    inst alu0 of Alu @[Exu.scala 28:20]
    alu0.clock <= clock
    alu0.reset <= reset
    inst alu1 of Alu_1 @[Exu.scala 29:20]
    alu1.clock <= clock
    alu1.reset <= reset
    inst bju0 of Bju @[Exu.scala 31:20]
    bju0.clock <= clock
    bju0.reset <= reset
    inst lsu of Lsu @[Exu.scala 33:19]
    lsu.clock <= clock
    lsu.reset <= reset
    inst mdu of Mdu @[Exu.scala 34:19]
    mdu.clock <= clock
    mdu.reset <= reset
    inst dcache of Dcache @[Exu.scala 35:22]
    dcache.clock <= clock
    dcache.reset <= reset
    decode.io.fb_inst_bank.bits.data[0].predict_taken <= io.fb_inst_bank_i.bits.data[0].predict_taken @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].is_branch <= io.fb_inst_bank_i.bits.data[0].is_branch @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].is_delay <= io.fb_inst_bank_i.bits.data[0].is_delay @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].is_valid <= io.fb_inst_bank_i.bits.data[0].is_valid @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].gh_backup <= io.fb_inst_bank_i.bits.data[0].gh_backup @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].inst_addr <= io.fb_inst_bank_i.bits.data[0].inst_addr @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[0].inst <= io.fb_inst_bank_i.bits.data[0].inst @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].predict_taken <= io.fb_inst_bank_i.bits.data[1].predict_taken @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].is_branch <= io.fb_inst_bank_i.bits.data[1].is_branch @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].is_delay <= io.fb_inst_bank_i.bits.data[1].is_delay @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].is_valid <= io.fb_inst_bank_i.bits.data[1].is_valid @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].gh_backup <= io.fb_inst_bank_i.bits.data[1].gh_backup @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].inst_addr <= io.fb_inst_bank_i.bits.data[1].inst_addr @[Exu.scala 37:20]
    decode.io.fb_inst_bank.bits.data[1].inst <= io.fb_inst_bank_i.bits.data[1].inst @[Exu.scala 37:20]
    decode.io.fb_inst_bank.valid <= io.fb_inst_bank_i.valid @[Exu.scala 37:20]
    io.fb_resp.deq_valid[0] <= decode.io.fb_resp.deq_valid[0] @[Exu.scala 38:20]
    io.fb_resp.deq_valid[1] <= decode.io.fb_resp.deq_valid[1] @[Exu.scala 38:20]
    decode.io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] <= rob.io.rob_allocate.allocate_resp.bits.enq_valid_mask[0] @[Exu.scala 39:22]
    decode.io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] <= rob.io.rob_allocate.allocate_resp.bits.enq_valid_mask[1] @[Exu.scala 39:22]
    decode.io.rob_allocate.allocate_resp.bits.rob_idx[0] <= rob.io.rob_allocate.allocate_resp.bits.rob_idx[0] @[Exu.scala 39:22]
    decode.io.rob_allocate.allocate_resp.bits.rob_idx[1] <= rob.io.rob_allocate.allocate_resp.bits.rob_idx[1] @[Exu.scala 39:22]
    decode.io.rob_allocate.allocate_resp.valid <= rob.io.rob_allocate.allocate_resp.valid @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].predict_taken <= decode.io.rob_allocate.allocate_info.bits[0].predict_taken @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].flush_on_commit <= decode.io.rob_allocate.allocate_info.bits[0].flush_on_commit @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].imm_data <= decode.io.rob_allocate.allocate_info.bits[0].imm_data @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].gh_info <= decode.io.rob_allocate.allocate_info.bits[0].gh_info @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].is_delay <= decode.io.rob_allocate.allocate_info.bits[0].is_delay @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].is_branch <= decode.io.rob_allocate.allocate_info.bits[0].is_branch @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].except_type <= decode.io.rob_allocate.allocate_info.bits[0].except_type @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].commit_target <= decode.io.rob_allocate.allocate_info.bits[0].commit_target @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].commit_addr <= decode.io.rob_allocate.allocate_info.bits[0].commit_addr @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].need_imm <= decode.io.rob_allocate.allocate_info.bits[0].need_imm @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].unit_sel <= decode.io.rob_allocate.allocate_info.bits[0].unit_sel @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].uop <= decode.io.rob_allocate.allocate_info.bits[0].uop @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].inst_addr <= decode.io.rob_allocate.allocate_info.bits[0].inst_addr @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].inst_valid <= decode.io.rob_allocate.allocate_info.bits[0].inst_valid @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[0].rob_idx <= decode.io.rob_allocate.allocate_info.bits[0].rob_idx @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].predict_taken <= decode.io.rob_allocate.allocate_info.bits[1].predict_taken @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].flush_on_commit <= decode.io.rob_allocate.allocate_info.bits[1].flush_on_commit @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].imm_data <= decode.io.rob_allocate.allocate_info.bits[1].imm_data @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].gh_info <= decode.io.rob_allocate.allocate_info.bits[1].gh_info @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].is_delay <= decode.io.rob_allocate.allocate_info.bits[1].is_delay @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].is_branch <= decode.io.rob_allocate.allocate_info.bits[1].is_branch @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].except_type <= decode.io.rob_allocate.allocate_info.bits[1].except_type @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].commit_target <= decode.io.rob_allocate.allocate_info.bits[1].commit_target @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].commit_addr <= decode.io.rob_allocate.allocate_info.bits[1].commit_addr @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].need_imm <= decode.io.rob_allocate.allocate_info.bits[1].need_imm @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].unit_sel <= decode.io.rob_allocate.allocate_info.bits[1].unit_sel @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].uop <= decode.io.rob_allocate.allocate_info.bits[1].uop @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].inst_addr <= decode.io.rob_allocate.allocate_info.bits[1].inst_addr @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].inst_valid <= decode.io.rob_allocate.allocate_info.bits[1].inst_valid @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.bits[1].rob_idx <= decode.io.rob_allocate.allocate_info.bits[1].rob_idx @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_info.valid <= decode.io.rob_allocate.allocate_info.valid @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_req.bits[0] <= decode.io.rob_allocate.allocate_req.bits[0] @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_req.bits[1] <= decode.io.rob_allocate.allocate_req.bits[1] @[Exu.scala 39:22]
    rob.io.rob_allocate.allocate_req.valid <= decode.io.rob_allocate.allocate_req.valid @[Exu.scala 39:22]
    rename.io.rename_info.bits[0].des_rob <= decode.io.rename_info.bits[0].des_rob @[Exu.scala 40:24]
    rename.io.rename_info.bits[0].des_addr <= decode.io.rename_info.bits[0].des_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[0].op2_addr <= decode.io.rename_info.bits[0].op2_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[0].op1_addr <= decode.io.rename_info.bits[0].op1_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[0].is_valid <= decode.io.rename_info.bits[0].is_valid @[Exu.scala 40:24]
    rename.io.rename_info.bits[1].des_rob <= decode.io.rename_info.bits[1].des_rob @[Exu.scala 40:24]
    rename.io.rename_info.bits[1].des_addr <= decode.io.rename_info.bits[1].des_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[1].op2_addr <= decode.io.rename_info.bits[1].op2_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[1].op1_addr <= decode.io.rename_info.bits[1].op1_addr @[Exu.scala 40:24]
    rename.io.rename_info.bits[1].is_valid <= decode.io.rename_info.bits[1].is_valid @[Exu.scala 40:24]
    rename.io.rename_info.valid <= decode.io.rename_info.valid @[Exu.scala 40:24]
    rename.io.reg_read[0].op2_data <= regfile.io.reg_read[0].op2_data @[Exu.scala 41:21]
    rename.io.reg_read[0].op1_data <= regfile.io.reg_read[0].op1_data @[Exu.scala 41:21]
    regfile.io.reg_read[0].op2_addr <= rename.io.reg_read[0].op2_addr @[Exu.scala 41:21]
    regfile.io.reg_read[0].op1_addr <= rename.io.reg_read[0].op1_addr @[Exu.scala 41:21]
    rename.io.reg_read[1].op2_data <= regfile.io.reg_read[1].op2_data @[Exu.scala 41:21]
    rename.io.reg_read[1].op1_data <= regfile.io.reg_read[1].op1_data @[Exu.scala 41:21]
    regfile.io.reg_read[1].op2_addr <= rename.io.reg_read[1].op2_addr @[Exu.scala 41:21]
    regfile.io.reg_read[1].op1_addr <= rename.io.reg_read[1].op1_addr @[Exu.scala 41:21]
    rob.io.rob_init_info.bits[0].op2_in_rob <= rename.io.rob_init_info.bits[0].op2_in_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].op1_in_rob <= rename.io.rob_init_info.bits[0].op1_in_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].op2_regData <= rename.io.rob_init_info.bits[0].op2_regData @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].op1_regData <= rename.io.rob_init_info.bits[0].op1_regData @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].op2_rob <= rename.io.rob_init_info.bits[0].op2_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].op1_rob <= rename.io.rob_init_info.bits[0].op1_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].des_rob <= rename.io.rob_init_info.bits[0].des_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[0].is_valid <= rename.io.rob_init_info.bits[0].is_valid @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op2_in_rob <= rename.io.rob_init_info.bits[1].op2_in_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op1_in_rob <= rename.io.rob_init_info.bits[1].op1_in_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op2_regData <= rename.io.rob_init_info.bits[1].op2_regData @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op1_regData <= rename.io.rob_init_info.bits[1].op1_regData @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op2_rob <= rename.io.rob_init_info.bits[1].op2_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].op1_rob <= rename.io.rob_init_info.bits[1].op1_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].des_rob <= rename.io.rob_init_info.bits[1].des_rob @[Exu.scala 42:23]
    rob.io.rob_init_info.bits[1].is_valid <= rename.io.rob_init_info.bits[1].is_valid @[Exu.scala 42:23]
    rob.io.rob_init_info.valid <= rename.io.rob_init_info.valid @[Exu.scala 42:23]
    rename.io.rob_commit[0].bits.commit_data <= rob.io.rob_commit[0].bits.commit_data @[Exu.scala 43:23]
    rename.io.rob_commit[0].bits.commit_addr <= rob.io.rob_commit[0].bits.commit_addr @[Exu.scala 43:23]
    rename.io.rob_commit[0].bits.des_rob <= rob.io.rob_commit[0].bits.des_rob @[Exu.scala 43:23]
    rename.io.rob_commit[0].valid <= rob.io.rob_commit[0].valid @[Exu.scala 43:23]
    rename.io.rob_commit[1].bits.commit_data <= rob.io.rob_commit[1].bits.commit_data @[Exu.scala 43:23]
    rename.io.rob_commit[1].bits.commit_addr <= rob.io.rob_commit[1].bits.commit_addr @[Exu.scala 43:23]
    rename.io.rob_commit[1].bits.des_rob <= rob.io.rob_commit[1].bits.des_rob @[Exu.scala 43:23]
    rename.io.rob_commit[1].valid <= rob.io.rob_commit[1].valid @[Exu.scala 43:23]
    regfile.io.rob_commit_i[0].bits.commit_data <= rob.io.rob_commit[0].bits.commit_data @[Exu.scala 45:26]
    regfile.io.rob_commit_i[0].bits.commit_addr <= rob.io.rob_commit[0].bits.commit_addr @[Exu.scala 45:26]
    regfile.io.rob_commit_i[0].bits.des_rob <= rob.io.rob_commit[0].bits.des_rob @[Exu.scala 45:26]
    regfile.io.rob_commit_i[0].valid <= rob.io.rob_commit[0].valid @[Exu.scala 45:26]
    regfile.io.rob_commit_i[1].bits.commit_data <= rob.io.rob_commit[1].bits.commit_data @[Exu.scala 45:26]
    regfile.io.rob_commit_i[1].bits.commit_addr <= rob.io.rob_commit[1].bits.commit_addr @[Exu.scala 45:26]
    regfile.io.rob_commit_i[1].bits.des_rob <= rob.io.rob_commit[1].bits.des_rob @[Exu.scala 45:26]
    regfile.io.rob_commit_i[1].valid <= rob.io.rob_commit[1].valid @[Exu.scala 45:26]
    io.ex_branch_info_o.bits.predict_miss <= rob.io.branch_info.bits.predict_miss @[Exu.scala 46:22]
    io.ex_branch_info_o.bits.is_taken <= rob.io.branch_info.bits.is_taken @[Exu.scala 46:22]
    io.ex_branch_info_o.bits.is_branch <= rob.io.branch_info.bits.is_branch @[Exu.scala 46:22]
    io.ex_branch_info_o.bits.gh_update <= rob.io.branch_info.bits.gh_update @[Exu.scala 46:22]
    io.ex_branch_info_o.bits.inst_addr <= rob.io.branch_info.bits.inst_addr @[Exu.scala 46:22]
    io.ex_branch_info_o.bits.target_addr <= rob.io.branch_info.bits.target_addr @[Exu.scala 46:22]
    io.ex_branch_info_o.valid <= rob.io.branch_info.valid @[Exu.scala 46:22]
    lsu.io.rob_commit[0].bits.commit_data <= rob.io.rob_commit[0].bits.commit_data @[Exu.scala 47:20]
    lsu.io.rob_commit[0].bits.commit_addr <= rob.io.rob_commit[0].bits.commit_addr @[Exu.scala 47:20]
    lsu.io.rob_commit[0].bits.des_rob <= rob.io.rob_commit[0].bits.des_rob @[Exu.scala 47:20]
    lsu.io.rob_commit[0].valid <= rob.io.rob_commit[0].valid @[Exu.scala 47:20]
    lsu.io.rob_commit[1].bits.commit_data <= rob.io.rob_commit[1].bits.commit_data @[Exu.scala 47:20]
    lsu.io.rob_commit[1].bits.commit_addr <= rob.io.rob_commit[1].bits.commit_addr @[Exu.scala 47:20]
    lsu.io.rob_commit[1].bits.des_rob <= rob.io.rob_commit[1].bits.des_rob @[Exu.scala 47:20]
    lsu.io.rob_commit[1].valid <= rob.io.rob_commit[1].valid @[Exu.scala 47:20]
    dcache.io.dcache_read_req.bits.rob_idx <= lsu.io.cache_read.bits.rob_idx @[Exu.scala 48:21]
    dcache.io.dcache_read_req.bits.addr <= lsu.io.cache_read.bits.addr @[Exu.scala 48:21]
    dcache.io.dcache_read_req.valid <= lsu.io.cache_read.valid @[Exu.scala 48:21]
    lsu.io.cache_read.ready <= dcache.io.dcache_read_req.ready @[Exu.scala 48:21]
    dcache.io.dcache_write_req.bits.byte_mask <= lsu.io.cache_write.bits.byte_mask @[Exu.scala 49:21]
    dcache.io.dcache_write_req.bits.data <= lsu.io.cache_write.bits.data @[Exu.scala 49:21]
    dcache.io.dcache_write_req.bits.addr <= lsu.io.cache_write.bits.addr @[Exu.scala 49:21]
    dcache.io.dcache_write_req.valid <= lsu.io.cache_write.valid @[Exu.scala 49:21]
    lsu.io.cache_write.ready <= dcache.io.dcache_write_req.ready @[Exu.scala 49:21]
    lsu.io.cache_resp.data <= dcache.io.dcache_read_resp.data @[Exu.scala 50:21]
    io.dcache_io_read_req.bits.rob_idx <= dcache.io.io_read_req.bits.rob_idx @[Exu.scala 51:25]
    io.dcache_io_read_req.bits.addr <= dcache.io.io_read_req.bits.addr @[Exu.scala 51:25]
    io.dcache_io_read_req.valid <= dcache.io.io_read_req.valid @[Exu.scala 51:25]
    dcache.io.io_read_req.ready <= io.dcache_io_read_req.ready @[Exu.scala 51:25]
    dcache.io.io_read_resp.bits.data <= io.dcache_io_read_resp.bits.data @[Exu.scala 52:25]
    dcache.io.io_read_resp.valid <= io.dcache_io_read_resp.valid @[Exu.scala 52:25]
    io.dcache_io_read_resp.ready <= dcache.io.io_read_resp.ready @[Exu.scala 52:25]
    io.dcache_io_write_req.bits.byte_mask <= dcache.io.io_write_req.bits.byte_mask @[Exu.scala 53:25]
    io.dcache_io_write_req.bits.data <= dcache.io.io_write_req.bits.data @[Exu.scala 53:25]
    io.dcache_io_write_req.bits.addr <= dcache.io.io_write_req.bits.addr @[Exu.scala 53:25]
    io.dcache_io_write_req.valid <= dcache.io.io_write_req.valid @[Exu.scala 53:25]
    dcache.io.io_write_req.ready <= io.dcache_io_write_req.ready @[Exu.scala 53:25]
    io.need_flush <= rob.io.need_flush @[Exu.scala 55:20]
    decode.io.need_flush <= rob.io.need_flush @[Exu.scala 56:20]
    rename.io.need_flush <= rob.io.need_flush @[Exu.scala 57:20]
    alu0.io.need_flush <= rob.io.need_flush @[Exu.scala 58:20]
    alu1.io.need_flush <= rob.io.need_flush @[Exu.scala 59:20]
    bju0.io.need_flush <= rob.io.need_flush @[Exu.scala 61:20]
    lsu.io.need_flush <= rob.io.need_flush @[Exu.scala 63:20]
    mdu.io.need_flush <= rob.io.need_flush @[Exu.scala 64:20]
    rob.io.wb_info_i[0].bits.predict_miss <= alu0.io.wb_info.bits.predict_miss @[Exu.scala 67:22]
    rob.io.wb_info_i[0].bits.is_taken <= alu0.io.wb_info.bits.is_taken @[Exu.scala 67:22]
    rob.io.wb_info_i[0].bits.target_addr <= alu0.io.wb_info.bits.target_addr @[Exu.scala 67:22]
    rob.io.wb_info_i[0].bits.data <= alu0.io.wb_info.bits.data @[Exu.scala 67:22]
    rob.io.wb_info_i[0].bits.rob_idx <= alu0.io.wb_info.bits.rob_idx @[Exu.scala 67:22]
    rob.io.wb_info_i[0].valid <= alu0.io.wb_info.valid @[Exu.scala 67:22]
    rob.io.wb_info_i[1].bits.predict_miss <= alu1.io.wb_info.bits.predict_miss @[Exu.scala 68:22]
    rob.io.wb_info_i[1].bits.is_taken <= alu1.io.wb_info.bits.is_taken @[Exu.scala 68:22]
    rob.io.wb_info_i[1].bits.target_addr <= alu1.io.wb_info.bits.target_addr @[Exu.scala 68:22]
    rob.io.wb_info_i[1].bits.data <= alu1.io.wb_info.bits.data @[Exu.scala 68:22]
    rob.io.wb_info_i[1].bits.rob_idx <= alu1.io.wb_info.bits.rob_idx @[Exu.scala 68:22]
    rob.io.wb_info_i[1].valid <= alu1.io.wb_info.valid @[Exu.scala 68:22]
    rob.io.wb_info_i[2].bits.predict_miss <= bju0.io.wb_info.bits.predict_miss @[Exu.scala 70:22]
    rob.io.wb_info_i[2].bits.is_taken <= bju0.io.wb_info.bits.is_taken @[Exu.scala 70:22]
    rob.io.wb_info_i[2].bits.target_addr <= bju0.io.wb_info.bits.target_addr @[Exu.scala 70:22]
    rob.io.wb_info_i[2].bits.data <= bju0.io.wb_info.bits.data @[Exu.scala 70:22]
    rob.io.wb_info_i[2].bits.rob_idx <= bju0.io.wb_info.bits.rob_idx @[Exu.scala 70:22]
    rob.io.wb_info_i[2].valid <= bju0.io.wb_info.valid @[Exu.scala 70:22]
    rob.io.wb_info_i[3].bits.predict_miss <= mdu.io.wb_info.bits.predict_miss @[Exu.scala 72:22]
    rob.io.wb_info_i[3].bits.is_taken <= mdu.io.wb_info.bits.is_taken @[Exu.scala 72:22]
    rob.io.wb_info_i[3].bits.target_addr <= mdu.io.wb_info.bits.target_addr @[Exu.scala 72:22]
    rob.io.wb_info_i[3].bits.data <= mdu.io.wb_info.bits.data @[Exu.scala 72:22]
    rob.io.wb_info_i[3].bits.rob_idx <= mdu.io.wb_info.bits.rob_idx @[Exu.scala 72:22]
    rob.io.wb_info_i[3].valid <= mdu.io.wb_info.valid @[Exu.scala 72:22]
    rob.io.wb_info_i[4].bits.predict_miss <= lsu.io.wb_info.bits.predict_miss @[Exu.scala 73:22]
    rob.io.wb_info_i[4].bits.is_taken <= lsu.io.wb_info.bits.is_taken @[Exu.scala 73:22]
    rob.io.wb_info_i[4].bits.target_addr <= lsu.io.wb_info.bits.target_addr @[Exu.scala 73:22]
    rob.io.wb_info_i[4].bits.data <= lsu.io.wb_info.bits.data @[Exu.scala 73:22]
    rob.io.wb_info_i[4].bits.rob_idx <= lsu.io.wb_info.bits.rob_idx @[Exu.scala 73:22]
    rob.io.wb_info_i[4].valid <= lsu.io.wb_info.valid @[Exu.scala 73:22]
    alu0.io.dispatch_info.bits.predict_taken <= rob.io.dispatch_info_o[0].bits.predict_taken @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.imm_data <= rob.io.dispatch_info_o[0].bits.imm_data @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.op2_data <= rob.io.dispatch_info_o[0].bits.op2_data @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.op1_data <= rob.io.dispatch_info_o[0].bits.op1_data @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.inst_addr <= rob.io.dispatch_info_o[0].bits.inst_addr @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.rob_idx <= rob.io.dispatch_info_o[0].bits.rob_idx @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.need_imm <= rob.io.dispatch_info_o[0].bits.need_imm @[Exu.scala 75:28]
    alu0.io.dispatch_info.bits.uop <= rob.io.dispatch_info_o[0].bits.uop @[Exu.scala 75:28]
    alu0.io.dispatch_info.valid <= rob.io.dispatch_info_o[0].valid @[Exu.scala 75:28]
    rob.io.dispatch_info_o[0].ready <= alu0.io.dispatch_info.ready @[Exu.scala 75:28]
    alu1.io.dispatch_info.bits.predict_taken <= rob.io.dispatch_info_o[1].bits.predict_taken @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.imm_data <= rob.io.dispatch_info_o[1].bits.imm_data @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.op2_data <= rob.io.dispatch_info_o[1].bits.op2_data @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.op1_data <= rob.io.dispatch_info_o[1].bits.op1_data @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.inst_addr <= rob.io.dispatch_info_o[1].bits.inst_addr @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.rob_idx <= rob.io.dispatch_info_o[1].bits.rob_idx @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.need_imm <= rob.io.dispatch_info_o[1].bits.need_imm @[Exu.scala 76:28]
    alu1.io.dispatch_info.bits.uop <= rob.io.dispatch_info_o[1].bits.uop @[Exu.scala 76:28]
    alu1.io.dispatch_info.valid <= rob.io.dispatch_info_o[1].valid @[Exu.scala 76:28]
    rob.io.dispatch_info_o[1].ready <= alu1.io.dispatch_info.ready @[Exu.scala 76:28]
    bju0.io.dispatch_info.bits.predict_taken <= rob.io.dispatch_info_o[2].bits.predict_taken @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.imm_data <= rob.io.dispatch_info_o[2].bits.imm_data @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.op2_data <= rob.io.dispatch_info_o[2].bits.op2_data @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.op1_data <= rob.io.dispatch_info_o[2].bits.op1_data @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.inst_addr <= rob.io.dispatch_info_o[2].bits.inst_addr @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.rob_idx <= rob.io.dispatch_info_o[2].bits.rob_idx @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.need_imm <= rob.io.dispatch_info_o[2].bits.need_imm @[Exu.scala 78:28]
    bju0.io.dispatch_info.bits.uop <= rob.io.dispatch_info_o[2].bits.uop @[Exu.scala 78:28]
    bju0.io.dispatch_info.valid <= rob.io.dispatch_info_o[2].valid @[Exu.scala 78:28]
    rob.io.dispatch_info_o[2].ready <= bju0.io.dispatch_info.ready @[Exu.scala 78:28]
    mdu.io.dispatch_info.bits.predict_taken <= rob.io.dispatch_info_o[3].bits.predict_taken @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.imm_data <= rob.io.dispatch_info_o[3].bits.imm_data @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.op2_data <= rob.io.dispatch_info_o[3].bits.op2_data @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.op1_data <= rob.io.dispatch_info_o[3].bits.op1_data @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.inst_addr <= rob.io.dispatch_info_o[3].bits.inst_addr @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.rob_idx <= rob.io.dispatch_info_o[3].bits.rob_idx @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.need_imm <= rob.io.dispatch_info_o[3].bits.need_imm @[Exu.scala 80:28]
    mdu.io.dispatch_info.bits.uop <= rob.io.dispatch_info_o[3].bits.uop @[Exu.scala 80:28]
    mdu.io.dispatch_info.valid <= rob.io.dispatch_info_o[3].valid @[Exu.scala 80:28]
    rob.io.dispatch_info_o[3].ready <= mdu.io.dispatch_info.ready @[Exu.scala 80:28]
    lsu.io.dispatch_info.bits.predict_taken <= rob.io.dispatch_info_o[4].bits.predict_taken @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.imm_data <= rob.io.dispatch_info_o[4].bits.imm_data @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.op2_data <= rob.io.dispatch_info_o[4].bits.op2_data @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.op1_data <= rob.io.dispatch_info_o[4].bits.op1_data @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.inst_addr <= rob.io.dispatch_info_o[4].bits.inst_addr @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.rob_idx <= rob.io.dispatch_info_o[4].bits.rob_idx @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.need_imm <= rob.io.dispatch_info_o[4].bits.need_imm @[Exu.scala 81:28]
    lsu.io.dispatch_info.bits.uop <= rob.io.dispatch_info_o[4].bits.uop @[Exu.scala 81:28]
    lsu.io.dispatch_info.valid <= rob.io.dispatch_info_o[4].valid @[Exu.scala 81:28]
    rob.io.dispatch_info_o[4].ready <= lsu.io.dispatch_info.ready @[Exu.scala 81:28]
    io.rob_commit[0].bits.commit_data <= rob.io.rob_commit[0].bits.commit_data @[Exu.scala 84:20]
    io.rob_commit[0].bits.commit_addr <= rob.io.rob_commit[0].bits.commit_addr @[Exu.scala 84:20]
    io.rob_commit[0].bits.des_rob <= rob.io.rob_commit[0].bits.des_rob @[Exu.scala 84:20]
    io.rob_commit[0].valid <= rob.io.rob_commit[0].valid @[Exu.scala 84:20]
    io.rob_commit[1].bits.commit_data <= rob.io.rob_commit[1].bits.commit_data @[Exu.scala 84:20]
    io.rob_commit[1].bits.commit_addr <= rob.io.rob_commit[1].bits.commit_addr @[Exu.scala 84:20]
    io.rob_commit[1].bits.des_rob <= rob.io.rob_commit[1].bits.des_rob @[Exu.scala 84:20]
    io.rob_commit[1].valid <= rob.io.rob_commit[1].valid @[Exu.scala 84:20]
    
  module Core : 
    input clock : Clock
    input reset : Reset
    output io : {icache_io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, flip icache_io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<256>}}, dcache_io_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, flip dcache_io_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>}}, dcache_io_write_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}, need_flush : UInt<1>, rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2], icache_debug : {state : UInt<1>, hit_cache : UInt<1>, cache_we : UInt<1>, cache_read_tag : UInt<20>, icache_req : {valid : UInt<1>, bits : {addr : UInt<32>}}}, bpu_debug : {branch_mask : UInt<8>, fetched_mask : UInt<8>, predict_branch : UInt<8>, predict_addr : UInt<32>, is_taken : UInt<1>, take_delay : UInt<1>, inst_packet : UInt<32>[8]}}
    
    inst ifu of Ifu @[Core.scala 25:19]
    ifu.clock <= clock
    ifu.reset <= reset
    inst exu of Exu @[Core.scala 26:19]
    exu.clock <= clock
    exu.reset <= reset
    exu.io.fb_inst_bank_i.bits.data[0].predict_taken <= ifu.io.fb_inst_bank_o.bits.data[0].predict_taken @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].is_branch <= ifu.io.fb_inst_bank_o.bits.data[0].is_branch @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].is_delay <= ifu.io.fb_inst_bank_o.bits.data[0].is_delay @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].is_valid <= ifu.io.fb_inst_bank_o.bits.data[0].is_valid @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].gh_backup <= ifu.io.fb_inst_bank_o.bits.data[0].gh_backup @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].inst_addr <= ifu.io.fb_inst_bank_o.bits.data[0].inst_addr @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[0].inst <= ifu.io.fb_inst_bank_o.bits.data[0].inst @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].predict_taken <= ifu.io.fb_inst_bank_o.bits.data[1].predict_taken @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].is_branch <= ifu.io.fb_inst_bank_o.bits.data[1].is_branch @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].is_delay <= ifu.io.fb_inst_bank_o.bits.data[1].is_delay @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].is_valid <= ifu.io.fb_inst_bank_o.bits.data[1].is_valid @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].gh_backup <= ifu.io.fb_inst_bank_o.bits.data[1].gh_backup @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].inst_addr <= ifu.io.fb_inst_bank_o.bits.data[1].inst_addr @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.bits.data[1].inst <= ifu.io.fb_inst_bank_o.bits.data[1].inst @[Core.scala 27:24]
    exu.io.fb_inst_bank_i.valid <= ifu.io.fb_inst_bank_o.valid @[Core.scala 27:24]
    ifu.io.fb_resp.deq_valid[0] <= exu.io.fb_resp.deq_valid[0] @[Core.scala 28:17]
    ifu.io.fb_resp.deq_valid[1] <= exu.io.fb_resp.deq_valid[1] @[Core.scala 28:17]
    ifu.io.ex_branch_info_i.bits.predict_miss <= exu.io.ex_branch_info_o.bits.predict_miss @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.bits.is_taken <= exu.io.ex_branch_info_o.bits.is_taken @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.bits.is_branch <= exu.io.ex_branch_info_o.bits.is_branch @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.bits.gh_update <= exu.io.ex_branch_info_o.bits.gh_update @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.bits.inst_addr <= exu.io.ex_branch_info_o.bits.inst_addr @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.bits.target_addr <= exu.io.ex_branch_info_o.bits.target_addr @[Core.scala 29:26]
    ifu.io.ex_branch_info_i.valid <= exu.io.ex_branch_info_o.valid @[Core.scala 29:26]
    io.icache_io_read_req.bits.addr <= ifu.io.icache_io_read_req.bits.addr @[Core.scala 31:24]
    io.icache_io_read_req.valid <= ifu.io.icache_io_read_req.valid @[Core.scala 31:24]
    ifu.io.icache_io_read_req.ready <= io.icache_io_read_req.ready @[Core.scala 31:24]
    ifu.io.icache_io_read_resp.bits.data <= io.icache_io_read_resp.bits.data @[Core.scala 32:25]
    ifu.io.icache_io_read_resp.valid <= io.icache_io_read_resp.valid @[Core.scala 32:25]
    io.icache_io_read_resp.ready <= ifu.io.icache_io_read_resp.ready @[Core.scala 32:25]
    io.dcache_io_read_req.bits.rob_idx <= exu.io.dcache_io_read_req.bits.rob_idx @[Core.scala 34:25]
    io.dcache_io_read_req.bits.addr <= exu.io.dcache_io_read_req.bits.addr @[Core.scala 34:25]
    io.dcache_io_read_req.valid <= exu.io.dcache_io_read_req.valid @[Core.scala 34:25]
    exu.io.dcache_io_read_req.ready <= io.dcache_io_read_req.ready @[Core.scala 34:25]
    exu.io.dcache_io_read_resp.bits.data <= io.dcache_io_read_resp.bits.data @[Core.scala 35:25]
    exu.io.dcache_io_read_resp.valid <= io.dcache_io_read_resp.valid @[Core.scala 35:25]
    io.dcache_io_read_resp.ready <= exu.io.dcache_io_read_resp.ready @[Core.scala 35:25]
    io.dcache_io_write_req.bits.byte_mask <= exu.io.dcache_io_write_req.bits.byte_mask @[Core.scala 36:25]
    io.dcache_io_write_req.bits.data <= exu.io.dcache_io_write_req.bits.data @[Core.scala 36:25]
    io.dcache_io_write_req.bits.addr <= exu.io.dcache_io_write_req.bits.addr @[Core.scala 36:25]
    io.dcache_io_write_req.valid <= exu.io.dcache_io_write_req.valid @[Core.scala 36:25]
    exu.io.dcache_io_write_req.ready <= io.dcache_io_write_req.ready @[Core.scala 36:25]
    io.need_flush <= exu.io.need_flush @[Core.scala 38:16]
    io.rob_commit[0].bits.commit_data <= exu.io.rob_commit[0].bits.commit_data @[Core.scala 39:16]
    io.rob_commit[0].bits.commit_addr <= exu.io.rob_commit[0].bits.commit_addr @[Core.scala 39:16]
    io.rob_commit[0].bits.des_rob <= exu.io.rob_commit[0].bits.des_rob @[Core.scala 39:16]
    io.rob_commit[0].valid <= exu.io.rob_commit[0].valid @[Core.scala 39:16]
    io.rob_commit[1].bits.commit_data <= exu.io.rob_commit[1].bits.commit_data @[Core.scala 39:16]
    io.rob_commit[1].bits.commit_addr <= exu.io.rob_commit[1].bits.commit_addr @[Core.scala 39:16]
    io.rob_commit[1].bits.des_rob <= exu.io.rob_commit[1].bits.des_rob @[Core.scala 39:16]
    io.rob_commit[1].valid <= exu.io.rob_commit[1].valid @[Core.scala 39:16]
    io.icache_debug.icache_req.bits.addr <= ifu.io.icache_debug.icache_req.bits.addr @[Core.scala 42:18]
    io.icache_debug.icache_req.valid <= ifu.io.icache_debug.icache_req.valid @[Core.scala 42:18]
    io.icache_debug.cache_read_tag <= ifu.io.icache_debug.cache_read_tag @[Core.scala 42:18]
    io.icache_debug.cache_we <= ifu.io.icache_debug.cache_we @[Core.scala 42:18]
    io.icache_debug.hit_cache <= ifu.io.icache_debug.hit_cache @[Core.scala 42:18]
    io.icache_debug.state <= ifu.io.icache_debug.state @[Core.scala 42:18]
    io.bpu_debug.inst_packet[0] <= ifu.io.bpu_debug.inst_packet[0] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[1] <= ifu.io.bpu_debug.inst_packet[1] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[2] <= ifu.io.bpu_debug.inst_packet[2] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[3] <= ifu.io.bpu_debug.inst_packet[3] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[4] <= ifu.io.bpu_debug.inst_packet[4] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[5] <= ifu.io.bpu_debug.inst_packet[5] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[6] <= ifu.io.bpu_debug.inst_packet[6] @[Core.scala 43:15]
    io.bpu_debug.inst_packet[7] <= ifu.io.bpu_debug.inst_packet[7] @[Core.scala 43:15]
    io.bpu_debug.take_delay <= ifu.io.bpu_debug.take_delay @[Core.scala 43:15]
    io.bpu_debug.is_taken <= ifu.io.bpu_debug.is_taken @[Core.scala 43:15]
    io.bpu_debug.predict_addr <= ifu.io.bpu_debug.predict_addr @[Core.scala 43:15]
    io.bpu_debug.predict_branch <= ifu.io.bpu_debug.predict_branch @[Core.scala 43:15]
    io.bpu_debug.fetched_mask <= ifu.io.bpu_debug.fetched_mask @[Core.scala 43:15]
    io.bpu_debug.branch_mask <= ifu.io.bpu_debug.branch_mask @[Core.scala 43:15]
    
  module IoControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip icache_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, icache_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<256>}}, flip dcache_read_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, rob_idx : UInt<4>}}, dcache_read_resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>}}, flip dcache_write_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, data : UInt<32>, byte_mask : UInt<4>}}, base_ram_ctrl : {flip data_in : UInt<32>, ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}}, ext_ram_ctrl : {flip data_in : UInt<32>, ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}}, rxd : {flip uart_ready : UInt<1>, uart_clear : UInt<1>, flip uart_data : UInt<8>}, txd : {uart_start : UInt<1>, uart_data : UInt<8>, flip uart_busy : UInt<1>}, flip rob_commit : {valid : UInt<1>, bits : {des_rob : UInt<3>, commit_addr : UInt<5>, commit_data : UInt<32>}}[2], flip need_flush : UInt<1>, debug : {base_state : UInt<3>, icache_read_base : UInt<1>, icache_read_ext : UInt<1>, dcache_read_base : UInt<1>, dcache_read_ext : UInt<1>, dcache_write_base : UInt<1>, dcache_write_ext : UInt<1>, icache_read_addr : UInt<20>, dcache_read_addr : UInt<20>, dcache_write_addr : UInt<20>}}
    
    reg base_ram_ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}, clock @[IoControl.scala 114:26]
    reg ext_ram_ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}, clock @[IoControl.scala 115:26]
    io.base_ram_ctrl.ctrl.we_n <= base_ram_ctrl.we_n @[IoControl.scala 116:25]
    io.base_ram_ctrl.ctrl.oe_n <= base_ram_ctrl.oe_n @[IoControl.scala 116:25]
    io.base_ram_ctrl.ctrl.ce_n <= base_ram_ctrl.ce_n @[IoControl.scala 116:25]
    io.base_ram_ctrl.ctrl.be_n <= base_ram_ctrl.be_n @[IoControl.scala 116:25]
    io.base_ram_ctrl.ctrl.addr <= base_ram_ctrl.addr @[IoControl.scala 116:25]
    io.base_ram_ctrl.ctrl.data_out <= base_ram_ctrl.data_out @[IoControl.scala 116:25]
    io.ext_ram_ctrl.ctrl.we_n <= ext_ram_ctrl.we_n @[IoControl.scala 117:24]
    io.ext_ram_ctrl.ctrl.oe_n <= ext_ram_ctrl.oe_n @[IoControl.scala 117:24]
    io.ext_ram_ctrl.ctrl.ce_n <= ext_ram_ctrl.ce_n @[IoControl.scala 117:24]
    io.ext_ram_ctrl.ctrl.be_n <= ext_ram_ctrl.be_n @[IoControl.scala 117:24]
    io.ext_ram_ctrl.ctrl.addr <= ext_ram_ctrl.addr @[IoControl.scala 117:24]
    io.ext_ram_ctrl.ctrl.data_out <= ext_ram_ctrl.data_out @[IoControl.scala 117:24]
    reg base_state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[IoControl.scala 120:46]
    reg base_clock_counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[IoControl.scala 121:46]
    reg base_wait_counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[IoControl.scala 122:45]
    reg ext_state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[IoControl.scala 123:46]
    reg ext_clock_counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[IoControl.scala 124:46]
    reg ext_wait_counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[IoControl.scala 125:45]
    node _icache_read_base_T = bits(io.icache_read_req.bits.addr, 31, 22) @[IoControl.scala 127:67]
    node _icache_read_base_T_1 = eq(_icache_read_base_T, UInt<10>("h0200")) @[IoControl.scala 127:74]
    node icache_read_base = and(_icache_read_base_T_1, io.icache_read_req.valid) @[IoControl.scala 127:101]
    node _icache_read_ext_T = bits(io.icache_read_req.bits.addr, 31, 22) @[IoControl.scala 128:67]
    node _icache_read_ext_T_1 = eq(_icache_read_ext_T, UInt<10>("h0201")) @[IoControl.scala 128:74]
    node icache_read_ext = and(_icache_read_ext_T_1, io.icache_read_req.valid) @[IoControl.scala 128:101]
    node _dcache_read_base_T = bits(io.dcache_read_req.bits.addr, 31, 22) @[IoControl.scala 129:67]
    node _dcache_read_base_T_1 = eq(_dcache_read_base_T, UInt<10>("h0200")) @[IoControl.scala 129:74]
    node dcache_read_base = and(_dcache_read_base_T_1, io.dcache_read_req.valid) @[IoControl.scala 129:101]
    node _dcache_read_ext_T = bits(io.dcache_read_req.bits.addr, 31, 22) @[IoControl.scala 130:67]
    node _dcache_read_ext_T_1 = eq(_dcache_read_ext_T, UInt<10>("h0201")) @[IoControl.scala 130:74]
    node dcache_read_ext = and(_dcache_read_ext_T_1, io.dcache_read_req.valid) @[IoControl.scala 130:101]
    node _dcache_write_base_T = bits(io.dcache_write_req.bits.addr, 31, 22) @[IoControl.scala 131:68]
    node _dcache_write_base_T_1 = eq(_dcache_write_base_T, UInt<10>("h0200")) @[IoControl.scala 131:75]
    node dcache_write_base = and(_dcache_write_base_T_1, io.dcache_write_req.valid) @[IoControl.scala 131:102]
    node _dcache_write_ext_T = bits(io.dcache_write_req.bits.addr, 31, 22) @[IoControl.scala 132:68]
    node _dcache_write_ext_T_1 = eq(_dcache_write_ext_T, UInt<10>("h0201")) @[IoControl.scala 132:75]
    node dcache_write_ext = and(_dcache_write_ext_T_1, io.dcache_write_req.valid) @[IoControl.scala 132:102]
    node _dcache_read_uart_T = eq(io.dcache_read_req.bits.addr, UInt<32>("h0bfd003f8")) @[IoControl.scala 133:68]
    node dcache_read_uart = and(_dcache_read_uart_T, io.dcache_read_req.valid) @[IoControl.scala 133:92]
    node _dcache_write_uart_T = eq(io.dcache_write_req.bits.addr, UInt<32>("h0bfd003f8")) @[IoControl.scala 134:70]
    node dcache_write_uart = and(_dcache_write_uart_T, io.dcache_write_req.valid) @[IoControl.scala 134:94]
    node _dcache_read_uart_state_T = eq(io.dcache_read_req.bits.addr, UInt<32>("h0bfd003fc")) @[IoControl.scala 135:67]
    node dcache_read_uart_state = and(_dcache_read_uart_state_T, io.dcache_read_req.valid) @[IoControl.scala 135:91]
    node icache_read_addr = bits(io.icache_read_req.bits.addr, 21, 2) @[IoControl.scala 136:67]
    node dcache_read_addr = bits(io.dcache_read_req.bits.addr, 21, 2) @[IoControl.scala 137:67]
    node dcache_write_addr = bits(io.dcache_write_req.bits.addr, 21, 2) @[IoControl.scala 138:68]
    node _icache_read_other_T = eq(icache_read_base, UInt<1>("h00")) @[IoControl.scala 139:27]
    node _icache_read_other_T_1 = eq(icache_read_ext, UInt<1>("h00")) @[IoControl.scala 139:47]
    node _icache_read_other_T_2 = and(_icache_read_other_T, _icache_read_other_T_1) @[IoControl.scala 139:44]
    node icache_read_other = and(_icache_read_other_T_2, io.icache_read_req.valid) @[IoControl.scala 139:64]
    node _dcache_read_other_T = eq(dcache_read_base, UInt<1>("h00")) @[IoControl.scala 140:27]
    node _dcache_read_other_T_1 = eq(dcache_read_ext, UInt<1>("h00")) @[IoControl.scala 140:47]
    node _dcache_read_other_T_2 = and(_dcache_read_other_T, _dcache_read_other_T_1) @[IoControl.scala 140:44]
    node _dcache_read_other_T_3 = eq(dcache_read_uart, UInt<1>("h00")) @[IoControl.scala 140:67]
    node _dcache_read_other_T_4 = and(_dcache_read_other_T_2, _dcache_read_other_T_3) @[IoControl.scala 140:64]
    node dcache_read_other = and(_dcache_read_other_T_4, io.dcache_read_req.valid) @[IoControl.scala 140:85]
    node _dcache_write_other_T = eq(dcache_write_base, UInt<1>("h00")) @[IoControl.scala 141:28]
    node _dcache_write_other_T_1 = eq(dcache_write_ext, UInt<1>("h00")) @[IoControl.scala 141:49]
    node _dcache_write_other_T_2 = and(_dcache_write_other_T, _dcache_write_other_T_1) @[IoControl.scala 141:46]
    node _dcache_write_other_T_3 = eq(dcache_write_uart, UInt<1>("h00")) @[IoControl.scala 141:70]
    node _dcache_write_other_T_4 = and(_dcache_write_other_T_2, _dcache_write_other_T_3) @[IoControl.scala 141:67]
    node dcache_write_other = and(_dcache_write_other_T_4, io.dcache_write_req.valid) @[IoControl.scala 141:89]
    io.debug.base_state <= base_state @[IoControl.scala 143:23]
    io.debug.icache_read_base <= icache_read_base @[IoControl.scala 144:29]
    io.debug.icache_read_ext <= icache_read_ext @[IoControl.scala 145:28]
    io.debug.dcache_read_base <= dcache_read_base @[IoControl.scala 146:29]
    io.debug.dcache_read_ext <= dcache_read_ext @[IoControl.scala 147:28]
    io.debug.dcache_write_base <= dcache_write_base @[IoControl.scala 148:30]
    io.debug.dcache_write_ext <= dcache_write_ext @[IoControl.scala 149:29]
    io.debug.icache_read_addr <= icache_read_addr @[IoControl.scala 150:29]
    io.debug.dcache_read_addr <= dcache_read_addr @[IoControl.scala 151:29]
    io.debug.dcache_write_addr <= dcache_write_addr @[IoControl.scala 152:30]
    wire _icache_buffer_WIRE : UInt<32>[8] @[IoControl.scala 155:42]
    _icache_buffer_WIRE[0] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[1] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[2] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[3] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[4] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[5] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[6] <= UInt<32>("h00") @[IoControl.scala 155:42]
    _icache_buffer_WIRE[7] <= UInt<32>("h00") @[IoControl.scala 155:42]
    reg icache_buffer : UInt<32>[8], clock with : (reset => (reset, _icache_buffer_WIRE)) @[IoControl.scala 155:34]
    reg icache_data_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IoControl.scala 156:34]
    io.icache_read_req.ready <= icache_data_valid @[IoControl.scala 157:28]
    io.icache_read_resp.valid <= icache_data_valid @[IoControl.scala 158:29]
    node io_icache_read_resp_bits_data_lo_lo = cat(icache_buffer[1], icache_buffer[0]) @[IoControl.scala 159:56]
    node io_icache_read_resp_bits_data_lo_hi = cat(icache_buffer[3], icache_buffer[2]) @[IoControl.scala 159:56]
    node io_icache_read_resp_bits_data_lo = cat(io_icache_read_resp_bits_data_lo_hi, io_icache_read_resp_bits_data_lo_lo) @[IoControl.scala 159:56]
    node io_icache_read_resp_bits_data_hi_lo = cat(icache_buffer[5], icache_buffer[4]) @[IoControl.scala 159:56]
    node io_icache_read_resp_bits_data_hi_hi = cat(icache_buffer[7], icache_buffer[6]) @[IoControl.scala 159:56]
    node io_icache_read_resp_bits_data_hi = cat(io_icache_read_resp_bits_data_hi_hi, io_icache_read_resp_bits_data_hi_lo) @[IoControl.scala 159:56]
    node _io_icache_read_resp_bits_data_T = cat(io_icache_read_resp_bits_data_hi, io_icache_read_resp_bits_data_lo) @[IoControl.scala 159:56]
    io.icache_read_resp.bits.data <= _io_icache_read_resp_bits_data_T @[IoControl.scala 159:33]
    reg dcache_buffer : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[IoControl.scala 160:34]
    reg dcache_data_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IoControl.scala 161:34]
    io.dcache_read_req.ready <= dcache_data_valid @[IoControl.scala 162:28]
    io.dcache_read_resp.valid <= dcache_data_valid @[IoControl.scala 163:29]
    io.dcache_read_resp.bits.data <= dcache_buffer @[IoControl.scala 164:33]
    wire dcache_write_complete : UInt<1>
    dcache_write_complete <= UInt<1>("h00")
    io.dcache_write_req.ready <= dcache_write_complete @[IoControl.scala 166:29]
    reg other_state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[IoControl.scala 169:28]
    node _T = eq(UInt<2>("h00"), other_state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      when icache_read_other : @[IoControl.scala 173:30]
        wire _WIRE : UInt<32>[8] @[IoControl.scala 174:31]
        _WIRE[0] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[1] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[2] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[3] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[4] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[5] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[6] <= UInt<32>("h00") @[IoControl.scala 174:31]
        _WIRE[7] <= UInt<32>("h00") @[IoControl.scala 174:31]
        icache_buffer[0] <= _WIRE[0] @[IoControl.scala 174:22]
        icache_buffer[1] <= _WIRE[1] @[IoControl.scala 174:22]
        icache_buffer[2] <= _WIRE[2] @[IoControl.scala 174:22]
        icache_buffer[3] <= _WIRE[3] @[IoControl.scala 174:22]
        icache_buffer[4] <= _WIRE[4] @[IoControl.scala 174:22]
        icache_buffer[5] <= _WIRE[5] @[IoControl.scala 174:22]
        icache_buffer[6] <= _WIRE[6] @[IoControl.scala 174:22]
        icache_buffer[7] <= _WIRE[7] @[IoControl.scala 174:22]
        icache_data_valid <= UInt<1>("h01") @[IoControl.scala 175:26]
        other_state <= UInt<2>("h01") @[IoControl.scala 176:20]
        skip @[IoControl.scala 173:30]
      when dcache_read_other : @[IoControl.scala 178:30]
        dcache_buffer <= UInt<32>("h00") @[IoControl.scala 179:22]
        dcache_data_valid <= UInt<1>("h01") @[IoControl.scala 180:26]
        other_state <= UInt<2>("h02") @[IoControl.scala 181:20]
        skip @[IoControl.scala 178:30]
      when dcache_write_other : @[IoControl.scala 183:31]
        dcache_write_complete <= UInt<1>("h01") @[IoControl.scala 184:30]
        other_state <= UInt<2>("h03") @[IoControl.scala 185:20]
        skip @[IoControl.scala 183:31]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<2>("h01"), other_state) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        icache_data_valid <= UInt<1>("h00") @[IoControl.scala 189:24]
        other_state <= UInt<2>("h00") @[IoControl.scala 190:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), other_state) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          dcache_data_valid <= UInt<1>("h00") @[IoControl.scala 193:24]
          other_state <= UInt<2>("h00") @[IoControl.scala 194:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), other_state) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            other_state <= UInt<2>("h00") @[IoControl.scala 197:18]
            skip @[Conditional.scala 39:67]
    node _T_4 = eq(UInt<3>("h00"), base_state) @[Conditional.scala 37:30]
    when _T_4 : @[Conditional.scala 40:58]
      when dcache_write_base : @[IoControl.scala 206:31]
        base_state <= UInt<3>("h03") @[IoControl.scala 207:20]
        node _T_5 = not(io.dcache_write_req.bits.byte_mask) @[IoControl.scala 209:129]
        base_ram_ctrl.data_out <= io.dcache_write_req.bits.data @[IoControl.scala 30:14]
        base_ram_ctrl.addr <= dcache_write_addr @[IoControl.scala 31:10]
        base_ram_ctrl.be_n <= _T_5 @[IoControl.scala 32:10]
        base_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 33:10]
        base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 34:10]
        base_ram_ctrl.we_n <= UInt<1>("h00") @[IoControl.scala 35:10]
        base_clock_counter <= UInt<1>("h00") @[IoControl.scala 210:28]
        base_wait_counter <= UInt<1>("h00") @[IoControl.scala 211:27]
        skip @[IoControl.scala 206:31]
      else : @[IoControl.scala 212:36]
        when dcache_read_base : @[IoControl.scala 212:36]
          base_state <= UInt<3>("h02") @[IoControl.scala 213:20]
          base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
          base_ram_ctrl.addr <= dcache_read_addr @[IoControl.scala 22:10]
          base_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
          base_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
          base_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
          base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
          base_clock_counter <= UInt<1>("h00") @[IoControl.scala 215:28]
          base_wait_counter <= UInt<1>("h00") @[IoControl.scala 216:27]
          skip @[IoControl.scala 212:36]
        else : @[IoControl.scala 217:36]
          when icache_read_base : @[IoControl.scala 217:36]
            base_state <= UInt<3>("h01") @[IoControl.scala 218:20]
            base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
            base_ram_ctrl.addr <= icache_read_addr @[IoControl.scala 22:10]
            base_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
            base_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
            base_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
            base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
            base_clock_counter <= UInt<1>("h00") @[IoControl.scala 220:28]
            base_wait_counter <= UInt<1>("h00") @[IoControl.scala 221:27]
            skip @[IoControl.scala 217:36]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_6 = eq(UInt<3>("h01"), base_state) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        node _T_7 = eq(icache_read_base, UInt<1>("h00")) @[IoControl.scala 225:12]
        when _T_7 : @[IoControl.scala 225:31]
          base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
          base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
          base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
          base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
          base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
          base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
          base_state <= UInt<3>("h00") @[IoControl.scala 227:20]
          base_clock_counter <= UInt<1>("h00") @[IoControl.scala 228:28]
          base_wait_counter <= UInt<1>("h00") @[IoControl.scala 229:27]
          skip @[IoControl.scala 225:31]
        else : @[IoControl.scala 230:60]
          node _T_8 = eq(base_clock_counter, UInt<3>("h07")) @[IoControl.scala 230:37]
          when _T_8 : @[IoControl.scala 230:60]
            node _T_9 = eq(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 231:32]
            when _T_9 : @[IoControl.scala 231:49]
              node _T_10 = bits(base_clock_counter, 2, 0)
              icache_buffer[_T_10] <= io.base_ram_ctrl.data_in @[IoControl.scala 232:45]
              base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
              base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
              base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
              base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
              base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
              base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
              icache_data_valid <= UInt<1>("h01") @[IoControl.scala 234:29]
              base_state <= UInt<3>("h04") @[IoControl.scala 235:22]
              base_wait_counter <= UInt<1>("h00") @[IoControl.scala 236:28]
              skip @[IoControl.scala 231:49]
            else : @[IoControl.scala 237:20]
              node _base_wait_counter_T = add(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 238:47]
              node _base_wait_counter_T_1 = tail(_base_wait_counter_T, 1) @[IoControl.scala 238:47]
              base_wait_counter <= _base_wait_counter_T_1 @[IoControl.scala 238:28]
              skip @[IoControl.scala 237:20]
            skip @[IoControl.scala 230:60]
          else : @[IoControl.scala 240:19]
            node _T_11 = eq(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 241:32]
            when _T_11 : @[IoControl.scala 241:48]
              node _T_12 = add(base_ram_ctrl.addr, UInt<1>("h01")) @[IoControl.scala 242:49]
              node _T_13 = tail(_T_12, 1) @[IoControl.scala 242:49]
              base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
              base_ram_ctrl.addr <= _T_13 @[IoControl.scala 22:10]
              base_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
              base_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
              base_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
              base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
              node _T_14 = bits(base_clock_counter, 2, 0)
              icache_buffer[_T_14] <= io.base_ram_ctrl.data_in @[IoControl.scala 243:45]
              node _base_clock_counter_T = add(base_clock_counter, UInt<1>("h01")) @[IoControl.scala 244:52]
              node _base_clock_counter_T_1 = tail(_base_clock_counter_T, 1) @[IoControl.scala 244:52]
              base_clock_counter <= _base_clock_counter_T_1 @[IoControl.scala 244:30]
              base_wait_counter <= UInt<1>("h00") @[IoControl.scala 245:28]
              skip @[IoControl.scala 241:48]
            else : @[IoControl.scala 246:20]
              node _base_wait_counter_T_2 = add(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 247:47]
              node _base_wait_counter_T_3 = tail(_base_wait_counter_T_2, 1) @[IoControl.scala 247:47]
              base_wait_counter <= _base_wait_counter_T_3 @[IoControl.scala 247:28]
              skip @[IoControl.scala 246:20]
            skip @[IoControl.scala 240:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_15 = eq(UInt<3>("h04"), base_state) @[Conditional.scala 37:30]
        when _T_15 : @[Conditional.scala 39:67]
          base_state <= UInt<3>("h00") @[IoControl.scala 252:20]
          icache_data_valid <= UInt<1>("h00") @[IoControl.scala 253:27]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_16 = eq(UInt<3>("h02"), base_state) @[Conditional.scala 37:30]
          when _T_16 : @[Conditional.scala 39:67]
            node _T_17 = eq(dcache_read_base, UInt<1>("h00")) @[IoControl.scala 256:12]
            when _T_17 : @[IoControl.scala 256:31]
              base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
              base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
              base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
              base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
              base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
              base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
              base_state <= UInt<3>("h00") @[IoControl.scala 258:20]
              base_clock_counter <= UInt<1>("h00") @[IoControl.scala 259:28]
              base_wait_counter <= UInt<1>("h00") @[IoControl.scala 260:27]
              skip @[IoControl.scala 256:31]
            else : @[IoControl.scala 261:52]
              node _T_18 = eq(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 261:36]
              when _T_18 : @[IoControl.scala 261:52]
                base_state <= UInt<3>("h05") @[IoControl.scala 262:20]
                base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                dcache_buffer <= io.base_ram_ctrl.data_in @[IoControl.scala 264:23]
                dcache_data_valid <= UInt<1>("h01") @[IoControl.scala 265:27]
                skip @[IoControl.scala 261:52]
              else : @[IoControl.scala 266:18]
                node _base_wait_counter_T_4 = add(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 267:46]
                node _base_wait_counter_T_5 = tail(_base_wait_counter_T_4, 1) @[IoControl.scala 267:46]
                base_wait_counter <= _base_wait_counter_T_5 @[IoControl.scala 267:26]
                skip @[IoControl.scala 266:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_19 = eq(UInt<3>("h05"), base_state) @[Conditional.scala 37:30]
            when _T_19 : @[Conditional.scala 39:67]
              base_state <= UInt<3>("h00") @[IoControl.scala 271:20]
              dcache_data_valid <= UInt<1>("h00") @[IoControl.scala 272:27]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_20 = eq(UInt<3>("h03"), base_state) @[Conditional.scala 37:30]
              when _T_20 : @[Conditional.scala 39:67]
                node _T_21 = eq(dcache_write_base, UInt<1>("h00")) @[IoControl.scala 275:12]
                when _T_21 : @[IoControl.scala 275:32]
                  base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                  base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                  base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                  base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                  base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                  base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                  base_state <= UInt<3>("h00") @[IoControl.scala 277:20]
                  base_clock_counter <= UInt<1>("h00") @[IoControl.scala 278:28]
                  base_wait_counter <= UInt<1>("h00") @[IoControl.scala 279:27]
                  skip @[IoControl.scala 275:32]
                else : @[IoControl.scala 280:52]
                  node _T_22 = eq(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 280:36]
                  when _T_22 : @[IoControl.scala 280:52]
                    base_state <= UInt<3>("h00") @[IoControl.scala 281:20]
                    base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                    base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                    base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                    base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                    base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                    base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                    dcache_write_complete <= UInt<1>("h01") @[IoControl.scala 283:31]
                    skip @[IoControl.scala 280:52]
                  else : @[IoControl.scala 284:18]
                    node _base_wait_counter_T_6 = add(base_wait_counter, UInt<1>("h01")) @[IoControl.scala 285:46]
                    node _base_wait_counter_T_7 = tail(_base_wait_counter_T_6, 1) @[IoControl.scala 285:46]
                    base_wait_counter <= _base_wait_counter_T_7 @[IoControl.scala 285:26]
                    skip @[IoControl.scala 284:18]
                skip @[Conditional.scala 39:67]
    node _T_23 = eq(UInt<3>("h00"), ext_state) @[Conditional.scala 37:30]
    when _T_23 : @[Conditional.scala 40:58]
      when dcache_read_ext : @[IoControl.scala 292:29]
        ext_state <= UInt<3>("h02") @[IoControl.scala 293:19]
        ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
        ext_ram_ctrl.addr <= dcache_read_addr @[IoControl.scala 22:10]
        ext_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
        ext_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
        ext_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
        ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
        ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 295:27]
        ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 296:26]
        skip @[IoControl.scala 292:29]
      else : @[IoControl.scala 297:36]
        when dcache_write_ext : @[IoControl.scala 297:36]
          ext_state <= UInt<3>("h03") @[IoControl.scala 298:19]
          node _T_24 = not(io.dcache_write_req.bits.byte_mask) @[IoControl.scala 300:128]
          ext_ram_ctrl.data_out <= io.dcache_write_req.bits.data @[IoControl.scala 30:14]
          ext_ram_ctrl.addr <= dcache_write_addr @[IoControl.scala 31:10]
          ext_ram_ctrl.be_n <= _T_24 @[IoControl.scala 32:10]
          ext_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 33:10]
          ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 34:10]
          ext_ram_ctrl.we_n <= UInt<1>("h00") @[IoControl.scala 35:10]
          ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 301:27]
          ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 302:26]
          skip @[IoControl.scala 297:36]
        else : @[IoControl.scala 303:35]
          when icache_read_ext : @[IoControl.scala 303:35]
            ext_state <= UInt<3>("h01") @[IoControl.scala 304:19]
            ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
            ext_ram_ctrl.addr <= icache_read_addr @[IoControl.scala 22:10]
            ext_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
            ext_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
            ext_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
            ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
            ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 306:27]
            ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 307:26]
            skip @[IoControl.scala 303:35]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_25 = eq(UInt<3>("h01"), ext_state) @[Conditional.scala 37:30]
      when _T_25 : @[Conditional.scala 39:67]
        node _T_26 = eq(icache_read_ext, UInt<1>("h00")) @[IoControl.scala 311:12]
        when _T_26 : @[IoControl.scala 311:30]
          ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
          ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
          ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
          ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
          ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
          ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
          ext_state <= UInt<3>("h00") @[IoControl.scala 313:19]
          ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 314:27]
          ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 315:26]
          skip @[IoControl.scala 311:30]
        else : @[IoControl.scala 316:59]
          node _T_27 = eq(ext_clock_counter, UInt<3>("h07")) @[IoControl.scala 316:36]
          when _T_27 : @[IoControl.scala 316:59]
            node _T_28 = eq(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 317:31]
            when _T_28 : @[IoControl.scala 317:47]
              node _T_29 = bits(ext_clock_counter, 2, 0)
              icache_buffer[_T_29] <= io.ext_ram_ctrl.data_in @[IoControl.scala 318:44]
              ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
              ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
              ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
              ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
              ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
              ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
              icache_data_valid <= UInt<1>("h01") @[IoControl.scala 320:29]
              ext_state <= UInt<3>("h04") @[IoControl.scala 321:21]
              ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 322:27]
              skip @[IoControl.scala 317:47]
            else : @[IoControl.scala 323:20]
              node _ext_wait_counter_T = add(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 324:45]
              node _ext_wait_counter_T_1 = tail(_ext_wait_counter_T, 1) @[IoControl.scala 324:45]
              ext_wait_counter <= _ext_wait_counter_T_1 @[IoControl.scala 324:27]
              skip @[IoControl.scala 323:20]
            skip @[IoControl.scala 316:59]
          else : @[IoControl.scala 326:19]
            node _T_30 = eq(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 327:31]
            when _T_30 : @[IoControl.scala 327:47]
              node _T_31 = add(ext_ram_ctrl.addr, UInt<1>("h01")) @[IoControl.scala 328:47]
              node _T_32 = tail(_T_31, 1) @[IoControl.scala 328:47]
              ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 21:14]
              ext_ram_ctrl.addr <= _T_32 @[IoControl.scala 22:10]
              ext_ram_ctrl.be_n <= UInt<1>("h00") @[IoControl.scala 23:10]
              ext_ram_ctrl.ce_n <= UInt<1>("h00") @[IoControl.scala 24:10]
              ext_ram_ctrl.oe_n <= UInt<1>("h00") @[IoControl.scala 25:10]
              ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 26:10]
              node _T_33 = bits(ext_clock_counter, 2, 0)
              icache_buffer[_T_33] <= io.ext_ram_ctrl.data_in @[IoControl.scala 329:44]
              node _ext_clock_counter_T = add(ext_clock_counter, UInt<1>("h01")) @[IoControl.scala 330:50]
              node _ext_clock_counter_T_1 = tail(_ext_clock_counter_T, 1) @[IoControl.scala 330:50]
              ext_clock_counter <= _ext_clock_counter_T_1 @[IoControl.scala 330:29]
              ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 331:27]
              skip @[IoControl.scala 327:47]
            else : @[IoControl.scala 332:20]
              node _ext_wait_counter_T_2 = add(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 333:45]
              node _ext_wait_counter_T_3 = tail(_ext_wait_counter_T_2, 1) @[IoControl.scala 333:45]
              ext_wait_counter <= _ext_wait_counter_T_3 @[IoControl.scala 333:27]
              skip @[IoControl.scala 332:20]
            skip @[IoControl.scala 326:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_34 = eq(UInt<3>("h04"), ext_state) @[Conditional.scala 37:30]
        when _T_34 : @[Conditional.scala 39:67]
          ext_state <= UInt<3>("h00") @[IoControl.scala 338:17]
          icache_data_valid <= UInt<1>("h00") @[IoControl.scala 339:25]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_35 = eq(UInt<3>("h02"), ext_state) @[Conditional.scala 37:30]
          when _T_35 : @[Conditional.scala 39:67]
            node _T_36 = eq(dcache_read_ext, UInt<1>("h00")) @[IoControl.scala 342:12]
            when _T_36 : @[IoControl.scala 342:30]
              ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
              ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
              ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
              ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
              ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
              ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
              ext_state <= UInt<3>("h00") @[IoControl.scala 344:19]
              ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 345:27]
              ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 346:26]
              skip @[IoControl.scala 342:30]
            else : @[IoControl.scala 347:51]
              node _T_37 = eq(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 347:35]
              when _T_37 : @[IoControl.scala 347:51]
                ext_state <= UInt<3>("h05") @[IoControl.scala 348:19]
                ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                dcache_buffer <= io.ext_ram_ctrl.data_in @[IoControl.scala 350:23]
                dcache_data_valid <= UInt<1>("h01") @[IoControl.scala 351:27]
                skip @[IoControl.scala 347:51]
              else : @[IoControl.scala 352:18]
                node _ext_wait_counter_T_4 = add(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 353:44]
                node _ext_wait_counter_T_5 = tail(_ext_wait_counter_T_4, 1) @[IoControl.scala 353:44]
                ext_wait_counter <= _ext_wait_counter_T_5 @[IoControl.scala 353:25]
                skip @[IoControl.scala 352:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_38 = eq(UInt<3>("h05"), ext_state) @[Conditional.scala 37:30]
            when _T_38 : @[Conditional.scala 39:67]
              ext_state <= UInt<3>("h00") @[IoControl.scala 357:17]
              dcache_data_valid <= UInt<1>("h00") @[IoControl.scala 358:25]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_39 = eq(UInt<3>("h03"), ext_state) @[Conditional.scala 37:30]
              when _T_39 : @[Conditional.scala 39:67]
                node _T_40 = eq(dcache_write_ext, UInt<1>("h00")) @[IoControl.scala 361:12]
                when _T_40 : @[IoControl.scala 361:31]
                  ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                  ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                  ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                  ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                  ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                  ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                  ext_state <= UInt<3>("h00") @[IoControl.scala 363:19]
                  ext_clock_counter <= UInt<1>("h00") @[IoControl.scala 364:27]
                  ext_wait_counter <= UInt<1>("h00") @[IoControl.scala 365:26]
                  skip @[IoControl.scala 361:31]
                else : @[IoControl.scala 366:51]
                  node _T_41 = eq(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 366:35]
                  when _T_41 : @[IoControl.scala 366:51]
                    ext_state <= UInt<3>("h00") @[IoControl.scala 367:19]
                    ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
                    ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
                    ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
                    ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
                    ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
                    ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
                    dcache_write_complete <= UInt<1>("h01") @[IoControl.scala 369:31]
                    skip @[IoControl.scala 366:51]
                  else : @[IoControl.scala 370:18]
                    node _ext_wait_counter_T_6 = add(ext_wait_counter, UInt<1>("h01")) @[IoControl.scala 371:44]
                    node _ext_wait_counter_T_7 = tail(_ext_wait_counter_T_6, 1) @[IoControl.scala 371:44]
                    ext_wait_counter <= _ext_wait_counter_T_7 @[IoControl.scala 371:25]
                    skip @[IoControl.scala 370:18]
                skip @[Conditional.scala 39:67]
    reg uart_buffer : {data : UInt<8>, rob_idx : UInt<3>}[8], clock @[IoControl.scala 378:24]
    wire _uart_buffer_wait_WIRE : UInt<1>[8] @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[0] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[1] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[2] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[3] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[4] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[5] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[6] <= UInt<1>("h00") @[IoControl.scala 379:41]
    _uart_buffer_wait_WIRE[7] <= UInt<1>("h00") @[IoControl.scala 379:41]
    reg uart_buffer_wait : UInt<1>[8], clock with : (reset => (reset, _uart_buffer_wait_WIRE)) @[IoControl.scala 379:33]
    reg uart_head : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[IoControl.scala 380:26]
    node head_idx_hi = bits(uart_head, 7, 4) @[OneHot.scala 30:18]
    node head_idx_lo = bits(uart_head, 3, 0) @[OneHot.scala 31:18]
    node head_idx_hi_1 = orr(head_idx_hi) @[OneHot.scala 32:14]
    node _head_idx_T = or(head_idx_hi, head_idx_lo) @[OneHot.scala 32:28]
    node head_idx_hi_2 = bits(_head_idx_T, 3, 2) @[OneHot.scala 30:18]
    node head_idx_lo_1 = bits(_head_idx_T, 1, 0) @[OneHot.scala 31:18]
    node head_idx_hi_3 = orr(head_idx_hi_2) @[OneHot.scala 32:14]
    node _head_idx_T_1 = or(head_idx_hi_2, head_idx_lo_1) @[OneHot.scala 32:28]
    node head_idx_lo_2 = bits(_head_idx_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node head_idx_lo_3 = cat(head_idx_hi_3, head_idx_lo_2) @[Cat.scala 30:58]
    node head_idx = cat(head_idx_hi_1, head_idx_lo_3) @[Cat.scala 30:58]
    reg uart_flush_head : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[IoControl.scala 382:32]
    reg uart_tail : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[IoControl.scala 383:26]
    node tail_idx_hi = bits(uart_tail, 7, 4) @[OneHot.scala 30:18]
    node tail_idx_lo = bits(uart_tail, 3, 0) @[OneHot.scala 31:18]
    node tail_idx_hi_1 = orr(tail_idx_hi) @[OneHot.scala 32:14]
    node _tail_idx_T = or(tail_idx_hi, tail_idx_lo) @[OneHot.scala 32:28]
    node tail_idx_hi_2 = bits(_tail_idx_T, 3, 2) @[OneHot.scala 30:18]
    node tail_idx_lo_1 = bits(_tail_idx_T, 1, 0) @[OneHot.scala 31:18]
    node tail_idx_hi_3 = orr(tail_idx_hi_2) @[OneHot.scala 32:14]
    node _tail_idx_T_1 = or(tail_idx_hi_2, tail_idx_lo_1) @[OneHot.scala 32:28]
    node tail_idx_lo_2 = bits(_tail_idx_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node tail_idx_lo_3 = cat(tail_idx_hi_3, tail_idx_lo_2) @[Cat.scala 30:58]
    node tail_idx = cat(tail_idx_hi_1, tail_idx_lo_3) @[Cat.scala 30:58]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IoControl.scala 385:27]
    reg maybe_true_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IoControl.scala 386:32]
    node _uart_full_T = eq(uart_flush_head, uart_tail) @[IoControl.scala 387:34]
    node uart_full = and(_uart_full_T, maybe_true_full) @[IoControl.scala 387:46]
    node _uart_empty_T = eq(uart_head, uart_tail) @[IoControl.scala 388:29]
    node _uart_empty_T_1 = eq(maybe_full, UInt<1>("h00")) @[IoControl.scala 388:44]
    node uart_empty = and(_uart_empty_T, _uart_empty_T_1) @[IoControl.scala 388:41]
    wire write_req : UInt<1>
    write_req <= UInt<1>("h00")
    wire write_ready : UInt<1>
    write_ready <= UInt<1>("h00")
    wire read_req : UInt<1>
    read_req <= UInt<1>("h00")
    wire read_data : UInt<8>
    read_data <= UInt<8>("h00")
    wire read_valid : UInt<1>
    read_valid <= UInt<1>("h00")
    wire read_rob_idx : UInt<3>
    read_rob_idx <= UInt<3>("h00")
    wire write_data : UInt<8>
    write_data <= UInt<8>("h00")
    node _uart_enq_T = eq(uart_full, UInt<1>("h00")) @[IoControl.scala 396:18]
    node uart_enq = and(_uart_enq_T, write_req) @[IoControl.scala 396:28]
    node _uart_deq_T = eq(uart_empty, UInt<1>("h00")) @[IoControl.scala 397:18]
    node uart_deq = and(_uart_deq_T, read_req) @[IoControl.scala 397:29]
    read_data <= uart_buffer[head_idx].data @[IoControl.scala 399:12]
    node _read_valid_T = eq(uart_empty, UInt<1>("h00")) @[IoControl.scala 400:16]
    read_valid <= _read_valid_T @[IoControl.scala 400:13]
    node _write_ready_T = eq(uart_full, UInt<1>("h00")) @[IoControl.scala 401:17]
    write_ready <= _write_ready_T @[IoControl.scala 401:14]
    when uart_enq : @[IoControl.scala 403:17]
      uart_buffer[tail_idx].data <= write_data @[IoControl.scala 404:31]
      uart_buffer[tail_idx].rob_idx <= UInt<1>("h00") @[IoControl.scala 405:34]
      node uart_tail_hi = bits(uart_tail, 6, 0) @[IoControl.scala 106:12]
      node uart_tail_lo = bits(uart_tail, 7, 7) @[IoControl.scala 106:29]
      node _uart_tail_T = cat(uart_tail_hi, uart_tail_lo) @[Cat.scala 30:58]
      uart_tail <= _uart_tail_T @[IoControl.scala 406:14]
      skip @[IoControl.scala 403:17]
    when uart_deq : @[IoControl.scala 409:18]
      uart_buffer[head_idx].rob_idx <= read_rob_idx @[IoControl.scala 410:34]
      uart_buffer_wait[head_idx] <= UInt<1>("h01") @[IoControl.scala 411:31]
      node uart_head_hi = bits(uart_head, 6, 0) @[IoControl.scala 106:12]
      node uart_head_lo = bits(uart_head, 7, 7) @[IoControl.scala 106:29]
      node _uart_head_T = cat(uart_head_hi, uart_head_lo) @[Cat.scala 30:58]
      uart_head <= _uart_head_T @[IoControl.scala 412:14]
      skip @[IoControl.scala 409:18]
    wire _will_drop_WIRE : UInt<1>[2] @[IoControl.scala 416:35]
    _will_drop_WIRE[0] <= UInt<1>("h00") @[IoControl.scala 416:35]
    _will_drop_WIRE[1] <= UInt<1>("h00") @[IoControl.scala 416:35]
    wire will_drop : UInt<1>[2]
    will_drop[0] <= _will_drop_WIRE[0]
    will_drop[1] <= _will_drop_WIRE[1]
    node flush_head_idx_hi = bits(uart_flush_head, 7, 4) @[OneHot.scala 30:18]
    node flush_head_idx_lo = bits(uart_flush_head, 3, 0) @[OneHot.scala 31:18]
    node flush_head_idx_hi_1 = orr(flush_head_idx_hi) @[OneHot.scala 32:14]
    node _flush_head_idx_T = or(flush_head_idx_hi, flush_head_idx_lo) @[OneHot.scala 32:28]
    node flush_head_idx_hi_2 = bits(_flush_head_idx_T, 3, 2) @[OneHot.scala 30:18]
    node flush_head_idx_lo_1 = bits(_flush_head_idx_T, 1, 0) @[OneHot.scala 31:18]
    node flush_head_idx_hi_3 = orr(flush_head_idx_hi_2) @[OneHot.scala 32:14]
    node _flush_head_idx_T_1 = or(flush_head_idx_hi_2, flush_head_idx_lo_1) @[OneHot.scala 32:28]
    node flush_head_idx_lo_2 = bits(_flush_head_idx_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node flush_head_idx_lo_3 = cat(flush_head_idx_hi_3, flush_head_idx_lo_2) @[Cat.scala 30:58]
    node flush_head_idx = cat(flush_head_idx_hi_1, flush_head_idx_lo_3) @[Cat.scala 30:58]
    node _T_42 = eq(uart_buffer[flush_head_idx].rob_idx, io.rob_commit[0].bits.des_rob) @[IoControl.scala 420:47]
    node _T_43 = and(_T_42, io.rob_commit[0].valid) @[IoControl.scala 420:79]
    node _T_44 = and(_T_43, uart_buffer_wait[flush_head_idx]) @[IoControl.scala 420:103]
    when _T_44 : @[IoControl.scala 420:138]
      uart_buffer[flush_head_idx].rob_idx <= UInt<1>("h00") @[IoControl.scala 421:44]
      uart_buffer_wait[flush_head_idx] <= UInt<1>("h00") @[IoControl.scala 422:41]
      will_drop[0] <= UInt<1>("h01") @[IoControl.scala 423:21]
      skip @[IoControl.scala 420:138]
    node _T_45 = eq(uart_buffer[flush_head_idx].rob_idx, io.rob_commit[1].bits.des_rob) @[IoControl.scala 420:47]
    node _T_46 = and(_T_45, io.rob_commit[1].valid) @[IoControl.scala 420:79]
    node _T_47 = and(_T_46, uart_buffer_wait[flush_head_idx]) @[IoControl.scala 420:103]
    when _T_47 : @[IoControl.scala 420:138]
      uart_buffer[flush_head_idx].rob_idx <= UInt<1>("h00") @[IoControl.scala 421:44]
      uart_buffer_wait[flush_head_idx] <= UInt<1>("h00") @[IoControl.scala 422:41]
      will_drop[0] <= UInt<1>("h01") @[IoControl.scala 423:21]
      skip @[IoControl.scala 420:138]
    node flush_head_idx_hi_4 = bits(uart_flush_head, 6, 0) @[IoControl.scala 106:12]
    node flush_head_idx_lo_4 = bits(uart_flush_head, 7, 7) @[IoControl.scala 106:29]
    node _flush_head_idx_T_2 = cat(flush_head_idx_hi_4, flush_head_idx_lo_4) @[Cat.scala 30:58]
    node flush_head_idx_hi_5 = bits(_flush_head_idx_T_2, 7, 4) @[OneHot.scala 30:18]
    node flush_head_idx_lo_5 = bits(_flush_head_idx_T_2, 3, 0) @[OneHot.scala 31:18]
    node flush_head_idx_hi_6 = orr(flush_head_idx_hi_5) @[OneHot.scala 32:14]
    node _flush_head_idx_T_3 = or(flush_head_idx_hi_5, flush_head_idx_lo_5) @[OneHot.scala 32:28]
    node flush_head_idx_hi_7 = bits(_flush_head_idx_T_3, 3, 2) @[OneHot.scala 30:18]
    node flush_head_idx_lo_6 = bits(_flush_head_idx_T_3, 1, 0) @[OneHot.scala 31:18]
    node flush_head_idx_hi_8 = orr(flush_head_idx_hi_7) @[OneHot.scala 32:14]
    node _flush_head_idx_T_4 = or(flush_head_idx_hi_7, flush_head_idx_lo_6) @[OneHot.scala 32:28]
    node flush_head_idx_lo_7 = bits(_flush_head_idx_T_4, 1, 1) @[CircuitMath.scala 30:8]
    node flush_head_idx_lo_8 = cat(flush_head_idx_hi_8, flush_head_idx_lo_7) @[Cat.scala 30:58]
    node flush_head_idx_1 = cat(flush_head_idx_hi_6, flush_head_idx_lo_8) @[Cat.scala 30:58]
    node _T_48 = eq(uart_buffer[flush_head_idx_1].rob_idx, io.rob_commit[0].bits.des_rob) @[IoControl.scala 420:47]
    node _T_49 = and(_T_48, io.rob_commit[0].valid) @[IoControl.scala 420:79]
    node _T_50 = and(_T_49, uart_buffer_wait[flush_head_idx_1]) @[IoControl.scala 420:103]
    when _T_50 : @[IoControl.scala 420:138]
      uart_buffer[flush_head_idx_1].rob_idx <= UInt<1>("h00") @[IoControl.scala 421:44]
      uart_buffer_wait[flush_head_idx_1] <= UInt<1>("h00") @[IoControl.scala 422:41]
      will_drop[1] <= UInt<1>("h01") @[IoControl.scala 423:21]
      skip @[IoControl.scala 420:138]
    node _T_51 = eq(uart_buffer[flush_head_idx_1].rob_idx, io.rob_commit[1].bits.des_rob) @[IoControl.scala 420:47]
    node _T_52 = and(_T_51, io.rob_commit[1].valid) @[IoControl.scala 420:79]
    node _T_53 = and(_T_52, uart_buffer_wait[flush_head_idx_1]) @[IoControl.scala 420:103]
    when _T_53 : @[IoControl.scala 420:138]
      uart_buffer[flush_head_idx_1].rob_idx <= UInt<1>("h00") @[IoControl.scala 421:44]
      uart_buffer_wait[flush_head_idx_1] <= UInt<1>("h00") @[IoControl.scala 422:41]
      will_drop[1] <= UInt<1>("h01") @[IoControl.scala 423:21]
      skip @[IoControl.scala 420:138]
    node next_flush_head_hi = bits(uart_flush_head, 6, 0) @[IoControl.scala 106:12]
    node next_flush_head_lo = bits(uart_flush_head, 7, 7) @[IoControl.scala 106:29]
    node _next_flush_head_T = cat(next_flush_head_hi, next_flush_head_lo) @[Cat.scala 30:58]
    node _next_flush_head_T_1 = mux(will_drop[0], _next_flush_head_T, uart_flush_head) @[IoControl.scala 427:84]
    node next_flush_head_hi_1 = bits(uart_flush_head, 5, 0) @[IoControl.scala 106:12]
    node next_flush_head_lo_1 = bits(uart_flush_head, 7, 6) @[IoControl.scala 106:29]
    node _next_flush_head_T_2 = cat(next_flush_head_hi_1, next_flush_head_lo_1) @[Cat.scala 30:58]
    node next_flush_head = mux(will_drop[1], _next_flush_head_T_2, _next_flush_head_T_1) @[IoControl.scala 427:84]
    uart_flush_head <= next_flush_head @[IoControl.scala 428:18]
    when uart_enq : @[IoControl.scala 430:17]
      maybe_true_full <= UInt<1>("h01") @[IoControl.scala 431:20]
      skip @[IoControl.scala 430:17]
    else : @[IoControl.scala 432:36]
      node _T_54 = or(will_drop[0], will_drop[1]) @[IoControl.scala 432:32]
      when _T_54 : @[IoControl.scala 432:36]
        maybe_true_full <= UInt<1>("h00") @[IoControl.scala 433:20]
        skip @[IoControl.scala 432:36]
    when uart_enq : @[IoControl.scala 435:17]
      maybe_full <= UInt<1>("h01") @[IoControl.scala 436:15]
      skip @[IoControl.scala 435:17]
    else : @[IoControl.scala 437:23]
      when uart_deq : @[IoControl.scala 437:23]
        maybe_full <= UInt<1>("h00") @[IoControl.scala 438:15]
        skip @[IoControl.scala 437:23]
    when io.need_flush : @[IoControl.scala 441:22]
      uart_head <= next_flush_head @[IoControl.scala 442:14]
      uart_buffer_wait[0] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[1] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[2] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[3] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[4] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[5] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[6] <= UInt<1>("h00") @[IoControl.scala 444:26]
      uart_buffer_wait[7] <= UInt<1>("h00") @[IoControl.scala 444:26]
      maybe_full <= maybe_true_full @[IoControl.scala 446:15]
      skip @[IoControl.scala 441:22]
    reg uart_state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[IoControl.scala 452:27]
    reg txd_uart_start : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IoControl.scala 453:31]
    reg txd_uart_data : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[IoControl.scala 454:30]
    io.txd.uart_start <= txd_uart_start @[IoControl.scala 455:20]
    io.txd.uart_data <= txd_uart_data @[IoControl.scala 456:19]
    node _T_55 = and(io.rxd.uart_ready, write_ready) @[IoControl.scala 458:25]
    when _T_55 : @[IoControl.scala 458:40]
      write_data <= io.rxd.uart_data @[IoControl.scala 459:15]
      write_req <= UInt<1>("h01") @[IoControl.scala 460:14]
      io.rxd.uart_clear <= UInt<1>("h01") @[IoControl.scala 461:22]
      skip @[IoControl.scala 458:40]
    else : @[IoControl.scala 462:14]
      io.rxd.uart_clear <= UInt<1>("h00") @[IoControl.scala 463:22]
      write_req <= UInt<1>("h00") @[IoControl.scala 464:14]
      write_data is invalid @[IoControl.scala 465:15]
      skip @[IoControl.scala 462:14]
    node _T_56 = eq(UInt<2>("h00"), uart_state) @[Conditional.scala 37:30]
    when _T_56 : @[Conditional.scala 40:58]
      node _T_57 = eq(io.txd.uart_busy, UInt<1>("h00")) @[IoControl.scala 470:32]
      node _T_58 = and(dcache_write_uart, _T_57) @[IoControl.scala 470:29]
      when _T_58 : @[IoControl.scala 470:50]
        txd_uart_start <= UInt<1>("h01") @[IoControl.scala 471:23]
        node _txd_uart_data_T = bits(io.dcache_write_req.bits.data, 7, 0) @[IoControl.scala 472:53]
        txd_uart_data <= _txd_uart_data_T @[IoControl.scala 472:22]
        dcache_write_complete <= UInt<1>("h01") @[IoControl.scala 473:30]
        uart_state <= UInt<2>("h02") @[IoControl.scala 474:19]
        skip @[IoControl.scala 470:50]
      else : @[IoControl.scala 475:48]
        node _T_59 = and(dcache_read_uart, read_valid) @[IoControl.scala 475:34]
        when _T_59 : @[IoControl.scala 475:48]
          node _dcache_buffer_T = cat(UInt<24>("h00"), read_data) @[Cat.scala 30:58]
          dcache_buffer <= _dcache_buffer_T @[IoControl.scala 476:22]
          dcache_data_valid <= UInt<1>("h01") @[IoControl.scala 477:26]
          read_req <= UInt<1>("h01") @[IoControl.scala 478:17]
          read_rob_idx <= io.dcache_read_req.bits.rob_idx @[IoControl.scala 479:21]
          uart_state <= UInt<2>("h01") @[IoControl.scala 480:19]
          skip @[IoControl.scala 475:48]
        else : @[IoControl.scala 481:41]
          when dcache_read_uart_state : @[IoControl.scala 481:41]
            node dcache_buffer_lo = eq(io.txd.uart_busy, UInt<1>("h00")) @[IoControl.scala 482:49]
            node dcache_buffer_hi = cat(UInt<30>("h00"), read_valid) @[Cat.scala 30:58]
            node _dcache_buffer_T_1 = cat(dcache_buffer_hi, dcache_buffer_lo) @[Cat.scala 30:58]
            dcache_buffer <= _dcache_buffer_T_1 @[IoControl.scala 482:22]
            dcache_data_valid <= UInt<1>("h01") @[IoControl.scala 483:26]
            uart_state <= UInt<2>("h01") @[IoControl.scala 484:19]
            skip @[IoControl.scala 481:41]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_60 = eq(UInt<2>("h02"), uart_state) @[Conditional.scala 37:30]
      when _T_60 : @[Conditional.scala 39:67]
        txd_uart_start <= UInt<1>("h00") @[IoControl.scala 488:21]
        uart_state <= UInt<2>("h00") @[IoControl.scala 489:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_61 = eq(UInt<2>("h01"), uart_state) @[Conditional.scala 37:30]
        when _T_61 : @[Conditional.scala 39:67]
          dcache_data_valid <= UInt<1>("h00") @[IoControl.scala 492:24]
          uart_state <= UInt<2>("h00") @[IoControl.scala 493:17]
          skip @[Conditional.scala 39:67]
    node _T_62 = asUInt(reset) @[IoControl.scala 498:20]
    when _T_62 : @[IoControl.scala 498:24]
      base_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
      base_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
      base_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
      base_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
      base_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
      base_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
      ext_ram_ctrl.data_out <= UInt<1>("h00") @[IoControl.scala 12:14]
      ext_ram_ctrl.addr <= UInt<1>("h00") @[IoControl.scala 13:10]
      ext_ram_ctrl.be_n <= UInt<4>("h0f") @[IoControl.scala 14:10]
      ext_ram_ctrl.ce_n <= UInt<1>("h01") @[IoControl.scala 15:10]
      ext_ram_ctrl.oe_n <= UInt<1>("h01") @[IoControl.scala 16:10]
      ext_ram_ctrl.we_n <= UInt<1>("h01") @[IoControl.scala 17:10]
      uart_buffer[0].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[0].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[1].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[1].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[2].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[2].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[3].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[3].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[4].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[4].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[5].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[5].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[6].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[6].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      uart_buffer[7].rob_idx <= UInt<1>("h00") @[IoControl.scala 502:16]
      uart_buffer[7].data <= UInt<1>("h00") @[IoControl.scala 503:13]
      skip @[IoControl.scala 498:24]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {base_ram_ctrl : {flip data_in : UInt<32>, ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}}, ext_ram_ctrl : {flip data_in : UInt<32>, ctrl : {data_out : UInt<32>, addr : UInt<20>, be_n : UInt<4>, ce_n : UInt<1>, oe_n : UInt<1>, we_n : UInt<1>}}, rxd : {flip uart_ready : UInt<1>, uart_clear : UInt<1>, flip uart_data : UInt<8>}, txd : {uart_start : UInt<1>, uart_data : UInt<8>, flip uart_busy : UInt<1>}, io_control_debug : {base_state : UInt<3>, icache_read_base : UInt<1>, icache_read_ext : UInt<1>, dcache_read_base : UInt<1>, dcache_read_ext : UInt<1>, dcache_write_base : UInt<1>, dcache_write_ext : UInt<1>, icache_read_addr : UInt<20>, dcache_read_addr : UInt<20>, dcache_write_addr : UInt<20>}, icache_debug : {state : UInt<1>, hit_cache : UInt<1>, cache_we : UInt<1>, cache_read_tag : UInt<20>, icache_req : {valid : UInt<1>, bits : {addr : UInt<32>}}}, bpu_debug : {branch_mask : UInt<8>, fetched_mask : UInt<8>, predict_branch : UInt<8>, predict_addr : UInt<32>, is_taken : UInt<1>, take_delay : UInt<1>, inst_packet : UInt<32>[8]}}
    
    inst core of Core @[Top.scala 17:20]
    core.clock <= clock
    core.reset <= reset
    inst io_control of IoControl @[Top.scala 18:26]
    io_control.clock <= clock
    io_control.reset <= reset
    io_control.io.icache_read_req.bits.addr <= core.io.icache_io_read_req.bits.addr @[Top.scala 19:30]
    io_control.io.icache_read_req.valid <= core.io.icache_io_read_req.valid @[Top.scala 19:30]
    core.io.icache_io_read_req.ready <= io_control.io.icache_read_req.ready @[Top.scala 19:30]
    core.io.icache_io_read_resp.bits.data <= io_control.io.icache_read_resp.bits.data @[Top.scala 20:30]
    core.io.icache_io_read_resp.valid <= io_control.io.icache_read_resp.valid @[Top.scala 20:30]
    io_control.io.icache_read_resp.ready <= core.io.icache_io_read_resp.ready @[Top.scala 20:30]
    io_control.io.dcache_read_req.bits.rob_idx <= core.io.dcache_io_read_req.bits.rob_idx @[Top.scala 21:30]
    io_control.io.dcache_read_req.bits.addr <= core.io.dcache_io_read_req.bits.addr @[Top.scala 21:30]
    io_control.io.dcache_read_req.valid <= core.io.dcache_io_read_req.valid @[Top.scala 21:30]
    core.io.dcache_io_read_req.ready <= io_control.io.dcache_read_req.ready @[Top.scala 21:30]
    core.io.dcache_io_read_resp.bits.data <= io_control.io.dcache_read_resp.bits.data @[Top.scala 22:30]
    core.io.dcache_io_read_resp.valid <= io_control.io.dcache_read_resp.valid @[Top.scala 22:30]
    io_control.io.dcache_read_resp.ready <= core.io.dcache_io_read_resp.ready @[Top.scala 22:30]
    io_control.io.dcache_write_req.bits.byte_mask <= core.io.dcache_io_write_req.bits.byte_mask @[Top.scala 23:30]
    io_control.io.dcache_write_req.bits.data <= core.io.dcache_io_write_req.bits.data @[Top.scala 23:30]
    io_control.io.dcache_write_req.bits.addr <= core.io.dcache_io_write_req.bits.addr @[Top.scala 23:30]
    io_control.io.dcache_write_req.valid <= core.io.dcache_io_write_req.valid @[Top.scala 23:30]
    core.io.dcache_io_write_req.ready <= io_control.io.dcache_write_req.ready @[Top.scala 23:30]
    io_control.io.need_flush <= core.io.need_flush @[Top.scala 24:21]
    io_control.io.rob_commit[0].bits.commit_data <= core.io.rob_commit[0].bits.commit_data @[Top.scala 25:21]
    io_control.io.rob_commit[0].bits.commit_addr <= core.io.rob_commit[0].bits.commit_addr @[Top.scala 25:21]
    io_control.io.rob_commit[0].bits.des_rob <= core.io.rob_commit[0].bits.des_rob @[Top.scala 25:21]
    io_control.io.rob_commit[0].valid <= core.io.rob_commit[0].valid @[Top.scala 25:21]
    io_control.io.rob_commit[1].bits.commit_data <= core.io.rob_commit[1].bits.commit_data @[Top.scala 25:21]
    io_control.io.rob_commit[1].bits.commit_addr <= core.io.rob_commit[1].bits.commit_addr @[Top.scala 25:21]
    io_control.io.rob_commit[1].bits.des_rob <= core.io.rob_commit[1].bits.des_rob @[Top.scala 25:21]
    io_control.io.rob_commit[1].valid <= core.io.rob_commit[1].valid @[Top.scala 25:21]
    io.ext_ram_ctrl.ctrl.we_n <= io_control.io.ext_ram_ctrl.ctrl.we_n @[Top.scala 27:18]
    io.ext_ram_ctrl.ctrl.oe_n <= io_control.io.ext_ram_ctrl.ctrl.oe_n @[Top.scala 27:18]
    io.ext_ram_ctrl.ctrl.ce_n <= io_control.io.ext_ram_ctrl.ctrl.ce_n @[Top.scala 27:18]
    io.ext_ram_ctrl.ctrl.be_n <= io_control.io.ext_ram_ctrl.ctrl.be_n @[Top.scala 27:18]
    io.ext_ram_ctrl.ctrl.addr <= io_control.io.ext_ram_ctrl.ctrl.addr @[Top.scala 27:18]
    io.ext_ram_ctrl.ctrl.data_out <= io_control.io.ext_ram_ctrl.ctrl.data_out @[Top.scala 27:18]
    io_control.io.ext_ram_ctrl.data_in <= io.ext_ram_ctrl.data_in @[Top.scala 27:18]
    io.base_ram_ctrl.ctrl.we_n <= io_control.io.base_ram_ctrl.ctrl.we_n @[Top.scala 28:19]
    io.base_ram_ctrl.ctrl.oe_n <= io_control.io.base_ram_ctrl.ctrl.oe_n @[Top.scala 28:19]
    io.base_ram_ctrl.ctrl.ce_n <= io_control.io.base_ram_ctrl.ctrl.ce_n @[Top.scala 28:19]
    io.base_ram_ctrl.ctrl.be_n <= io_control.io.base_ram_ctrl.ctrl.be_n @[Top.scala 28:19]
    io.base_ram_ctrl.ctrl.addr <= io_control.io.base_ram_ctrl.ctrl.addr @[Top.scala 28:19]
    io.base_ram_ctrl.ctrl.data_out <= io_control.io.base_ram_ctrl.ctrl.data_out @[Top.scala 28:19]
    io_control.io.base_ram_ctrl.data_in <= io.base_ram_ctrl.data_in @[Top.scala 28:19]
    io_control.io.rxd.uart_data <= io.rxd.uart_data @[Top.scala 29:9]
    io.rxd.uart_clear <= io_control.io.rxd.uart_clear @[Top.scala 29:9]
    io_control.io.rxd.uart_ready <= io.rxd.uart_ready @[Top.scala 29:9]
    io_control.io.txd.uart_busy <= io.txd.uart_busy @[Top.scala 30:9]
    io.txd.uart_data <= io_control.io.txd.uart_data @[Top.scala 30:9]
    io.txd.uart_start <= io_control.io.txd.uart_start @[Top.scala 30:9]
    io.io_control_debug.dcache_write_addr <= io_control.io.debug.dcache_write_addr @[Top.scala 32:22]
    io.io_control_debug.dcache_read_addr <= io_control.io.debug.dcache_read_addr @[Top.scala 32:22]
    io.io_control_debug.icache_read_addr <= io_control.io.debug.icache_read_addr @[Top.scala 32:22]
    io.io_control_debug.dcache_write_ext <= io_control.io.debug.dcache_write_ext @[Top.scala 32:22]
    io.io_control_debug.dcache_write_base <= io_control.io.debug.dcache_write_base @[Top.scala 32:22]
    io.io_control_debug.dcache_read_ext <= io_control.io.debug.dcache_read_ext @[Top.scala 32:22]
    io.io_control_debug.dcache_read_base <= io_control.io.debug.dcache_read_base @[Top.scala 32:22]
    io.io_control_debug.icache_read_ext <= io_control.io.debug.icache_read_ext @[Top.scala 32:22]
    io.io_control_debug.icache_read_base <= io_control.io.debug.icache_read_base @[Top.scala 32:22]
    io.io_control_debug.base_state <= io_control.io.debug.base_state @[Top.scala 32:22]
    io.icache_debug.icache_req.bits.addr <= core.io.icache_debug.icache_req.bits.addr @[Top.scala 33:18]
    io.icache_debug.icache_req.valid <= core.io.icache_debug.icache_req.valid @[Top.scala 33:18]
    io.icache_debug.cache_read_tag <= core.io.icache_debug.cache_read_tag @[Top.scala 33:18]
    io.icache_debug.cache_we <= core.io.icache_debug.cache_we @[Top.scala 33:18]
    io.icache_debug.hit_cache <= core.io.icache_debug.hit_cache @[Top.scala 33:18]
    io.icache_debug.state <= core.io.icache_debug.state @[Top.scala 33:18]
    io.bpu_debug.inst_packet[0] <= core.io.bpu_debug.inst_packet[0] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[1] <= core.io.bpu_debug.inst_packet[1] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[2] <= core.io.bpu_debug.inst_packet[2] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[3] <= core.io.bpu_debug.inst_packet[3] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[4] <= core.io.bpu_debug.inst_packet[4] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[5] <= core.io.bpu_debug.inst_packet[5] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[6] <= core.io.bpu_debug.inst_packet[6] @[Top.scala 34:15]
    io.bpu_debug.inst_packet[7] <= core.io.bpu_debug.inst_packet[7] @[Top.scala 34:15]
    io.bpu_debug.take_delay <= core.io.bpu_debug.take_delay @[Top.scala 34:15]
    io.bpu_debug.is_taken <= core.io.bpu_debug.is_taken @[Top.scala 34:15]
    io.bpu_debug.predict_addr <= core.io.bpu_debug.predict_addr @[Top.scala 34:15]
    io.bpu_debug.predict_branch <= core.io.bpu_debug.predict_branch @[Top.scala 34:15]
    io.bpu_debug.fetched_mask <= core.io.bpu_debug.fetched_mask @[Top.scala 34:15]
    io.bpu_debug.branch_mask <= core.io.bpu_debug.branch_mask @[Top.scala 34:15]
    
